INFO  13:38:50,561 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:38:50,636 - #2 program
INFO  13:38:50,636 - #20 Pro
INFO  13:38:50,636 - #7 const
INFO  13:38:50,636 - #20 int
INFO  13:38:50,641 - #20 size
INFO  13:38:50,641 - #37 =
INFO  13:38:50,641 - #21 10
INFO  13:38:50,641 - #40 ;
INFO  13:38:50,641 - #4 class
INFO  13:38:50,641 - #20 Table
INFO  13:38:50,641 - #47 {
INFO  13:38:50,641 - #20 int
INFO  13:38:50,641 - #20 pos
INFO  13:38:50,641 - #45 [
INFO  13:38:50,641 - #46 ]
INFO  13:38:50,641 - #41 ,
INFO  13:38:50,646 - #20 neg
INFO  13:38:50,646 - #45 [
INFO  13:38:50,646 - #46 ]
INFO  13:38:50,646 - #40 ;
INFO  13:38:50,646 - #47 {
INFO  13:38:50,646 - #16 void
INFO  13:38:50,646 - #20 putp
INFO  13:38:50,646 - #43 (
INFO  13:38:50,646 - #20 int
INFO  13:38:50,646 - #20 a
INFO  13:38:50,646 - #41 ,
INFO  13:38:50,651 - #20 int
INFO  13:38:50,651 - #20 idx
INFO  13:38:50,651 - #44 )
INFO  13:38:50,651 - #47 {
INFO  13:38:50,651 - #20 this
INFO  13:38:50,651 - #42 .
INFO  13:38:50,651 - #20 pos
INFO  13:38:50,651 - #45 [
INFO  13:38:50,651 - #20 idx
INFO  13:38:50,651 - #46 ]
INFO  13:38:50,651 - #37 =
INFO  13:38:50,651 - #20 a
INFO  13:38:50,651 - #40 ;
INFO  13:38:50,651 - #48 }
INFO  13:38:50,651 - #16 void
INFO  13:38:50,656 - #20 putn
INFO  13:38:50,656 - #43 (
INFO  13:38:50,656 - #20 int
INFO  13:38:50,656 - #20 a
INFO  13:38:50,656 - #41 ,
INFO  13:38:50,656 - #20 int
INFO  13:38:50,656 - #20 idx
INFO  13:38:50,656 - #44 )
INFO  13:38:50,656 - #47 {
INFO  13:38:50,656 - #20 this
INFO  13:38:50,656 - #42 .
INFO  13:38:50,656 - #20 neg
INFO  13:38:50,656 - #45 [
INFO  13:38:50,656 - #20 idx
INFO  13:38:50,656 - #46 ]
INFO  13:38:50,656 - #37 =
INFO  13:38:50,656 - #20 a
INFO  13:38:50,656 - #40 ;
INFO  13:38:50,656 - #48 }
INFO  13:38:50,656 - #20 int
INFO  13:38:50,656 - #20 getp
INFO  13:38:50,656 - #43 (
INFO  13:38:50,656 - #20 int
INFO  13:38:50,656 - #20 idx
INFO  13:38:50,656 - #44 )
INFO  13:38:50,656 - #47 {
INFO  13:38:50,656 - #15 return
INFO  13:38:50,656 - #20 pos
INFO  13:38:50,656 - #45 [
INFO  13:38:50,656 - #20 idx
INFO  13:38:50,656 - #46 ]
INFO  13:38:50,661 - #40 ;
INFO  13:38:50,661 - #48 }
INFO  13:38:50,661 - #20 int
INFO  13:38:50,661 - #20 getn
INFO  13:38:50,661 - #43 (
INFO  13:38:50,661 - #20 int
INFO  13:38:50,661 - #20 idx
INFO  13:38:50,661 - #44 )
INFO  13:38:50,661 - #47 {
INFO  13:38:50,661 - #15 return
INFO  13:38:50,661 - #20 neg
INFO  13:38:50,661 - #45 [
INFO  13:38:50,661 - #20 idx
INFO  13:38:50,661 - #46 ]
INFO  13:38:50,661 - #40 ;
INFO  13:38:50,661 - #48 }
INFO  13:38:50,661 - #48 }
INFO  13:38:50,661 - #48 }
INFO  13:38:50,661 - #20 Table
INFO  13:38:50,661 - #20 val
INFO  13:38:50,661 - #40 ;
INFO  13:38:50,661 - #47 {
INFO  13:38:50,661 - #16 void
INFO  13:38:50,666 - #20 f
INFO  13:38:50,666 - #43 (
INFO  13:38:50,666 - #20 char
INFO  13:38:50,666 - #20 ch
INFO  13:38:50,666 - #41 ,
INFO  13:38:50,666 - #20 int
INFO  13:38:50,666 - #20 a
INFO  13:38:50,666 - #41 ,
INFO  13:38:50,666 - #20 int
INFO  13:38:50,666 - #20 arg
INFO  13:38:50,666 - #44 )
INFO  13:38:50,666 - #20 int
INFO  13:38:50,666 - #20 x
INFO  13:38:50,666 - #40 ;
INFO  13:38:50,666 - #47 {
INFO  13:38:50,666 - #20 x
INFO  13:38:50,666 - #37 =
INFO  13:38:50,666 - #20 arg
INFO  13:38:50,666 - #40 ;
INFO  13:38:50,666 - #48 }
INFO  13:38:50,666 - #16 void
INFO  13:38:50,666 - #20 main
INFO  13:38:50,666 - #43 (
INFO  13:38:50,666 - #44 )
INFO  13:38:50,666 - #20 int
INFO  13:38:50,666 - #20 x
INFO  13:38:50,666 - #41 ,
INFO  13:38:50,666 - #20 i
INFO  13:38:50,666 - #40 ;
INFO  13:38:50,666 - #20 char
INFO  13:38:50,666 - #20 c
INFO  13:38:50,666 - #40 ;
INFO  13:38:50,666 - #47 {
INFO  13:38:50,666 - #20 val
INFO  13:38:50,666 - #37 =
INFO  13:38:50,666 - #12 new
INFO  13:38:50,671 - #20 Table
INFO  13:38:50,671 - #40 ;
INFO  13:38:50,671 - #20 val
INFO  13:38:50,671 - #42 .
INFO  13:38:50,671 - #20 pos
INFO  13:38:50,671 - #37 =
INFO  13:38:50,671 - #12 new
INFO  13:38:50,671 - #20 int
INFO  13:38:50,671 - #45 [
INFO  13:38:50,676 - #20 size
INFO  13:38:50,676 - #46 ]
INFO  13:38:50,676 - #40 ;
INFO  13:38:50,676 - #20 val
INFO  13:38:50,676 - #42 .
INFO  13:38:50,676 - #20 neg
INFO  13:38:50,676 - #37 =
INFO  13:38:50,676 - #12 new
INFO  13:38:50,676 - #20 int
INFO  13:38:50,676 - #45 [
INFO  13:38:50,676 - #20 size
INFO  13:38:50,676 - #46 ]
INFO  13:38:50,676 - #40 ;
INFO  13:38:50,676 - #20 i
INFO  13:38:50,676 - #37 =
INFO  13:38:50,676 - #21 0
INFO  13:38:50,676 - #40 ;
INFO  13:38:50,676 - #10 do
INFO  13:38:50,676 - #47 {
INFO  13:38:50,676 - #20 val
INFO  13:38:50,676 - #42 .
INFO  13:38:50,676 - #20 putp
INFO  13:38:50,676 - #43 (
INFO  13:38:50,676 - #21 0
INFO  13:38:50,676 - #41 ,
INFO  13:38:50,676 - #20 i
INFO  13:38:50,676 - #44 )
INFO  13:38:50,681 - #40 ;
INFO  13:38:50,681 - #20 val
INFO  13:38:50,681 - #42 .
INFO  13:38:50,681 - #20 putn
INFO  13:38:50,681 - #43 (
INFO  13:38:50,681 - #21 0
INFO  13:38:50,681 - #41 ,
INFO  13:38:50,681 - #20 i
INFO  13:38:50,681 - #44 )
INFO  13:38:50,681 - #40 ;
INFO  13:38:50,681 - #20 i
INFO  13:38:50,681 - #38 ++
INFO  13:38:50,681 - #40 ;
INFO  13:38:50,681 - #48 }
INFO  13:38:50,681 - #11 while
INFO  13:38:50,681 - #43 (
INFO  13:38:50,681 - #20 i
INFO  13:38:50,681 - #33 <
INFO  13:38:50,681 - #20 size
INFO  13:38:50,681 - #44 )
INFO  13:38:50,686 - #40 ;
INFO  13:38:50,686 - #20 f
INFO  13:38:50,686 - #43 (
INFO  13:38:50,686 - #20 c
INFO  13:38:50,686 - #41 ,
INFO  13:38:50,686 - #20 x
INFO  13:38:50,686 - #41 ,
INFO  13:38:50,686 - #20 i
INFO  13:38:50,686 - #44 )
INFO  13:38:50,686 - #40 ;
INFO  13:38:50,686 - #14 read
INFO  13:38:50,686 - #43 (
INFO  13:38:50,686 - #20 x
INFO  13:38:50,686 - #44 )
INFO  13:38:50,686 - #40 ;
INFO  13:38:50,686 - #10 do
INFO  13:38:50,686 - #47 {
INFO  13:38:50,686 - #8 if
INFO  13:38:50,686 - #43 (
INFO  13:38:50,686 - #20 x
INFO  13:38:50,686 - #34 <=
INFO  13:38:50,686 - #21 0
INFO  13:38:50,686 - #44 )
INFO  13:38:50,686 - #3 break
INFO  13:38:50,686 - #40 ;
INFO  13:38:50,686 - #8 if
INFO  13:38:50,686 - #43 (
INFO  13:38:50,691 - #21 0
INFO  13:38:50,691 - #34 <=
INFO  13:38:50,691 - #20 x
INFO  13:38:50,691 - #35 &&
INFO  13:38:50,691 - #20 x
INFO  13:38:50,691 - #33 <
INFO  13:38:50,691 - #20 size
INFO  13:38:50,691 - #44 )
INFO  13:38:50,691 - #47 {
INFO  13:38:50,691 - #20 val
INFO  13:38:50,691 - #42 .
INFO  13:38:50,691 - #20 putp
INFO  13:38:50,691 - #43 (
INFO  13:38:50,691 - #20 val
INFO  13:38:50,691 - #42 .
INFO  13:38:50,691 - #20 getp
INFO  13:38:50,691 - #43 (
INFO  13:38:50,691 - #20 x
INFO  13:38:50,691 - #44 )
INFO  13:38:50,691 - #24 +
INFO  13:38:50,691 - #21 1
INFO  13:38:50,691 - #44 )
INFO  13:38:50,691 - #40 ;
INFO  13:38:50,691 - #48 }
INFO  13:38:50,691 - #6 else
INFO  13:38:50,691 - #8 if
INFO  13:38:50,691 - #43 (
INFO  13:38:50,696 - #20 size
INFO  13:38:50,696 - #33 <
INFO  13:38:50,696 - #20 x
INFO  13:38:50,696 - #35 &&
INFO  13:38:50,696 - #20 x
INFO  13:38:50,696 - #33 <
INFO  13:38:50,696 - #21 0
INFO  13:38:50,696 - #44 )
INFO  13:38:50,696 - #47 {
INFO  13:38:50,696 - #20 val
INFO  13:38:50,696 - #42 .
INFO  13:38:50,696 - #20 putn
INFO  13:38:50,696 - #43 (
INFO  13:38:50,696 - #20 val
INFO  13:38:50,696 - #42 .
INFO  13:38:50,696 - #20 getn
INFO  13:38:50,696 - #43 (
INFO  13:38:50,696 - #20 x
INFO  13:38:50,696 - #44 )
INFO  13:38:50,696 - #24 +
INFO  13:38:50,696 - #21 1
INFO  13:38:50,701 - #44 )
INFO  13:38:50,701 - #40 ;
INFO  13:38:50,701 - #48 }
INFO  13:38:50,701 - #14 read
INFO  13:38:50,701 - #43 (
INFO  13:38:50,701 - #20 x
INFO  13:38:50,701 - #44 )
INFO  13:38:50,701 - #40 ;
INFO  13:38:50,701 - #48 }
INFO  13:38:50,701 - #11 while
INFO  13:38:50,701 - #43 (
INFO  13:38:50,701 - #23 true
INFO  13:38:50,701 - #44 )
INFO  13:38:50,701 - #40 ;
INFO  13:38:50,701 - #13 print
INFO  13:38:50,701 - #43 (
INFO  13:38:50,701 - #25 -
INFO  13:38:50,701 - #21 3
INFO  13:38:50,701 - #24 +
INFO  13:38:50,701 - #21 5
INFO  13:38:50,701 - #44 )
INFO  13:38:50,701 - #40 ;
INFO  13:38:50,701 - #13 print
INFO  13:38:50,701 - #43 (
INFO  13:38:50,701 - #22 v
INFO  13:38:50,701 - #44 )
INFO  13:38:50,701 - #40 ;
INFO  13:38:50,701 - #13 print
INFO  13:38:50,701 - #43 (
INFO  13:38:50,701 - #20 x
INFO  13:38:50,701 - #33 <
ERROR 13:38:50,701 - 
Sintaksna greska na liniji 50
ERROR 13:38:50,701 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 50
