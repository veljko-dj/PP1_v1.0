INFO  13:04:05,628 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:04:05,708 - #2 program
INFO  13:04:05,708 - #20 Pro
INFO  13:04:05,708 - #7 const
INFO  13:04:05,713 - #20 int
INFO  13:04:05,713 - #20 size
INFO  13:04:05,713 - #37 =
INFO  13:04:05,713 - #21 10
INFO  13:04:05,713 - #40 ;
INFO  13:04:05,713 - #4 class
INFO  13:04:05,713 - #20 Table
INFO  13:04:05,713 - #47 {
INFO  13:04:05,718 - #20 int
INFO  13:04:05,718 - #20 pos
INFO  13:04:05,718 - #45 [
INFO  13:04:05,718 - #46 ]
INFO  13:04:05,718 - #41 ,
INFO  13:04:05,718 - #20 neg
INFO  13:04:05,718 - #45 [
INFO  13:04:05,721 - #46 ]
INFO  13:04:05,721 - #40 ;
INFO  13:04:05,721 - #47 {
INFO  13:04:05,721 - #16 void
INFO  13:04:05,721 - #20 putp
INFO  13:04:05,721 - #43 (
INFO  13:04:05,721 - #20 int
INFO  13:04:05,721 - #20 a
INFO  13:04:05,721 - #41 ,
INFO  13:04:05,726 - #20 int
INFO  13:04:05,726 - #20 idx
INFO  13:04:05,726 - #44 )
INFO  13:04:05,726 - #47 {
INFO  13:04:05,726 - #20 this
INFO  13:04:05,726 - #42 .
INFO  13:04:05,726 - #20 pos
INFO  13:04:05,726 - #45 [
INFO  13:04:05,726 - #20 idx
INFO  13:04:05,726 - #46 ]
INFO  13:04:05,726 - #37 =
INFO  13:04:05,726 - #20 a
INFO  13:04:05,726 - #40 ;
INFO  13:04:05,726 - #48 }
INFO  13:04:05,726 - #16 void
INFO  13:04:05,726 - #20 putn
INFO  13:04:05,726 - #43 (
INFO  13:04:05,731 - #20 int
INFO  13:04:05,731 - #20 a
INFO  13:04:05,731 - #41 ,
INFO  13:04:05,731 - #20 int
INFO  13:04:05,731 - #20 idx
INFO  13:04:05,731 - #44 )
INFO  13:04:05,731 - #47 {
INFO  13:04:05,731 - #20 this
INFO  13:04:05,731 - #42 .
INFO  13:04:05,731 - #20 neg
INFO  13:04:05,731 - #45 [
INFO  13:04:05,731 - #20 idx
INFO  13:04:05,731 - #46 ]
INFO  13:04:05,731 - #37 =
INFO  13:04:05,731 - #20 a
INFO  13:04:05,731 - #40 ;
INFO  13:04:05,731 - #48 }
INFO  13:04:05,731 - #20 int
INFO  13:04:05,731 - #20 getp
INFO  13:04:05,731 - #43 (
INFO  13:04:05,731 - #20 int
INFO  13:04:05,731 - #20 idx
INFO  13:04:05,736 - #44 )
INFO  13:04:05,736 - #47 {
INFO  13:04:05,741 - #15 return
INFO  13:04:05,741 - #20 pos
INFO  13:04:05,741 - #45 [
INFO  13:04:05,741 - #20 idx
INFO  13:04:05,741 - #46 ]
INFO  13:04:05,741 - #40 ;
INFO  13:04:05,741 - #48 }
INFO  13:04:05,741 - #20 int
INFO  13:04:05,741 - #20 getn
INFO  13:04:05,741 - #43 (
INFO  13:04:05,741 - #20 int
INFO  13:04:05,741 - #20 idx
INFO  13:04:05,741 - #44 )
INFO  13:04:05,741 - #47 {
INFO  13:04:05,741 - #15 return
INFO  13:04:05,741 - #20 neg
INFO  13:04:05,741 - #45 [
INFO  13:04:05,741 - #20 idx
INFO  13:04:05,741 - #46 ]
INFO  13:04:05,741 - #40 ;
INFO  13:04:05,741 - #48 }
INFO  13:04:05,741 - #48 }
INFO  13:04:05,741 - #48 }
INFO  13:04:05,741 - #20 Table
INFO  13:04:05,741 - #20 val
INFO  13:04:05,746 - #40 ;
INFO  13:04:05,746 - #47 {
INFO  13:04:05,746 - #16 void
INFO  13:04:05,746 - #20 f
INFO  13:04:05,746 - #43 (
INFO  13:04:05,746 - #20 char
INFO  13:04:05,746 - #20 ch
INFO  13:04:05,746 - #41 ,
INFO  13:04:05,746 - #20 int
INFO  13:04:05,746 - #20 a
INFO  13:04:05,746 - #41 ,
INFO  13:04:05,746 - #20 int
INFO  13:04:05,746 - #20 arg
INFO  13:04:05,746 - #44 )
INFO  13:04:05,746 - #20 int
INFO  13:04:05,746 - #20 x
INFO  13:04:05,746 - #40 ;
INFO  13:04:05,746 - #47 {
INFO  13:04:05,746 - #20 x
INFO  13:04:05,746 - #37 =
INFO  13:04:05,746 - #20 arg
INFO  13:04:05,746 - #40 ;
INFO  13:04:05,746 - #48 }
INFO  13:04:05,746 - #16 void
INFO  13:04:05,751 - #20 main
INFO  13:04:05,751 - #43 (
INFO  13:04:05,751 - #44 )
INFO  13:04:05,751 - #20 int
INFO  13:04:05,751 - #20 x
INFO  13:04:05,751 - #41 ,
INFO  13:04:05,751 - #20 i
INFO  13:04:05,751 - #40 ;
INFO  13:04:05,751 - #20 char
INFO  13:04:05,751 - #20 c
INFO  13:04:05,751 - #40 ;
INFO  13:04:05,751 - #47 {
INFO  13:04:05,751 - #20 val
INFO  13:04:05,751 - #37 =
INFO  13:04:05,751 - #12 new
INFO  13:04:05,751 - #20 Table
INFO  13:04:05,751 - #40 ;
INFO  13:04:05,756 - #20 val
INFO  13:04:05,756 - #42 .
INFO  13:04:05,756 - #20 pos
INFO  13:04:05,756 - #37 =
INFO  13:04:05,756 - #12 new
INFO  13:04:05,756 - #20 int
INFO  13:04:05,756 - #45 [
INFO  13:04:05,756 - #20 size
INFO  13:04:05,756 - #46 ]
INFO  13:04:05,756 - #40 ;
INFO  13:04:05,756 - #20 val
INFO  13:04:05,756 - #42 .
INFO  13:04:05,756 - #20 neg
INFO  13:04:05,756 - #37 =
INFO  13:04:05,756 - #12 new
INFO  13:04:05,756 - #20 int
INFO  13:04:05,756 - #45 [
INFO  13:04:05,756 - #20 size
INFO  13:04:05,756 - #46 ]
INFO  13:04:05,756 - #40 ;
INFO  13:04:05,756 - #20 i
INFO  13:04:05,756 - #37 =
INFO  13:04:05,756 - #21 0
INFO  13:04:05,756 - #40 ;
INFO  13:04:05,756 - #10 do
INFO  13:04:05,756 - #47 {
INFO  13:04:05,756 - #20 val
INFO  13:04:05,756 - #42 .
INFO  13:04:05,756 - #20 putp
INFO  13:04:05,756 - #43 (
INFO  13:04:05,756 - #21 0
INFO  13:04:05,756 - #41 ,
INFO  13:04:05,756 - #20 i
INFO  13:04:05,756 - #44 )
INFO  13:04:05,761 - #40 ;
INFO  13:04:05,761 - #20 val
INFO  13:04:05,761 - #42 .
INFO  13:04:05,761 - #20 putn
INFO  13:04:05,761 - #43 (
INFO  13:04:05,761 - #21 0
INFO  13:04:05,761 - #41 ,
INFO  13:04:05,761 - #20 i
INFO  13:04:05,761 - #44 )
INFO  13:04:05,761 - #40 ;
INFO  13:04:05,761 - #20 i
INFO  13:04:05,761 - #38 ++
INFO  13:04:05,761 - #40 ;
INFO  13:04:05,761 - #48 }
INFO  13:04:05,761 - #11 while
INFO  13:04:05,761 - #43 (
INFO  13:04:05,761 - #20 i
INFO  13:04:05,761 - #33 <
INFO  13:04:05,761 - #20 size
INFO  13:04:05,766 - #44 )
INFO  13:04:05,766 - #40 ;
INFO  13:04:05,766 - #20 f
INFO  13:04:05,766 - #43 (
INFO  13:04:05,766 - #20 c
INFO  13:04:05,766 - #41 ,
INFO  13:04:05,766 - #20 x
INFO  13:04:05,766 - #41 ,
INFO  13:04:05,766 - #20 i
INFO  13:04:05,766 - #44 )
INFO  13:04:05,766 - #40 ;
INFO  13:04:05,766 - #14 read
INFO  13:04:05,766 - #43 (
INFO  13:04:05,766 - #20 x
INFO  13:04:05,766 - #44 )
INFO  13:04:05,766 - #40 ;
INFO  13:04:05,766 - #10 do
INFO  13:04:05,766 - #47 {
INFO  13:04:05,766 - #8 if
INFO  13:04:05,771 - #43 (
INFO  13:04:05,771 - #20 x
INFO  13:04:05,771 - #34 <=
INFO  13:04:05,771 - #21 0
INFO  13:04:05,771 - #44 )
INFO  13:04:05,771 - #3 break
INFO  13:04:05,771 - #40 ;
INFO  13:04:05,771 - #8 if
INFO  13:04:05,771 - #43 (
INFO  13:04:05,771 - #21 0
INFO  13:04:05,771 - #34 <=
INFO  13:04:05,771 - #20 x
INFO  13:04:05,771 - #35 &&
INFO  13:04:05,771 - #20 x
INFO  13:04:05,771 - #33 <
INFO  13:04:05,771 - #20 size
INFO  13:04:05,771 - #44 )
INFO  13:04:05,771 - #47 {
INFO  13:04:05,771 - #20 val
INFO  13:04:05,771 - #42 .
INFO  13:04:05,771 - #20 putp
INFO  13:04:05,771 - #43 (
INFO  13:04:05,771 - #20 val
INFO  13:04:05,771 - #42 .
INFO  13:04:05,771 - #20 getp
INFO  13:04:05,771 - #43 (
INFO  13:04:05,771 - #20 x
INFO  13:04:05,771 - #44 )
INFO  13:04:05,771 - #24 +
INFO  13:04:05,771 - #21 1
INFO  13:04:05,776 - #44 )
INFO  13:04:05,776 - #40 ;
INFO  13:04:05,776 - #48 }
INFO  13:04:05,776 - #6 else
INFO  13:04:05,776 - #8 if
INFO  13:04:05,776 - #43 (
INFO  13:04:05,776 - #20 size
INFO  13:04:05,776 - #33 <
INFO  13:04:05,776 - #20 x
INFO  13:04:05,776 - #35 &&
INFO  13:04:05,776 - #20 x
INFO  13:04:05,776 - #33 <
INFO  13:04:05,776 - #21 0
INFO  13:04:05,776 - #44 )
INFO  13:04:05,776 - #47 {
INFO  13:04:05,776 - #20 val
INFO  13:04:05,776 - #42 .
INFO  13:04:05,776 - #20 putn
INFO  13:04:05,776 - #43 (
INFO  13:04:05,776 - #20 val
INFO  13:04:05,776 - #42 .
INFO  13:04:05,776 - #20 getn
INFO  13:04:05,776 - #43 (
INFO  13:04:05,776 - #20 x
INFO  13:04:05,776 - #44 )
INFO  13:04:05,776 - #24 +
INFO  13:04:05,776 - #21 1
INFO  13:04:05,776 - #44 )
INFO  13:04:05,776 - #40 ;
INFO  13:04:05,776 - #48 }
INFO  13:04:05,781 - #14 read
INFO  13:04:05,781 - #43 (
INFO  13:04:05,781 - #20 x
INFO  13:04:05,781 - #44 )
INFO  13:04:05,781 - #40 ;
INFO  13:04:05,781 - #48 }
INFO  13:04:05,781 - #11 while
INFO  13:04:05,781 - #43 (
INFO  13:04:05,781 - #23 true
INFO  13:04:05,781 - #44 )
INFO  13:04:05,781 - #40 ;
INFO  13:04:05,781 - #13 print
INFO  13:04:05,781 - #43 (
INFO  13:04:05,781 - #25 -
INFO  13:04:05,781 - #21 3
INFO  13:04:05,781 - #24 +
INFO  13:04:05,781 - #21 5
INFO  13:04:05,781 - #44 )
INFO  13:04:05,781 - #40 ;
INFO  13:04:05,781 - #13 print
INFO  13:04:05,786 - #43 (
INFO  13:04:05,786 - #20 v
INFO  13:04:05,786 - #44 )
INFO  13:04:05,786 - #40 ;
INFO  13:04:05,786 - #13 print
INFO  13:04:05,786 - #43 (
INFO  13:04:05,786 - #22 'v'
INFO  13:04:05,786 - #44 )
