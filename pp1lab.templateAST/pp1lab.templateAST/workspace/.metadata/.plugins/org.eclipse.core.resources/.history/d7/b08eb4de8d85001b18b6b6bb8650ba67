INFO  13:30:15,852 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:30:15,912 - #2 program
INFO  13:30:15,912 - #20 Pro
INFO  13:30:15,912 - #7 const
INFO  13:30:15,912 - #20 int
INFO  13:30:15,912 - #20 size
INFO  13:30:15,917 - #37 =
INFO  13:30:15,917 - #21 10
INFO  13:30:15,917 - #40 ;
INFO  13:30:15,917 - #4 class
INFO  13:30:15,917 - #20 Table
INFO  13:30:15,917 - #47 {
INFO  13:30:15,917 - #20 int
INFO  13:30:15,917 - #20 pos
INFO  13:30:15,917 - #45 [
INFO  13:30:15,917 - #46 ]
INFO  13:30:15,917 - #41 ,
INFO  13:30:15,917 - #20 neg
INFO  13:30:15,917 - #45 [
INFO  13:30:15,922 - #46 ]
INFO  13:30:15,922 - #40 ;
INFO  13:30:15,922 - #47 {
INFO  13:30:15,922 - #16 void
INFO  13:30:15,922 - #20 putp
INFO  13:30:15,922 - #43 (
INFO  13:30:15,922 - #20 int
INFO  13:30:15,922 - #20 a
INFO  13:30:15,922 - #41 ,
INFO  13:30:15,922 - #20 int
INFO  13:30:15,922 - #20 idx
INFO  13:30:15,922 - #44 )
INFO  13:30:15,922 - #47 {
INFO  13:30:15,922 - #20 this
INFO  13:30:15,922 - #42 .
INFO  13:30:15,927 - #20 pos
INFO  13:30:15,927 - #45 [
INFO  13:30:15,927 - #20 idx
INFO  13:30:15,927 - #46 ]
INFO  13:30:15,927 - #37 =
INFO  13:30:15,927 - #20 a
INFO  13:30:15,927 - #40 ;
INFO  13:30:15,927 - #48 }
INFO  13:30:15,927 - #16 void
INFO  13:30:15,927 - #20 putn
INFO  13:30:15,927 - #43 (
INFO  13:30:15,927 - #20 int
INFO  13:30:15,927 - #20 a
INFO  13:30:15,927 - #41 ,
INFO  13:30:15,927 - #20 int
INFO  13:30:15,927 - #20 idx
INFO  13:30:15,927 - #44 )
INFO  13:30:15,927 - #47 {
INFO  13:30:15,932 - #20 this
INFO  13:30:15,932 - #42 .
INFO  13:30:15,932 - #20 neg
INFO  13:30:15,932 - #45 [
INFO  13:30:15,932 - #20 idx
INFO  13:30:15,932 - #46 ]
INFO  13:30:15,932 - #37 =
INFO  13:30:15,932 - #20 a
INFO  13:30:15,932 - #40 ;
INFO  13:30:15,932 - #48 }
INFO  13:30:15,932 - #20 int
INFO  13:30:15,932 - #20 getp
INFO  13:30:15,932 - #43 (
INFO  13:30:15,932 - #20 int
INFO  13:30:15,932 - #20 idx
INFO  13:30:15,932 - #44 )
INFO  13:30:15,932 - #47 {
INFO  13:30:15,937 - #15 return
INFO  13:30:15,937 - #20 pos
INFO  13:30:15,937 - #45 [
INFO  13:30:15,937 - #20 idx
INFO  13:30:15,937 - #46 ]
INFO  13:30:15,937 - #40 ;
INFO  13:30:15,937 - #48 }
INFO  13:30:15,937 - #20 int
INFO  13:30:15,937 - #20 getn
INFO  13:30:15,937 - #43 (
INFO  13:30:15,937 - #20 int
INFO  13:30:15,937 - #20 idx
INFO  13:30:15,937 - #44 )
INFO  13:30:15,937 - #47 {
INFO  13:30:15,937 - #15 return
INFO  13:30:15,937 - #20 neg
INFO  13:30:15,937 - #45 [
INFO  13:30:15,937 - #20 idx
INFO  13:30:15,937 - #46 ]
INFO  13:30:15,937 - #40 ;
INFO  13:30:15,937 - #48 }
INFO  13:30:15,937 - #48 }
INFO  13:30:15,937 - #48 }
INFO  13:30:15,937 - #20 Table
INFO  13:30:15,942 - #20 val
INFO  13:30:15,942 - #40 ;
INFO  13:30:15,942 - #47 {
INFO  13:30:15,942 - #16 void
INFO  13:30:15,942 - #20 f
INFO  13:30:15,942 - #43 (
INFO  13:30:15,942 - #20 char
INFO  13:30:15,942 - #20 ch
INFO  13:30:15,942 - #41 ,
INFO  13:30:15,942 - #20 int
INFO  13:30:15,942 - #20 a
INFO  13:30:15,942 - #41 ,
INFO  13:30:15,942 - #20 int
INFO  13:30:15,942 - #20 arg
INFO  13:30:15,942 - #44 )
INFO  13:30:15,942 - #20 int
INFO  13:30:15,942 - #20 x
INFO  13:30:15,942 - #40 ;
INFO  13:30:15,942 - #47 {
INFO  13:30:15,942 - #20 x
INFO  13:30:15,942 - #37 =
INFO  13:30:15,942 - #20 arg
INFO  13:30:15,942 - #40 ;
INFO  13:30:15,942 - #48 }
INFO  13:30:15,942 - #16 void
INFO  13:30:15,942 - #20 main
INFO  13:30:15,942 - #43 (
INFO  13:30:15,942 - #44 )
INFO  13:30:15,947 - #20 int
INFO  13:30:15,947 - #20 x
INFO  13:30:15,947 - #41 ,
INFO  13:30:15,947 - #20 i
INFO  13:30:15,947 - #40 ;
INFO  13:30:15,947 - #20 char
INFO  13:30:15,947 - #20 c
INFO  13:30:15,947 - #40 ;
INFO  13:30:15,947 - #47 {
INFO  13:30:15,947 - #20 val
INFO  13:30:15,947 - #37 =
INFO  13:30:15,947 - #12 new
INFO  13:30:15,947 - #20 Table
INFO  13:30:15,947 - #40 ;
INFO  13:30:15,947 - #20 val
INFO  13:30:15,947 - #42 .
INFO  13:30:15,947 - #20 pos
INFO  13:30:15,947 - #37 =
INFO  13:30:15,947 - #12 new
INFO  13:30:15,947 - #20 int
INFO  13:30:15,947 - #45 [
INFO  13:30:15,947 - #20 size
INFO  13:30:15,947 - #46 ]
INFO  13:30:15,947 - #40 ;
INFO  13:30:15,947 - #20 val
INFO  13:30:15,947 - #42 .
INFO  13:30:15,947 - #20 neg
INFO  13:30:15,947 - #37 =
INFO  13:30:15,947 - #12 new
INFO  13:30:15,947 - #20 int
INFO  13:30:15,947 - #45 [
INFO  13:30:15,947 - #20 size
INFO  13:30:15,947 - #46 ]
INFO  13:30:15,947 - #40 ;
INFO  13:30:15,947 - #20 i
INFO  13:30:15,952 - #37 =
INFO  13:30:15,952 - #21 0
INFO  13:30:15,952 - #40 ;
INFO  13:30:15,952 - #10 do
INFO  13:30:15,952 - #47 {
INFO  13:30:15,952 - #20 val
INFO  13:30:15,952 - #42 .
INFO  13:30:15,952 - #20 putp
INFO  13:30:15,952 - #43 (
INFO  13:30:15,952 - #21 0
INFO  13:30:15,952 - #41 ,
INFO  13:30:15,952 - #20 i
INFO  13:30:15,952 - #44 )
INFO  13:30:15,952 - #40 ;
INFO  13:30:15,952 - #20 val
INFO  13:30:15,952 - #42 .
INFO  13:30:15,952 - #20 putn
INFO  13:30:15,952 - #43 (
INFO  13:30:15,952 - #21 0
INFO  13:30:15,952 - #41 ,
INFO  13:30:15,952 - #20 i
INFO  13:30:15,952 - #44 )
INFO  13:30:15,952 - #40 ;
INFO  13:30:15,952 - #20 i
INFO  13:30:15,952 - #38 ++
INFO  13:30:15,952 - #40 ;
INFO  13:30:15,952 - #48 }
INFO  13:30:15,952 - #11 while
INFO  13:30:15,952 - #43 (
INFO  13:30:15,952 - #20 i
INFO  13:30:15,952 - #33 <
INFO  13:30:15,952 - #20 size
INFO  13:30:15,957 - #44 )
INFO  13:30:15,957 - #40 ;
INFO  13:30:15,957 - #20 f
INFO  13:30:15,957 - #43 (
INFO  13:30:15,957 - #20 c
INFO  13:30:15,957 - #41 ,
INFO  13:30:15,957 - #20 x
INFO  13:30:15,957 - #41 ,
INFO  13:30:15,957 - #20 i
INFO  13:30:15,957 - #44 )
INFO  13:30:15,957 - #40 ;
INFO  13:30:15,957 - #14 read
INFO  13:30:15,957 - #43 (
INFO  13:30:15,957 - #20 x
INFO  13:30:15,957 - #44 )
INFO  13:30:15,957 - #40 ;
INFO  13:30:15,957 - #10 do
INFO  13:30:15,957 - #47 {
INFO  13:30:15,957 - #8 if
INFO  13:30:15,957 - #43 (
INFO  13:30:15,957 - #20 x
INFO  13:30:15,957 - #34 <=
INFO  13:30:15,957 - #21 0
INFO  13:30:15,962 - #44 )
INFO  13:30:15,962 - #3 break
INFO  13:30:15,962 - #40 ;
INFO  13:30:15,962 - #8 if
INFO  13:30:15,962 - #43 (
INFO  13:30:15,962 - #21 0
INFO  13:30:15,962 - #34 <=
INFO  13:30:15,962 - #20 x
INFO  13:30:15,962 - #35 &&
INFO  13:30:15,962 - #20 x
INFO  13:30:15,962 - #33 <
INFO  13:30:15,962 - #20 size
INFO  13:30:15,962 - #44 )
INFO  13:30:15,962 - #47 {
INFO  13:30:15,962 - #20 val
INFO  13:30:15,962 - #42 .
INFO  13:30:15,962 - #20 putp
INFO  13:30:15,962 - #43 (
INFO  13:30:15,962 - #20 val
INFO  13:30:15,962 - #42 .
INFO  13:30:15,962 - #20 getp
INFO  13:30:15,962 - #43 (
INFO  13:30:15,962 - #20 x
INFO  13:30:15,962 - #44 )
INFO  13:30:15,962 - #24 +
INFO  13:30:15,962 - #21 1
INFO  13:30:15,967 - #44 )
INFO  13:30:15,967 - #40 ;
INFO  13:30:15,967 - #48 }
INFO  13:30:15,967 - #6 else
INFO  13:30:15,967 - #8 if
INFO  13:30:15,967 - #43 (
INFO  13:30:15,967 - #20 size
INFO  13:30:15,967 - #33 <
INFO  13:30:15,967 - #20 x
INFO  13:30:15,967 - #35 &&
INFO  13:30:15,967 - #20 x
INFO  13:30:15,967 - #33 <
INFO  13:30:15,967 - #21 0
INFO  13:30:15,967 - #44 )
INFO  13:30:15,967 - #47 {
INFO  13:30:15,967 - #20 val
INFO  13:30:15,967 - #42 .
INFO  13:30:15,967 - #20 putn
INFO  13:30:15,967 - #43 (
INFO  13:30:15,967 - #20 val
INFO  13:30:15,967 - #42 .
INFO  13:30:15,967 - #20 getn
INFO  13:30:15,967 - #43 (
INFO  13:30:15,967 - #20 x
INFO  13:30:15,967 - #44 )
INFO  13:30:15,967 - #24 +
INFO  13:30:15,967 - #21 1
INFO  13:30:15,967 - #44 )
INFO  13:30:15,967 - #40 ;
INFO  13:30:15,967 - #48 }
INFO  13:30:15,967 - #14 read
INFO  13:30:15,972 - #43 (
INFO  13:30:15,972 - #20 x
INFO  13:30:15,972 - #44 )
INFO  13:30:15,972 - #40 ;
INFO  13:30:15,972 - #48 }
INFO  13:30:15,972 - #11 while
INFO  13:30:15,972 - #43 (
INFO  13:30:15,972 - #23 true
INFO  13:30:15,972 - #44 )
INFO  13:30:15,972 - #40 ;
INFO  13:30:15,972 - #13 print
INFO  13:30:15,972 - #43 (
INFO  13:30:15,972 - #25 -
INFO  13:30:15,972 - #21 3
INFO  13:30:15,972 - #24 +
INFO  13:30:15,972 - #21 5
INFO  13:30:15,972 - #44 )
INFO  13:30:15,972 - #40 ;
INFO  13:30:15,972 - #13 print
INFO  13:30:15,972 - #43 (
INFO  13:30:15,972 - #22 v
INFO  13:30:15,972 - #44 )
INFO  13:30:15,972 - #40 ;
INFO  13:30:15,972 - #13 print
INFO  13:30:15,972 - #43 (
INFO  13:30:15,972 - #20 x
INFO  13:30:15,972 - #33 <
ERROR 13:30:15,972 - 
Sintaksna greska na liniji 51
ERROR 13:30:15,972 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 51
