INFO  12:45:30,600 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:45:30,665 - #2 program
INFO  12:45:30,665 - #20 Pro
INFO  12:45:30,665 - #7 const
INFO  12:45:30,665 - #20 int
INFO  12:45:30,665 - #20 size
INFO  12:45:30,665 - #37 =
INFO  12:45:30,665 - #21 10
INFO  12:45:30,665 - #40 ;
INFO  12:45:30,665 - #4 class
INFO  12:45:30,670 - #20 Table
INFO  12:45:30,670 - #47 {
INFO  12:45:30,670 - #20 int
INFO  12:45:30,670 - #20 pos
INFO  12:45:30,670 - #45 [
INFO  12:45:30,670 - #46 ]
INFO  12:45:30,670 - #41 ,
INFO  12:45:30,670 - #20 neg
INFO  12:45:30,670 - #45 [
INFO  12:45:30,673 - #46 ]
INFO  12:45:30,673 - #40 ;
INFO  12:45:30,673 - #47 {
INFO  12:45:30,673 - #16 void
INFO  12:45:30,673 - #20 putp
INFO  12:45:30,673 - #43 (
INFO  12:45:30,673 - #20 int
INFO  12:45:30,673 - #20 a
INFO  12:45:30,673 - #41 ,
INFO  12:45:30,673 - #20 int
INFO  12:45:30,673 - #20 idx
INFO  12:45:30,673 - #44 )
INFO  12:45:30,673 - #47 {
INFO  12:45:30,673 - #20 this
INFO  12:45:30,673 - #42 .
INFO  12:45:30,673 - #20 pos
INFO  12:45:30,673 - #45 [
INFO  12:45:30,678 - #20 idx
INFO  12:45:30,678 - #46 ]
INFO  12:45:30,678 - #37 =
INFO  12:45:30,678 - #20 a
INFO  12:45:30,678 - #40 ;
INFO  12:45:30,678 - #48 }
INFO  12:45:30,678 - #16 void
INFO  12:45:30,678 - #20 putn
INFO  12:45:30,678 - #43 (
INFO  12:45:30,678 - #20 int
INFO  12:45:30,678 - #20 a
INFO  12:45:30,678 - #41 ,
INFO  12:45:30,678 - #20 int
INFO  12:45:30,678 - #20 idx
INFO  12:45:30,678 - #44 )
INFO  12:45:30,678 - #47 {
INFO  12:45:30,678 - #20 this
INFO  12:45:30,683 - #42 .
INFO  12:45:30,683 - #20 neg
INFO  12:45:30,683 - #45 [
INFO  12:45:30,683 - #20 idx
INFO  12:45:30,683 - #46 ]
INFO  12:45:30,683 - #37 =
INFO  12:45:30,683 - #20 a
INFO  12:45:30,683 - #40 ;
INFO  12:45:30,683 - #48 }
INFO  12:45:30,683 - #20 int
INFO  12:45:30,683 - #20 getp
INFO  12:45:30,683 - #43 (
INFO  12:45:30,683 - #20 int
INFO  12:45:30,683 - #20 idx
INFO  12:45:30,683 - #44 )
INFO  12:45:30,683 - #47 {
INFO  12:45:30,683 - #15 return
INFO  12:45:30,688 - #20 pos
INFO  12:45:30,688 - #45 [
INFO  12:45:30,688 - #20 idx
INFO  12:45:30,688 - #46 ]
INFO  12:45:30,688 - #40 ;
INFO  12:45:30,688 - #48 }
INFO  12:45:30,688 - #20 int
INFO  12:45:30,688 - #20 getn
INFO  12:45:30,688 - #43 (
INFO  12:45:30,688 - #20 int
INFO  12:45:30,688 - #20 idx
INFO  12:45:30,688 - #44 )
INFO  12:45:30,688 - #47 {
INFO  12:45:30,688 - #15 return
INFO  12:45:30,688 - #20 neg
INFO  12:45:30,688 - #45 [
INFO  12:45:30,688 - #20 idx
INFO  12:45:30,688 - #46 ]
INFO  12:45:30,688 - #40 ;
INFO  12:45:30,688 - #48 }
INFO  12:45:30,688 - #48 }
INFO  12:45:30,688 - #48 }
INFO  12:45:30,688 - #20 Table
INFO  12:45:30,688 - #20 val
INFO  12:45:30,688 - #40 ;
INFO  12:45:30,693 - #47 {
INFO  12:45:30,693 - #16 void
INFO  12:45:30,693 - #20 f
INFO  12:45:30,693 - #43 (
INFO  12:45:30,693 - #20 char
INFO  12:45:30,693 - #20 ch
INFO  12:45:30,693 - #41 ,
INFO  12:45:30,693 - #20 int
INFO  12:45:30,693 - #20 a
INFO  12:45:30,693 - #41 ,
INFO  12:45:30,693 - #20 int
INFO  12:45:30,693 - #20 arg
INFO  12:45:30,693 - #44 )
INFO  12:45:30,693 - #20 int
INFO  12:45:30,693 - #20 x
INFO  12:45:30,693 - #40 ;
INFO  12:45:30,693 - #47 {
INFO  12:45:30,693 - #20 x
INFO  12:45:30,693 - #37 =
INFO  12:45:30,693 - #20 arg
INFO  12:45:30,693 - #40 ;
INFO  12:45:30,693 - #48 }
INFO  12:45:30,693 - #16 void
INFO  12:45:30,693 - #20 main
INFO  12:45:30,693 - #43 (
INFO  12:45:30,693 - #44 )
INFO  12:45:30,693 - #20 int
INFO  12:45:30,693 - #20 x
INFO  12:45:30,693 - #41 ,
INFO  12:45:30,693 - #20 i
INFO  12:45:30,693 - #40 ;
INFO  12:45:30,693 - #20 char
INFO  12:45:30,693 - #20 c
INFO  12:45:30,693 - #40 ;
INFO  12:45:30,693 - #47 {
INFO  12:45:30,693 - #20 val
INFO  12:45:30,693 - #37 =
INFO  12:45:30,693 - #12 new
INFO  12:45:30,698 - #20 Table
INFO  12:45:30,698 - #40 ;
INFO  12:45:30,698 - #20 val
INFO  12:45:30,698 - #42 .
INFO  12:45:30,698 - #20 pos
INFO  12:45:30,698 - #37 =
INFO  12:45:30,703 - #12 new
INFO  12:45:30,703 - #20 int
INFO  12:45:30,703 - #45 [
INFO  12:45:30,703 - #20 size
INFO  12:45:30,703 - #46 ]
INFO  12:45:30,703 - #40 ;
INFO  12:45:30,703 - #20 val
INFO  12:45:30,703 - #42 .
INFO  12:45:30,703 - #20 neg
INFO  12:45:30,703 - #37 =
INFO  12:45:30,703 - #12 new
INFO  12:45:30,703 - #20 int
INFO  12:45:30,703 - #45 [
INFO  12:45:30,703 - #20 size
INFO  12:45:30,703 - #46 ]
INFO  12:45:30,703 - #40 ;
INFO  12:45:30,703 - #20 i
INFO  12:45:30,703 - #37 =
INFO  12:45:30,703 - #21 0
INFO  12:45:30,703 - #40 ;
INFO  12:45:30,703 - #10 do
INFO  12:45:30,703 - #47 {
INFO  12:45:30,703 - #20 val
INFO  12:45:30,703 - #42 .
INFO  12:45:30,703 - #20 putp
INFO  12:45:30,703 - #43 (
INFO  12:45:30,703 - #21 0
INFO  12:45:30,703 - #41 ,
INFO  12:45:30,703 - #20 i
INFO  12:45:30,703 - #44 )
INFO  12:45:30,703 - #40 ;
INFO  12:45:30,703 - #20 val
INFO  12:45:30,703 - #42 .
INFO  12:45:30,703 - #20 putn
INFO  12:45:30,703 - #43 (
INFO  12:45:30,703 - #21 0
INFO  12:45:30,703 - #41 ,
INFO  12:45:30,703 - #20 i
INFO  12:45:30,703 - #44 )
INFO  12:45:30,703 - #40 ;
INFO  12:45:30,703 - #20 i
INFO  12:45:30,708 - #38 ++
INFO  12:45:30,708 - #40 ;
INFO  12:45:30,708 - #48 }
INFO  12:45:30,708 - #11 while
INFO  12:45:30,708 - #43 (
INFO  12:45:30,708 - #20 i
INFO  12:45:30,708 - #33 <
INFO  12:45:30,708 - #20 size
INFO  12:45:30,708 - #44 )
INFO  12:45:30,708 - #40 ;
INFO  12:45:30,708 - #20 f
INFO  12:45:30,708 - #43 (
INFO  12:45:30,708 - #20 c
INFO  12:45:30,708 - #41 ,
INFO  12:45:30,708 - #20 x
INFO  12:45:30,708 - #41 ,
INFO  12:45:30,708 - #20 i
INFO  12:45:30,708 - #44 )
INFO  12:45:30,708 - #40 ;
INFO  12:45:30,708 - #14 read
INFO  12:45:30,708 - #43 (
INFO  12:45:30,708 - #20 x
INFO  12:45:30,708 - #44 )
INFO  12:45:30,708 - #40 ;
INFO  12:45:30,708 - #10 do
INFO  12:45:30,708 - #47 {
INFO  12:45:30,708 - #8 if
INFO  12:45:30,708 - #43 (
INFO  12:45:30,708 - #20 x
INFO  12:45:30,708 - #34 <=
INFO  12:45:30,713 - #21 0
INFO  12:45:30,713 - #44 )
INFO  12:45:30,713 - #3 break
INFO  12:45:30,713 - #40 ;
INFO  12:45:30,713 - #8 if
INFO  12:45:30,713 - #43 (
INFO  12:45:30,713 - #21 0
INFO  12:45:30,713 - #34 <=
INFO  12:45:30,713 - #20 x
INFO  12:45:30,713 - #35 &&
INFO  12:45:30,713 - #20 x
INFO  12:45:30,713 - #33 <
INFO  12:45:30,713 - #20 size
INFO  12:45:30,713 - #44 )
INFO  12:45:30,718 - #47 {
INFO  12:45:30,718 - #20 val
INFO  12:45:30,718 - #42 .
INFO  12:45:30,718 - #20 putp
INFO  12:45:30,718 - #43 (
INFO  12:45:30,718 - #20 val
INFO  12:45:30,718 - #42 .
INFO  12:45:30,718 - #20 getp
INFO  12:45:30,718 - #43 (
INFO  12:45:30,718 - #20 x
INFO  12:45:30,718 - #44 )
INFO  12:45:30,718 - #24 +
INFO  12:45:30,718 - #21 1
INFO  12:45:30,718 - #44 )
INFO  12:45:30,718 - #40 ;
INFO  12:45:30,718 - #48 }
INFO  12:45:30,718 - #6 else
INFO  12:45:30,718 - #8 if
INFO  12:45:30,718 - #43 (
INFO  12:45:30,718 - #20 size
INFO  12:45:30,718 - #33 <
INFO  12:45:30,718 - #20 x
INFO  12:45:30,718 - #35 &&
INFO  12:45:30,718 - #20 x
INFO  12:45:30,718 - #33 <
INFO  12:45:30,718 - #21 0
INFO  12:45:30,723 - #44 )
INFO  12:45:30,723 - #47 {
INFO  12:45:30,723 - #20 val
INFO  12:45:30,723 - #42 .
INFO  12:45:30,723 - #20 putn
INFO  12:45:30,723 - #43 (
INFO  12:45:30,723 - #20 val
INFO  12:45:30,723 - #42 .
INFO  12:45:30,723 - #20 getn
INFO  12:45:30,723 - #43 (
INFO  12:45:30,723 - #20 x
INFO  12:45:30,723 - #44 )
INFO  12:45:30,723 - #24 +
INFO  12:45:30,723 - #21 1
INFO  12:45:30,723 - #44 )
INFO  12:45:30,723 - #40 ;
INFO  12:45:30,723 - #48 }
INFO  12:45:30,723 - #14 read
INFO  12:45:30,723 - #43 (
INFO  12:45:30,723 - #20 x
INFO  12:45:30,723 - #44 )
INFO  12:45:30,723 - #40 ;
INFO  12:45:30,723 - #48 }
INFO  12:45:30,723 - #11 while
INFO  12:45:30,723 - #43 (
INFO  12:45:30,723 - #23 true
INFO  12:45:30,723 - #44 )
INFO  12:45:30,723 - #40 ;
INFO  12:45:30,723 - #13 print
INFO  12:45:30,723 - #43 (
INFO  12:45:30,723 - #21 3
INFO  12:45:30,728 - #44 )
INFO  12:45:30,728 - #40 ;
INFO  12:45:30,728 - #13 print
INFO  12:45:30,728 - #43 (
INFO  12:45:30,728 - #22 'x'
INFO  12:45:30,728 - #44 )
