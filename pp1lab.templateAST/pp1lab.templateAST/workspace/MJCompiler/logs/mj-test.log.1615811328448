INFO  13:28:44,909 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:28:44,959 - #2 program
INFO  13:28:44,959 - #20 Pro
INFO  13:28:44,959 - #7 const
INFO  13:28:44,959 - #20 int
INFO  13:28:44,959 - #20 size
INFO  13:28:44,959 - #37 =
INFO  13:28:44,959 - #21 10
INFO  13:28:44,959 - #40 ;
INFO  13:28:44,959 - #4 class
INFO  13:28:44,959 - #20 Table
INFO  13:28:44,959 - #47 {
INFO  13:28:44,959 - #20 int
INFO  13:28:44,959 - #20 pos
INFO  13:28:44,959 - #45 [
INFO  13:28:44,959 - #46 ]
INFO  13:28:44,959 - #41 ,
INFO  13:28:44,964 - #20 neg
INFO  13:28:44,964 - #45 [
INFO  13:28:44,964 - #46 ]
INFO  13:28:44,964 - #40 ;
INFO  13:28:44,964 - #47 {
INFO  13:28:44,964 - #16 void
INFO  13:28:44,964 - #20 putp
INFO  13:28:44,964 - #43 (
INFO  13:28:44,964 - #20 int
INFO  13:28:44,964 - #20 a
INFO  13:28:44,964 - #41 ,
INFO  13:28:44,964 - #20 int
INFO  13:28:44,964 - #20 idx
INFO  13:28:44,964 - #44 )
INFO  13:28:44,964 - #47 {
INFO  13:28:44,964 - #20 this
INFO  13:28:44,964 - #42 .
INFO  13:28:44,964 - #20 pos
INFO  13:28:44,964 - #45 [
INFO  13:28:44,964 - #20 idx
INFO  13:28:44,964 - #46 ]
INFO  13:28:44,964 - #37 =
INFO  13:28:44,964 - #20 a
INFO  13:28:44,964 - #40 ;
INFO  13:28:44,964 - #48 }
INFO  13:28:44,964 - #16 void
INFO  13:28:44,964 - #20 putn
INFO  13:28:44,964 - #43 (
INFO  13:28:44,964 - #20 int
INFO  13:28:44,964 - #20 a
INFO  13:28:44,964 - #41 ,
INFO  13:28:44,964 - #20 int
INFO  13:28:44,964 - #20 idx
INFO  13:28:44,964 - #44 )
INFO  13:28:44,964 - #47 {
INFO  13:28:44,964 - #20 this
INFO  13:28:44,964 - #42 .
INFO  13:28:44,964 - #20 neg
INFO  13:28:44,964 - #45 [
INFO  13:28:44,964 - #20 idx
INFO  13:28:44,964 - #46 ]
INFO  13:28:44,964 - #37 =
INFO  13:28:44,964 - #20 a
INFO  13:28:44,964 - #40 ;
INFO  13:28:44,969 - #48 }
INFO  13:28:44,969 - #20 int
INFO  13:28:44,969 - #20 getp
INFO  13:28:44,969 - #43 (
INFO  13:28:44,969 - #20 int
INFO  13:28:44,969 - #20 idx
INFO  13:28:44,969 - #44 )
INFO  13:28:44,969 - #47 {
INFO  13:28:44,969 - #15 return
INFO  13:28:44,969 - #20 pos
INFO  13:28:44,969 - #45 [
INFO  13:28:44,969 - #20 idx
INFO  13:28:44,969 - #46 ]
INFO  13:28:44,969 - #40 ;
INFO  13:28:44,969 - #48 }
INFO  13:28:44,969 - #20 int
INFO  13:28:44,969 - #20 getn
INFO  13:28:44,969 - #43 (
INFO  13:28:44,969 - #20 int
INFO  13:28:44,969 - #20 idx
INFO  13:28:44,969 - #44 )
INFO  13:28:44,969 - #47 {
INFO  13:28:44,969 - #15 return
INFO  13:28:44,969 - #20 neg
INFO  13:28:44,969 - #45 [
INFO  13:28:44,974 - #20 idx
INFO  13:28:44,974 - #46 ]
INFO  13:28:44,974 - #40 ;
INFO  13:28:44,974 - #48 }
INFO  13:28:44,974 - #48 }
INFO  13:28:44,974 - #48 }
INFO  13:28:44,974 - #20 Table
INFO  13:28:44,974 - #20 val
INFO  13:28:44,974 - #40 ;
INFO  13:28:44,974 - #47 {
INFO  13:28:44,974 - #16 void
INFO  13:28:44,974 - #20 f
INFO  13:28:44,974 - #43 (
INFO  13:28:44,974 - #20 char
INFO  13:28:44,974 - #20 ch
INFO  13:28:44,974 - #41 ,
INFO  13:28:44,974 - #20 int
INFO  13:28:44,974 - #20 a
INFO  13:28:44,974 - #41 ,
INFO  13:28:44,974 - #20 int
INFO  13:28:44,974 - #20 arg
INFO  13:28:44,974 - #44 )
INFO  13:28:44,974 - #20 int
INFO  13:28:44,979 - #20 x
INFO  13:28:44,979 - #40 ;
INFO  13:28:44,979 - #47 {
INFO  13:28:44,979 - #20 x
INFO  13:28:44,979 - #37 =
INFO  13:28:44,979 - #20 arg
INFO  13:28:44,979 - #40 ;
INFO  13:28:44,979 - #48 }
INFO  13:28:44,979 - #16 void
INFO  13:28:44,979 - #20 main
INFO  13:28:44,979 - #43 (
INFO  13:28:44,979 - #44 )
INFO  13:28:44,979 - #20 int
INFO  13:28:44,979 - #20 x
INFO  13:28:44,979 - #41 ,
INFO  13:28:44,979 - #20 i
INFO  13:28:44,979 - #40 ;
INFO  13:28:44,979 - #20 char
INFO  13:28:44,979 - #20 c
INFO  13:28:44,979 - #40 ;
INFO  13:28:44,979 - #47 {
INFO  13:28:44,979 - #20 val
INFO  13:28:44,979 - #37 =
INFO  13:28:44,979 - #12 new
INFO  13:28:44,989 - #20 Table
INFO  13:28:44,989 - #40 ;
INFO  13:28:44,989 - #20 val
INFO  13:28:44,989 - #42 .
INFO  13:28:44,989 - #20 pos
INFO  13:28:44,989 - #37 =
INFO  13:28:44,989 - #12 new
INFO  13:28:44,989 - #20 int
INFO  13:28:44,989 - #45 [
INFO  13:28:44,989 - #20 size
INFO  13:28:44,989 - #46 ]
INFO  13:28:44,989 - #40 ;
INFO  13:28:44,989 - #20 val
INFO  13:28:44,989 - #42 .
INFO  13:28:44,989 - #20 neg
INFO  13:28:44,989 - #37 =
INFO  13:28:44,989 - #12 new
INFO  13:28:44,989 - #20 int
INFO  13:28:44,989 - #45 [
INFO  13:28:44,989 - #20 size
INFO  13:28:44,989 - #46 ]
INFO  13:28:44,989 - #40 ;
INFO  13:28:44,989 - #20 i
INFO  13:28:44,989 - #37 =
INFO  13:28:44,989 - #21 0
INFO  13:28:44,989 - #40 ;
INFO  13:28:44,989 - #10 do
INFO  13:28:44,989 - #47 {
INFO  13:28:44,989 - #20 val
INFO  13:28:44,989 - #42 .
INFO  13:28:44,989 - #20 putp
INFO  13:28:44,989 - #43 (
INFO  13:28:44,994 - #21 0
INFO  13:28:44,994 - #41 ,
INFO  13:28:44,994 - #20 i
INFO  13:28:44,994 - #44 )
INFO  13:28:44,994 - #40 ;
INFO  13:28:44,994 - #20 val
INFO  13:28:44,994 - #42 .
INFO  13:28:44,994 - #20 putn
INFO  13:28:44,994 - #43 (
INFO  13:28:44,994 - #21 0
INFO  13:28:44,994 - #41 ,
INFO  13:28:44,994 - #20 i
INFO  13:28:44,994 - #44 )
INFO  13:28:44,994 - #40 ;
INFO  13:28:44,994 - #20 i
INFO  13:28:44,994 - #38 ++
INFO  13:28:44,994 - #40 ;
INFO  13:28:44,994 - #48 }
INFO  13:28:44,994 - #11 while
INFO  13:28:44,994 - #43 (
INFO  13:28:44,994 - #20 i
INFO  13:28:44,994 - #33 <
INFO  13:28:44,994 - #20 size
INFO  13:28:44,994 - #44 )
INFO  13:28:44,994 - #40 ;
INFO  13:28:44,994 - #20 f
INFO  13:28:44,994 - #43 (
INFO  13:28:44,994 - #20 c
INFO  13:28:44,994 - #41 ,
INFO  13:28:44,994 - #20 x
INFO  13:28:44,994 - #41 ,
INFO  13:28:44,999 - #20 i
INFO  13:28:44,999 - #44 )
INFO  13:28:44,999 - #40 ;
INFO  13:28:44,999 - #14 read
INFO  13:28:44,999 - #43 (
INFO  13:28:44,999 - #20 x
INFO  13:28:44,999 - #44 )
INFO  13:28:44,999 - #40 ;
INFO  13:28:44,999 - #10 do
INFO  13:28:44,999 - #47 {
INFO  13:28:44,999 - #8 if
INFO  13:28:44,999 - #43 (
INFO  13:28:44,999 - #20 x
INFO  13:28:44,999 - #34 <=
INFO  13:28:44,999 - #21 0
INFO  13:28:44,999 - #44 )
INFO  13:28:44,999 - #3 break
INFO  13:28:44,999 - #40 ;
INFO  13:28:44,999 - #8 if
INFO  13:28:44,999 - #43 (
INFO  13:28:44,999 - #21 0
INFO  13:28:44,999 - #34 <=
INFO  13:28:44,999 - #20 x
INFO  13:28:44,999 - #35 &&
INFO  13:28:44,999 - #20 x
INFO  13:28:44,999 - #33 <
INFO  13:28:44,999 - #20 size
INFO  13:28:44,999 - #44 )
INFO  13:28:44,999 - #47 {
INFO  13:28:44,999 - #20 val
INFO  13:28:44,999 - #42 .
INFO  13:28:44,999 - #20 putp
INFO  13:28:44,999 - #43 (
INFO  13:28:44,999 - #20 val
INFO  13:28:44,999 - #42 .
INFO  13:28:44,999 - #20 getp
INFO  13:28:44,999 - #43 (
INFO  13:28:45,004 - #20 x
INFO  13:28:45,004 - #44 )
INFO  13:28:45,004 - #24 +
INFO  13:28:45,004 - #21 1
INFO  13:28:45,004 - #44 )
INFO  13:28:45,004 - #40 ;
INFO  13:28:45,004 - #48 }
INFO  13:28:45,004 - #6 else
INFO  13:28:45,004 - #8 if
INFO  13:28:45,004 - #43 (
INFO  13:28:45,004 - #20 size
INFO  13:28:45,004 - #33 <
INFO  13:28:45,004 - #20 x
INFO  13:28:45,004 - #35 &&
INFO  13:28:45,004 - #20 x
INFO  13:28:45,004 - #33 <
INFO  13:28:45,004 - #21 0
INFO  13:28:45,004 - #44 )
INFO  13:28:45,004 - #47 {
INFO  13:28:45,004 - #20 val
INFO  13:28:45,004 - #42 .
INFO  13:28:45,004 - #20 putn
INFO  13:28:45,004 - #43 (
INFO  13:28:45,004 - #20 val
INFO  13:28:45,004 - #42 .
INFO  13:28:45,004 - #20 getn
INFO  13:28:45,004 - #43 (
INFO  13:28:45,004 - #20 x
INFO  13:28:45,004 - #44 )
INFO  13:28:45,009 - #24 +
INFO  13:28:45,009 - #21 1
INFO  13:28:45,009 - #44 )
INFO  13:28:45,009 - #40 ;
INFO  13:28:45,009 - #48 }
INFO  13:28:45,009 - #14 read
INFO  13:28:45,009 - #43 (
INFO  13:28:45,009 - #20 x
INFO  13:28:45,009 - #44 )
INFO  13:28:45,009 - #40 ;
INFO  13:28:45,009 - #48 }
INFO  13:28:45,009 - #11 while
INFO  13:28:45,009 - #43 (
INFO  13:28:45,009 - #23 true
INFO  13:28:45,009 - #44 )
INFO  13:28:45,009 - #40 ;
INFO  13:28:45,009 - #13 print
INFO  13:28:45,009 - #43 (
INFO  13:28:45,009 - #25 -
INFO  13:28:45,009 - #21 3
INFO  13:28:45,009 - #24 +
INFO  13:28:45,009 - #21 5
INFO  13:28:45,009 - #44 )
INFO  13:28:45,009 - #40 ;
INFO  13:28:45,009 - #13 print
INFO  13:28:45,009 - #43 (
INFO  13:28:45,009 - #22 v
INFO  13:28:45,009 - #44 )
INFO  13:28:45,009 - #40 ;
INFO  13:28:45,009 - #13 print
INFO  13:28:45,009 - #43 (
INFO  13:28:45,009 - #20 x
INFO  13:28:45,009 - #33 <
INFO  13:28:45,009 - #21 3
INFO  13:28:45,009 - #49 ?
INFO  13:28:45,009 - #22 -
INFO  13:28:45,009 - #50 :
INFO  13:28:45,009 - #22 +
INFO  13:28:45,009 - #44 )
INFO  13:28:45,009 - #40 ;
INFO  13:28:45,009 - #48 }
INFO  13:28:45,009 - #48 }
