INFO  13:23:16,226 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:23:16,291 - #2 program
INFO  13:23:16,291 - #20 Pro
INFO  13:23:16,291 - #7 const
INFO  13:23:16,296 - #20 int
INFO  13:23:16,296 - #20 size
INFO  13:23:16,296 - #37 =
INFO  13:23:16,296 - #21 10
INFO  13:23:16,296 - #40 ;
INFO  13:23:16,296 - #4 class
INFO  13:23:16,296 - #20 Table
INFO  13:23:16,296 - #47 {
INFO  13:23:16,296 - #20 int
INFO  13:23:16,296 - #20 pos
INFO  13:23:16,296 - #45 [
INFO  13:23:16,296 - #46 ]
INFO  13:23:16,296 - #41 ,
INFO  13:23:16,296 - #20 neg
INFO  13:23:16,296 - #45 [
INFO  13:23:16,301 - #46 ]
INFO  13:23:16,301 - #40 ;
INFO  13:23:16,301 - #47 {
INFO  13:23:16,301 - #16 void
INFO  13:23:16,301 - #20 putp
INFO  13:23:16,301 - #43 (
INFO  13:23:16,301 - #20 int
INFO  13:23:16,301 - #20 a
INFO  13:23:16,301 - #41 ,
INFO  13:23:16,301 - #20 int
INFO  13:23:16,301 - #20 idx
INFO  13:23:16,301 - #44 )
INFO  13:23:16,301 - #47 {
INFO  13:23:16,301 - #20 this
INFO  13:23:16,301 - #42 .
INFO  13:23:16,301 - #20 pos
INFO  13:23:16,301 - #45 [
INFO  13:23:16,306 - #20 idx
INFO  13:23:16,306 - #46 ]
INFO  13:23:16,306 - #37 =
INFO  13:23:16,306 - #20 a
INFO  13:23:16,306 - #40 ;
INFO  13:23:16,306 - #48 }
INFO  13:23:16,306 - #16 void
INFO  13:23:16,306 - #20 putn
INFO  13:23:16,306 - #43 (
INFO  13:23:16,306 - #20 int
INFO  13:23:16,306 - #20 a
INFO  13:23:16,306 - #41 ,
INFO  13:23:16,306 - #20 int
INFO  13:23:16,306 - #20 idx
INFO  13:23:16,306 - #44 )
INFO  13:23:16,306 - #47 {
INFO  13:23:16,306 - #20 this
INFO  13:23:16,306 - #42 .
INFO  13:23:16,311 - #20 neg
INFO  13:23:16,311 - #45 [
INFO  13:23:16,311 - #20 idx
INFO  13:23:16,311 - #46 ]
INFO  13:23:16,311 - #37 =
INFO  13:23:16,311 - #20 a
INFO  13:23:16,311 - #40 ;
INFO  13:23:16,311 - #48 }
INFO  13:23:16,311 - #20 int
INFO  13:23:16,311 - #20 getp
INFO  13:23:16,311 - #43 (
INFO  13:23:16,311 - #20 int
INFO  13:23:16,311 - #20 idx
INFO  13:23:16,311 - #44 )
INFO  13:23:16,311 - #47 {
INFO  13:23:16,311 - #15 return
INFO  13:23:16,311 - #20 pos
INFO  13:23:16,311 - #45 [
INFO  13:23:16,311 - #20 idx
INFO  13:23:16,311 - #46 ]
INFO  13:23:16,311 - #40 ;
INFO  13:23:16,311 - #48 }
INFO  13:23:16,311 - #20 int
INFO  13:23:16,311 - #20 getn
INFO  13:23:16,311 - #43 (
INFO  13:23:16,311 - #20 int
INFO  13:23:16,311 - #20 idx
INFO  13:23:16,311 - #44 )
INFO  13:23:16,311 - #47 {
INFO  13:23:16,311 - #15 return
INFO  13:23:16,311 - #20 neg
INFO  13:23:16,311 - #45 [
INFO  13:23:16,316 - #20 idx
INFO  13:23:16,316 - #46 ]
INFO  13:23:16,316 - #40 ;
INFO  13:23:16,316 - #48 }
INFO  13:23:16,316 - #48 }
INFO  13:23:16,316 - #48 }
INFO  13:23:16,316 - #20 Table
INFO  13:23:16,316 - #20 val
INFO  13:23:16,316 - #40 ;
INFO  13:23:16,316 - #47 {
INFO  13:23:16,316 - #16 void
INFO  13:23:16,316 - #20 f
INFO  13:23:16,316 - #43 (
INFO  13:23:16,316 - #20 char
INFO  13:23:16,316 - #20 ch
INFO  13:23:16,316 - #41 ,
INFO  13:23:16,316 - #20 int
INFO  13:23:16,316 - #20 a
INFO  13:23:16,316 - #41 ,
INFO  13:23:16,316 - #20 int
INFO  13:23:16,316 - #20 arg
INFO  13:23:16,316 - #44 )
INFO  13:23:16,316 - #20 int
INFO  13:23:16,316 - #20 x
INFO  13:23:16,316 - #40 ;
INFO  13:23:16,316 - #47 {
INFO  13:23:16,316 - #20 x
INFO  13:23:16,316 - #37 =
INFO  13:23:16,316 - #20 arg
INFO  13:23:16,316 - #40 ;
INFO  13:23:16,321 - #48 }
INFO  13:23:16,321 - #16 void
INFO  13:23:16,321 - #20 main
INFO  13:23:16,321 - #43 (
INFO  13:23:16,321 - #44 )
INFO  13:23:16,321 - #20 int
INFO  13:23:16,321 - #20 x
INFO  13:23:16,321 - #41 ,
INFO  13:23:16,321 - #20 i
INFO  13:23:16,321 - #40 ;
INFO  13:23:16,321 - #20 char
INFO  13:23:16,321 - #20 c
INFO  13:23:16,321 - #40 ;
INFO  13:23:16,321 - #47 {
INFO  13:23:16,321 - #20 val
INFO  13:23:16,321 - #37 =
INFO  13:23:16,321 - #12 new
INFO  13:23:16,326 - #20 Table
INFO  13:23:16,326 - #40 ;
INFO  13:23:16,326 - #20 val
INFO  13:23:16,326 - #42 .
INFO  13:23:16,326 - #20 pos
INFO  13:23:16,326 - #37 =
INFO  13:23:16,326 - #12 new
INFO  13:23:16,326 - #20 int
INFO  13:23:16,326 - #45 [
INFO  13:23:16,326 - #20 size
INFO  13:23:16,326 - #46 ]
INFO  13:23:16,326 - #40 ;
INFO  13:23:16,326 - #20 val
INFO  13:23:16,326 - #42 .
INFO  13:23:16,326 - #20 neg
INFO  13:23:16,326 - #37 =
INFO  13:23:16,326 - #12 new
INFO  13:23:16,326 - #20 int
INFO  13:23:16,326 - #45 [
INFO  13:23:16,326 - #20 size
INFO  13:23:16,326 - #46 ]
INFO  13:23:16,326 - #40 ;
INFO  13:23:16,326 - #20 i
INFO  13:23:16,326 - #37 =
INFO  13:23:16,326 - #21 0
INFO  13:23:16,326 - #40 ;
INFO  13:23:16,326 - #10 do
INFO  13:23:16,326 - #47 {
INFO  13:23:16,326 - #20 val
INFO  13:23:16,326 - #42 .
INFO  13:23:16,326 - #20 putp
INFO  13:23:16,331 - #43 (
INFO  13:23:16,331 - #21 0
INFO  13:23:16,331 - #41 ,
INFO  13:23:16,331 - #20 i
INFO  13:23:16,331 - #44 )
INFO  13:23:16,331 - #40 ;
INFO  13:23:16,331 - #20 val
INFO  13:23:16,331 - #42 .
INFO  13:23:16,331 - #20 putn
INFO  13:23:16,331 - #43 (
INFO  13:23:16,331 - #21 0
INFO  13:23:16,331 - #41 ,
INFO  13:23:16,331 - #20 i
INFO  13:23:16,331 - #44 )
INFO  13:23:16,331 - #40 ;
INFO  13:23:16,331 - #20 i
INFO  13:23:16,331 - #38 ++
INFO  13:23:16,331 - #40 ;
INFO  13:23:16,331 - #48 }
INFO  13:23:16,331 - #11 while
INFO  13:23:16,331 - #43 (
INFO  13:23:16,331 - #20 i
INFO  13:23:16,331 - #33 <
INFO  13:23:16,331 - #20 size
INFO  13:23:16,331 - #44 )
INFO  13:23:16,331 - #40 ;
INFO  13:23:16,336 - #20 f
INFO  13:23:16,336 - #43 (
INFO  13:23:16,336 - #20 c
INFO  13:23:16,336 - #41 ,
INFO  13:23:16,336 - #20 x
INFO  13:23:16,336 - #41 ,
INFO  13:23:16,336 - #20 i
INFO  13:23:16,336 - #44 )
INFO  13:23:16,336 - #40 ;
INFO  13:23:16,336 - #14 read
INFO  13:23:16,336 - #43 (
INFO  13:23:16,336 - #20 x
INFO  13:23:16,336 - #44 )
INFO  13:23:16,336 - #40 ;
INFO  13:23:16,336 - #10 do
INFO  13:23:16,336 - #47 {
INFO  13:23:16,336 - #8 if
INFO  13:23:16,336 - #43 (
INFO  13:23:16,336 - #20 x
INFO  13:23:16,336 - #34 <=
INFO  13:23:16,336 - #21 0
INFO  13:23:16,336 - #44 )
INFO  13:23:16,336 - #3 break
INFO  13:23:16,336 - #40 ;
INFO  13:23:16,336 - #8 if
INFO  13:23:16,341 - #43 (
INFO  13:23:16,341 - #21 0
INFO  13:23:16,341 - #34 <=
INFO  13:23:16,341 - #20 x
INFO  13:23:16,341 - #35 &&
INFO  13:23:16,341 - #20 x
INFO  13:23:16,341 - #33 <
INFO  13:23:16,341 - #20 size
INFO  13:23:16,341 - #44 )
INFO  13:23:16,341 - #47 {
INFO  13:23:16,341 - #20 val
INFO  13:23:16,341 - #42 .
INFO  13:23:16,341 - #20 putp
INFO  13:23:16,341 - #43 (
INFO  13:23:16,341 - #20 val
INFO  13:23:16,341 - #42 .
INFO  13:23:16,341 - #20 getp
INFO  13:23:16,341 - #43 (
INFO  13:23:16,341 - #20 x
INFO  13:23:16,341 - #44 )
INFO  13:23:16,341 - #24 +
INFO  13:23:16,341 - #21 1
INFO  13:23:16,341 - #44 )
INFO  13:23:16,341 - #40 ;
INFO  13:23:16,346 - #48 }
INFO  13:23:16,346 - #6 else
INFO  13:23:16,346 - #8 if
INFO  13:23:16,346 - #43 (
INFO  13:23:16,346 - #20 size
INFO  13:23:16,346 - #33 <
INFO  13:23:16,346 - #20 x
INFO  13:23:16,346 - #35 &&
INFO  13:23:16,346 - #20 x
INFO  13:23:16,346 - #33 <
INFO  13:23:16,346 - #21 0
INFO  13:23:16,346 - #44 )
INFO  13:23:16,346 - #47 {
INFO  13:23:16,346 - #20 val
INFO  13:23:16,346 - #42 .
INFO  13:23:16,346 - #20 putn
INFO  13:23:16,346 - #43 (
INFO  13:23:16,346 - #20 val
INFO  13:23:16,346 - #42 .
INFO  13:23:16,346 - #20 getn
INFO  13:23:16,346 - #43 (
INFO  13:23:16,346 - #20 x
INFO  13:23:16,346 - #44 )
INFO  13:23:16,346 - #24 +
INFO  13:23:16,346 - #21 1
INFO  13:23:16,346 - #44 )
INFO  13:23:16,346 - #40 ;
INFO  13:23:16,346 - #48 }
INFO  13:23:16,346 - #14 read
INFO  13:23:16,346 - #43 (
INFO  13:23:16,346 - #20 x
INFO  13:23:16,346 - #44 )
INFO  13:23:16,346 - #40 ;
INFO  13:23:16,346 - #48 }
INFO  13:23:16,346 - #11 while
INFO  13:23:16,346 - #43 (
INFO  13:23:16,351 - #23 true
INFO  13:23:16,351 - #44 )
INFO  13:23:16,351 - #40 ;
INFO  13:23:16,351 - #13 print
INFO  13:23:16,351 - #43 (
INFO  13:23:16,351 - #25 -
INFO  13:23:16,351 - #21 3
INFO  13:23:16,351 - #24 +
INFO  13:23:16,351 - #21 5
INFO  13:23:16,351 - #44 )
INFO  13:23:16,351 - #40 ;
INFO  13:23:16,351 - #13 print
INFO  13:23:16,351 - #43 (
INFO  13:23:16,351 - #22 '
INFO  13:23:16,351 - #44 )
INFO  13:23:16,351 - #40 ;
INFO  13:23:16,351 - #13 print
INFO  13:23:16,351 - #43 (
INFO  13:23:16,351 - #20 x
INFO  13:23:16,351 - #33 <
ERROR 13:23:16,351 - 
Sintaksna greska na liniji 50
ERROR 13:23:16,351 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 50
