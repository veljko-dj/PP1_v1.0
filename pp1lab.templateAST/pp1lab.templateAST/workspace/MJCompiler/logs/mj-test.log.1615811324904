INFO  13:28:31,639 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:28:31,679 - #2 program
INFO  13:28:31,679 - #20 Pro
INFO  13:28:31,679 - #7 const
INFO  13:28:31,679 - #20 int
INFO  13:28:31,679 - #20 size
INFO  13:28:31,679 - #37 =
INFO  13:28:31,679 - #21 10
INFO  13:28:31,679 - #40 ;
INFO  13:28:31,679 - #4 class
INFO  13:28:31,679 - #20 Table
INFO  13:28:31,679 - #47 {
INFO  13:28:31,679 - #20 int
INFO  13:28:31,679 - #20 pos
INFO  13:28:31,679 - #45 [
INFO  13:28:31,679 - #46 ]
INFO  13:28:31,679 - #41 ,
INFO  13:28:31,679 - #20 neg
INFO  13:28:31,684 - #45 [
INFO  13:28:31,684 - #46 ]
INFO  13:28:31,684 - #40 ;
INFO  13:28:31,684 - #47 {
INFO  13:28:31,684 - #16 void
INFO  13:28:31,684 - #20 putp
INFO  13:28:31,684 - #43 (
INFO  13:28:31,684 - #20 int
INFO  13:28:31,684 - #20 a
INFO  13:28:31,684 - #41 ,
INFO  13:28:31,684 - #20 int
INFO  13:28:31,684 - #20 idx
INFO  13:28:31,684 - #44 )
INFO  13:28:31,684 - #47 {
INFO  13:28:31,684 - #20 this
INFO  13:28:31,684 - #42 .
INFO  13:28:31,684 - #20 pos
INFO  13:28:31,684 - #45 [
INFO  13:28:31,684 - #20 idx
INFO  13:28:31,684 - #46 ]
INFO  13:28:31,684 - #37 =
INFO  13:28:31,684 - #20 a
INFO  13:28:31,684 - #40 ;
INFO  13:28:31,684 - #48 }
INFO  13:28:31,684 - #16 void
INFO  13:28:31,684 - #20 putn
INFO  13:28:31,684 - #43 (
INFO  13:28:31,684 - #20 int
INFO  13:28:31,684 - #20 a
INFO  13:28:31,684 - #41 ,
INFO  13:28:31,684 - #20 int
INFO  13:28:31,684 - #20 idx
INFO  13:28:31,684 - #44 )
INFO  13:28:31,684 - #47 {
INFO  13:28:31,684 - #20 this
INFO  13:28:31,684 - #42 .
INFO  13:28:31,684 - #20 neg
INFO  13:28:31,684 - #45 [
INFO  13:28:31,684 - #20 idx
INFO  13:28:31,684 - #46 ]
INFO  13:28:31,684 - #37 =
INFO  13:28:31,684 - #20 a
INFO  13:28:31,684 - #40 ;
INFO  13:28:31,684 - #48 }
INFO  13:28:31,684 - #20 int
INFO  13:28:31,684 - #20 getp
INFO  13:28:31,684 - #43 (
INFO  13:28:31,684 - #20 int
INFO  13:28:31,689 - #20 idx
INFO  13:28:31,689 - #44 )
INFO  13:28:31,689 - #47 {
INFO  13:28:31,689 - #15 return
INFO  13:28:31,689 - #20 pos
INFO  13:28:31,689 - #45 [
INFO  13:28:31,689 - #20 idx
INFO  13:28:31,689 - #46 ]
INFO  13:28:31,689 - #40 ;
INFO  13:28:31,689 - #48 }
INFO  13:28:31,689 - #20 int
INFO  13:28:31,689 - #20 getn
INFO  13:28:31,689 - #43 (
INFO  13:28:31,689 - #20 int
INFO  13:28:31,689 - #20 idx
INFO  13:28:31,689 - #44 )
INFO  13:28:31,689 - #47 {
INFO  13:28:31,689 - #15 return
INFO  13:28:31,689 - #20 neg
INFO  13:28:31,689 - #45 [
INFO  13:28:31,689 - #20 idx
INFO  13:28:31,689 - #46 ]
INFO  13:28:31,689 - #40 ;
INFO  13:28:31,689 - #48 }
INFO  13:28:31,689 - #48 }
INFO  13:28:31,689 - #48 }
INFO  13:28:31,689 - #20 Table
INFO  13:28:31,689 - #20 val
INFO  13:28:31,689 - #40 ;
INFO  13:28:31,689 - #47 {
INFO  13:28:31,689 - #16 void
INFO  13:28:31,689 - #20 f
INFO  13:28:31,689 - #43 (
INFO  13:28:31,689 - #20 char
INFO  13:28:31,689 - #20 ch
INFO  13:28:31,689 - #41 ,
INFO  13:28:31,689 - #20 int
INFO  13:28:31,689 - #20 a
INFO  13:28:31,689 - #41 ,
INFO  13:28:31,689 - #20 int
INFO  13:28:31,689 - #20 arg
INFO  13:28:31,689 - #44 )
INFO  13:28:31,689 - #20 int
INFO  13:28:31,689 - #20 x
INFO  13:28:31,689 - #40 ;
INFO  13:28:31,689 - #47 {
INFO  13:28:31,694 - #20 x
INFO  13:28:31,694 - #37 =
INFO  13:28:31,694 - #20 arg
INFO  13:28:31,694 - #40 ;
INFO  13:28:31,694 - #48 }
INFO  13:28:31,694 - #16 void
INFO  13:28:31,694 - #20 main
INFO  13:28:31,694 - #43 (
INFO  13:28:31,694 - #44 )
INFO  13:28:31,694 - #20 int
INFO  13:28:31,694 - #20 x
INFO  13:28:31,694 - #41 ,
INFO  13:28:31,694 - #20 i
INFO  13:28:31,694 - #40 ;
INFO  13:28:31,694 - #20 char
INFO  13:28:31,694 - #20 c
INFO  13:28:31,694 - #40 ;
INFO  13:28:31,694 - #47 {
INFO  13:28:31,694 - #20 val
INFO  13:28:31,694 - #37 =
INFO  13:28:31,694 - #12 new
INFO  13:28:31,699 - #20 Table
INFO  13:28:31,699 - #40 ;
INFO  13:28:31,699 - #20 val
INFO  13:28:31,704 - #42 .
INFO  13:28:31,704 - #20 pos
INFO  13:28:31,704 - #37 =
INFO  13:28:31,704 - #12 new
INFO  13:28:31,704 - #20 int
INFO  13:28:31,704 - #45 [
INFO  13:28:31,704 - #20 size
INFO  13:28:31,704 - #46 ]
INFO  13:28:31,704 - #40 ;
INFO  13:28:31,704 - #20 val
INFO  13:28:31,704 - #42 .
INFO  13:28:31,704 - #20 neg
INFO  13:28:31,704 - #37 =
INFO  13:28:31,704 - #12 new
INFO  13:28:31,704 - #20 int
INFO  13:28:31,704 - #45 [
INFO  13:28:31,704 - #20 size
INFO  13:28:31,704 - #46 ]
INFO  13:28:31,704 - #40 ;
INFO  13:28:31,704 - #20 i
INFO  13:28:31,704 - #37 =
INFO  13:28:31,704 - #21 0
INFO  13:28:31,704 - #40 ;
INFO  13:28:31,704 - #10 do
INFO  13:28:31,704 - #47 {
INFO  13:28:31,704 - #20 val
INFO  13:28:31,704 - #42 .
INFO  13:28:31,704 - #20 putp
INFO  13:28:31,704 - #43 (
INFO  13:28:31,704 - #21 0
INFO  13:28:31,704 - #41 ,
INFO  13:28:31,704 - #20 i
INFO  13:28:31,704 - #44 )
INFO  13:28:31,704 - #40 ;
INFO  13:28:31,704 - #20 val
INFO  13:28:31,704 - #42 .
INFO  13:28:31,704 - #20 putn
INFO  13:28:31,704 - #43 (
INFO  13:28:31,704 - #21 0
INFO  13:28:31,704 - #41 ,
INFO  13:28:31,704 - #20 i
INFO  13:28:31,704 - #44 )
INFO  13:28:31,704 - #40 ;
INFO  13:28:31,704 - #20 i
INFO  13:28:31,704 - #38 ++
INFO  13:28:31,709 - #40 ;
INFO  13:28:31,709 - #48 }
INFO  13:28:31,709 - #11 while
INFO  13:28:31,709 - #43 (
INFO  13:28:31,709 - #20 i
INFO  13:28:31,709 - #33 <
INFO  13:28:31,709 - #20 size
INFO  13:28:31,709 - #44 )
INFO  13:28:31,709 - #40 ;
INFO  13:28:31,709 - #20 f
INFO  13:28:31,709 - #43 (
INFO  13:28:31,709 - #20 c
INFO  13:28:31,709 - #41 ,
INFO  13:28:31,709 - #20 x
INFO  13:28:31,709 - #41 ,
INFO  13:28:31,709 - #20 i
INFO  13:28:31,709 - #44 )
INFO  13:28:31,709 - #40 ;
INFO  13:28:31,709 - #14 read
INFO  13:28:31,709 - #43 (
INFO  13:28:31,709 - #20 x
INFO  13:28:31,709 - #44 )
INFO  13:28:31,709 - #40 ;
INFO  13:28:31,709 - #10 do
INFO  13:28:31,709 - #47 {
INFO  13:28:31,709 - #8 if
INFO  13:28:31,709 - #43 (
INFO  13:28:31,709 - #20 x
INFO  13:28:31,709 - #34 <=
INFO  13:28:31,709 - #21 0
INFO  13:28:31,709 - #44 )
INFO  13:28:31,709 - #3 break
INFO  13:28:31,709 - #40 ;
INFO  13:28:31,709 - #8 if
INFO  13:28:31,709 - #43 (
INFO  13:28:31,709 - #21 0
INFO  13:28:31,709 - #34 <=
INFO  13:28:31,709 - #20 x
INFO  13:28:31,709 - #35 &&
INFO  13:28:31,709 - #20 x
INFO  13:28:31,709 - #33 <
INFO  13:28:31,709 - #20 size
INFO  13:28:31,709 - #44 )
INFO  13:28:31,709 - #47 {
INFO  13:28:31,709 - #20 val
INFO  13:28:31,709 - #42 .
INFO  13:28:31,709 - #20 putp
INFO  13:28:31,709 - #43 (
INFO  13:28:31,709 - #20 val
INFO  13:28:31,709 - #42 .
INFO  13:28:31,709 - #20 getp
INFO  13:28:31,709 - #43 (
INFO  13:28:31,709 - #20 x
INFO  13:28:31,709 - #44 )
INFO  13:28:31,709 - #24 +
INFO  13:28:31,709 - #21 1
INFO  13:28:31,709 - #44 )
INFO  13:28:31,709 - #40 ;
INFO  13:28:31,709 - #48 }
INFO  13:28:31,709 - #6 else
INFO  13:28:31,709 - #8 if
INFO  13:28:31,709 - #43 (
INFO  13:28:31,709 - #20 size
INFO  13:28:31,709 - #33 <
INFO  13:28:31,709 - #20 x
INFO  13:28:31,709 - #35 &&
INFO  13:28:31,709 - #20 x
INFO  13:28:31,709 - #33 <
INFO  13:28:31,709 - #21 0
INFO  13:28:31,709 - #44 )
INFO  13:28:31,709 - #47 {
INFO  13:28:31,709 - #20 val
INFO  13:28:31,714 - #42 .
INFO  13:28:31,714 - #20 putn
INFO  13:28:31,714 - #43 (
INFO  13:28:31,714 - #20 val
INFO  13:28:31,714 - #42 .
INFO  13:28:31,714 - #20 getn
INFO  13:28:31,714 - #43 (
INFO  13:28:31,714 - #20 x
INFO  13:28:31,714 - #44 )
INFO  13:28:31,714 - #24 +
INFO  13:28:31,714 - #21 1
INFO  13:28:31,714 - #44 )
INFO  13:28:31,714 - #40 ;
INFO  13:28:31,714 - #48 }
INFO  13:28:31,714 - #14 read
INFO  13:28:31,714 - #43 (
INFO  13:28:31,714 - #20 x
INFO  13:28:31,714 - #44 )
INFO  13:28:31,714 - #40 ;
INFO  13:28:31,714 - #48 }
INFO  13:28:31,714 - #11 while
INFO  13:28:31,714 - #43 (
INFO  13:28:31,714 - #23 true
INFO  13:28:31,714 - #44 )
INFO  13:28:31,714 - #40 ;
INFO  13:28:31,714 - #13 print
INFO  13:28:31,714 - #43 (
INFO  13:28:31,714 - #25 -
INFO  13:28:31,714 - #21 3
INFO  13:28:31,714 - #24 +
INFO  13:28:31,714 - #21 5
INFO  13:28:31,714 - #44 )
INFO  13:28:31,714 - #40 ;
INFO  13:28:31,714 - #13 print
INFO  13:28:31,714 - #43 (
INFO  13:28:31,714 - #22 v
INFO  13:28:31,714 - #44 )
INFO  13:28:31,714 - #40 ;
INFO  13:28:31,714 - #13 print
INFO  13:28:31,714 - #43 (
INFO  13:28:31,714 - #20 x
INFO  13:28:31,714 - #33 <
INFO  13:28:31,714 - #21 0
INFO  13:28:31,714 - #49 ?
INFO  13:28:31,714 - #22 -
INFO  13:28:31,714 - #50 :
INFO  13:28:31,714 - #22 +
INFO  13:28:31,714 - #44 )
INFO  13:28:31,714 - #40 ;
INFO  13:28:31,714 - #48 }
INFO  13:28:31,714 - #48 }
