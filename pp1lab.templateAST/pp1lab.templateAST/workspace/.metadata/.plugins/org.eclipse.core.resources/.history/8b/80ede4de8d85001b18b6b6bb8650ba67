INFO  12:46:22,279 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:46:22,349 - #2 program
INFO  12:46:22,349 - #20 Pro
INFO  12:46:22,354 - #7 const
INFO  12:46:22,354 - #20 int
INFO  12:46:22,354 - #20 size
INFO  12:46:22,354 - #37 =
INFO  12:46:22,354 - #21 10
INFO  12:46:22,354 - #40 ;
INFO  12:46:22,354 - #4 class
INFO  12:46:22,359 - #20 Table
INFO  12:46:22,359 - #47 {
INFO  12:46:22,359 - #20 int
INFO  12:46:22,359 - #20 pos
INFO  12:46:22,359 - #45 [
INFO  12:46:22,359 - #46 ]
INFO  12:46:22,359 - #41 ,
INFO  12:46:22,359 - #20 neg
INFO  12:46:22,359 - #45 [
INFO  12:46:22,359 - #46 ]
INFO  12:46:22,359 - #40 ;
INFO  12:46:22,359 - #47 {
INFO  12:46:22,359 - #16 void
INFO  12:46:22,359 - #20 putp
INFO  12:46:22,359 - #43 (
INFO  12:46:22,364 - #20 int
INFO  12:46:22,364 - #20 a
INFO  12:46:22,364 - #41 ,
INFO  12:46:22,364 - #20 int
INFO  12:46:22,364 - #20 idx
INFO  12:46:22,364 - #44 )
INFO  12:46:22,364 - #47 {
INFO  12:46:22,364 - #20 this
INFO  12:46:22,364 - #42 .
INFO  12:46:22,364 - #20 pos
INFO  12:46:22,364 - #45 [
INFO  12:46:22,364 - #20 idx
INFO  12:46:22,364 - #46 ]
INFO  12:46:22,364 - #37 =
INFO  12:46:22,364 - #20 a
INFO  12:46:22,369 - #40 ;
INFO  12:46:22,369 - #48 }
INFO  12:46:22,369 - #16 void
INFO  12:46:22,369 - #20 putn
INFO  12:46:22,369 - #43 (
INFO  12:46:22,369 - #20 int
INFO  12:46:22,369 - #20 a
INFO  12:46:22,369 - #41 ,
INFO  12:46:22,369 - #20 int
INFO  12:46:22,369 - #20 idx
INFO  12:46:22,369 - #44 )
INFO  12:46:22,369 - #47 {
INFO  12:46:22,369 - #20 this
INFO  12:46:22,369 - #42 .
INFO  12:46:22,369 - #20 neg
INFO  12:46:22,369 - #45 [
INFO  12:46:22,369 - #20 idx
INFO  12:46:22,369 - #46 ]
INFO  12:46:22,369 - #37 =
INFO  12:46:22,374 - #20 a
INFO  12:46:22,374 - #40 ;
INFO  12:46:22,374 - #48 }
INFO  12:46:22,374 - #20 int
INFO  12:46:22,374 - #20 getp
INFO  12:46:22,374 - #43 (
INFO  12:46:22,374 - #20 int
INFO  12:46:22,374 - #20 idx
INFO  12:46:22,374 - #44 )
INFO  12:46:22,374 - #47 {
INFO  12:46:22,374 - #15 return
INFO  12:46:22,374 - #20 pos
INFO  12:46:22,374 - #45 [
INFO  12:46:22,374 - #20 idx
INFO  12:46:22,374 - #46 ]
INFO  12:46:22,374 - #40 ;
INFO  12:46:22,374 - #48 }
INFO  12:46:22,374 - #20 int
INFO  12:46:22,374 - #20 getn
INFO  12:46:22,374 - #43 (
INFO  12:46:22,374 - #20 int
INFO  12:46:22,374 - #20 idx
INFO  12:46:22,374 - #44 )
INFO  12:46:22,374 - #47 {
INFO  12:46:22,374 - #15 return
INFO  12:46:22,374 - #20 neg
INFO  12:46:22,374 - #45 [
INFO  12:46:22,374 - #20 idx
INFO  12:46:22,374 - #46 ]
INFO  12:46:22,379 - #40 ;
INFO  12:46:22,379 - #48 }
INFO  12:46:22,379 - #48 }
INFO  12:46:22,379 - #48 }
INFO  12:46:22,379 - #20 Table
INFO  12:46:22,379 - #20 val
INFO  12:46:22,379 - #40 ;
INFO  12:46:22,379 - #47 {
INFO  12:46:22,379 - #16 void
INFO  12:46:22,379 - #20 f
INFO  12:46:22,379 - #43 (
INFO  12:46:22,379 - #20 char
INFO  12:46:22,379 - #20 ch
INFO  12:46:22,379 - #41 ,
INFO  12:46:22,379 - #20 int
INFO  12:46:22,379 - #20 a
INFO  12:46:22,379 - #41 ,
INFO  12:46:22,379 - #20 int
INFO  12:46:22,379 - #20 arg
INFO  12:46:22,379 - #44 )
INFO  12:46:22,379 - #20 int
INFO  12:46:22,379 - #20 x
INFO  12:46:22,379 - #40 ;
INFO  12:46:22,379 - #47 {
INFO  12:46:22,379 - #20 x
INFO  12:46:22,379 - #37 =
INFO  12:46:22,379 - #20 arg
INFO  12:46:22,379 - #40 ;
INFO  12:46:22,379 - #48 }
INFO  12:46:22,379 - #16 void
INFO  12:46:22,379 - #20 main
INFO  12:46:22,379 - #43 (
INFO  12:46:22,384 - #44 )
INFO  12:46:22,384 - #20 int
INFO  12:46:22,384 - #20 x
INFO  12:46:22,384 - #41 ,
INFO  12:46:22,384 - #20 i
INFO  12:46:22,384 - #40 ;
INFO  12:46:22,384 - #20 char
INFO  12:46:22,384 - #20 c
INFO  12:46:22,384 - #40 ;
INFO  12:46:22,384 - #47 {
INFO  12:46:22,384 - #20 val
INFO  12:46:22,384 - #37 =
INFO  12:46:22,384 - #12 new
INFO  12:46:22,389 - #20 Table
INFO  12:46:22,389 - #40 ;
INFO  12:46:22,389 - #20 val
INFO  12:46:22,389 - #42 .
INFO  12:46:22,389 - #20 pos
INFO  12:46:22,389 - #37 =
INFO  12:46:22,389 - #12 new
INFO  12:46:22,389 - #20 int
INFO  12:46:22,389 - #45 [
INFO  12:46:22,389 - #20 size
INFO  12:46:22,389 - #46 ]
INFO  12:46:22,389 - #40 ;
INFO  12:46:22,389 - #20 val
INFO  12:46:22,389 - #42 .
INFO  12:46:22,389 - #20 neg
INFO  12:46:22,389 - #37 =
INFO  12:46:22,389 - #12 new
INFO  12:46:22,389 - #20 int
INFO  12:46:22,389 - #45 [
INFO  12:46:22,389 - #20 size
INFO  12:46:22,389 - #46 ]
INFO  12:46:22,389 - #40 ;
INFO  12:46:22,389 - #20 i
INFO  12:46:22,389 - #37 =
INFO  12:46:22,389 - #21 0
INFO  12:46:22,389 - #40 ;
INFO  12:46:22,394 - #10 do
INFO  12:46:22,394 - #47 {
INFO  12:46:22,394 - #20 val
INFO  12:46:22,394 - #42 .
INFO  12:46:22,394 - #20 putp
INFO  12:46:22,394 - #43 (
INFO  12:46:22,394 - #21 0
INFO  12:46:22,394 - #41 ,
INFO  12:46:22,394 - #20 i
INFO  12:46:22,394 - #44 )
INFO  12:46:22,394 - #40 ;
INFO  12:46:22,394 - #20 val
INFO  12:46:22,394 - #42 .
INFO  12:46:22,394 - #20 putn
INFO  12:46:22,394 - #43 (
INFO  12:46:22,394 - #21 0
INFO  12:46:22,394 - #41 ,
INFO  12:46:22,394 - #20 i
INFO  12:46:22,394 - #44 )
INFO  12:46:22,394 - #40 ;
INFO  12:46:22,394 - #20 i
INFO  12:46:22,394 - #38 ++
INFO  12:46:22,394 - #40 ;
INFO  12:46:22,394 - #48 }
INFO  12:46:22,394 - #11 while
INFO  12:46:22,394 - #43 (
INFO  12:46:22,394 - #20 i
INFO  12:46:22,394 - #33 <
INFO  12:46:22,394 - #20 size
INFO  12:46:22,394 - #44 )
INFO  12:46:22,399 - #40 ;
INFO  12:46:22,399 - #20 f
INFO  12:46:22,399 - #43 (
INFO  12:46:22,399 - #20 c
INFO  12:46:22,399 - #41 ,
INFO  12:46:22,399 - #20 x
INFO  12:46:22,399 - #41 ,
INFO  12:46:22,399 - #20 i
INFO  12:46:22,399 - #44 )
INFO  12:46:22,399 - #40 ;
INFO  12:46:22,399 - #14 read
INFO  12:46:22,399 - #43 (
INFO  12:46:22,399 - #20 x
INFO  12:46:22,399 - #44 )
INFO  12:46:22,399 - #40 ;
INFO  12:46:22,399 - #10 do
INFO  12:46:22,399 - #47 {
INFO  12:46:22,399 - #8 if
INFO  12:46:22,399 - #43 (
INFO  12:46:22,399 - #20 x
INFO  12:46:22,399 - #34 <=
INFO  12:46:22,399 - #21 0
INFO  12:46:22,399 - #44 )
INFO  12:46:22,399 - #3 break
INFO  12:46:22,399 - #40 ;
INFO  12:46:22,399 - #8 if
INFO  12:46:22,399 - #43 (
INFO  12:46:22,404 - #21 0
INFO  12:46:22,404 - #34 <=
INFO  12:46:22,404 - #20 x
INFO  12:46:22,404 - #35 &&
INFO  12:46:22,404 - #20 x
INFO  12:46:22,404 - #33 <
INFO  12:46:22,404 - #20 size
INFO  12:46:22,404 - #44 )
INFO  12:46:22,404 - #47 {
INFO  12:46:22,404 - #20 val
INFO  12:46:22,404 - #42 .
INFO  12:46:22,404 - #20 putp
INFO  12:46:22,404 - #43 (
INFO  12:46:22,404 - #20 val
INFO  12:46:22,404 - #42 .
INFO  12:46:22,404 - #20 getp
INFO  12:46:22,404 - #43 (
INFO  12:46:22,404 - #20 x
INFO  12:46:22,404 - #44 )
INFO  12:46:22,404 - #24 +
INFO  12:46:22,404 - #21 1
INFO  12:46:22,404 - #44 )
INFO  12:46:22,404 - #40 ;
INFO  12:46:22,404 - #48 }
INFO  12:46:22,404 - #6 else
INFO  12:46:22,409 - #8 if
INFO  12:46:22,409 - #43 (
INFO  12:46:22,409 - #20 size
INFO  12:46:22,409 - #33 <
INFO  12:46:22,409 - #20 x
INFO  12:46:22,409 - #35 &&
INFO  12:46:22,409 - #20 x
INFO  12:46:22,409 - #33 <
INFO  12:46:22,409 - #21 0
INFO  12:46:22,409 - #44 )
INFO  12:46:22,409 - #47 {
INFO  12:46:22,409 - #20 val
INFO  12:46:22,409 - #42 .
INFO  12:46:22,409 - #20 putn
INFO  12:46:22,409 - #43 (
INFO  12:46:22,409 - #20 val
INFO  12:46:22,409 - #42 .
INFO  12:46:22,409 - #20 getn
INFO  12:46:22,409 - #43 (
INFO  12:46:22,409 - #20 x
INFO  12:46:22,409 - #44 )
INFO  12:46:22,409 - #24 +
INFO  12:46:22,409 - #21 1
INFO  12:46:22,409 - #44 )
INFO  12:46:22,409 - #40 ;
INFO  12:46:22,409 - #48 }
INFO  12:46:22,409 - #14 read
INFO  12:46:22,409 - #43 (
INFO  12:46:22,409 - #20 x
INFO  12:46:22,409 - #44 )
INFO  12:46:22,409 - #40 ;
INFO  12:46:22,409 - #48 }
INFO  12:46:22,409 - #11 while
INFO  12:46:22,409 - #43 (
INFO  12:46:22,409 - #23 true
INFO  12:46:22,409 - #44 )
INFO  12:46:22,414 - #40 ;
INFO  12:46:22,414 - #13 print
INFO  12:46:22,414 - #43 (
INFO  12:46:22,414 - #21 3
INFO  12:46:22,414 - #44 )
INFO  12:46:22,414 - #40 ;
INFO  12:46:22,414 - #13 print
INFO  12:46:22,414 - #43 (
INFO  12:46:22,414 - #22 'x'
INFO  12:46:22,414 - #44 )
