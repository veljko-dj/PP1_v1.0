INFO  12:54:29,059 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:54:29,124 - #2 program
INFO  12:54:29,124 - #20 Pro
INFO  12:54:29,124 - #7 const
INFO  12:54:29,129 - #20 int
INFO  12:54:29,129 - #20 size
INFO  12:54:29,129 - #37 =
INFO  12:54:29,129 - #21 10
INFO  12:54:29,129 - #40 ;
INFO  12:54:29,129 - #4 class
INFO  12:54:29,129 - #20 Table
INFO  12:54:29,129 - #47 {
INFO  12:54:29,129 - #20 int
INFO  12:54:29,129 - #20 pos
INFO  12:54:29,129 - #45 [
INFO  12:54:29,129 - #46 ]
INFO  12:54:29,134 - #41 ,
INFO  12:54:29,134 - #20 neg
INFO  12:54:29,134 - #45 [
INFO  12:54:29,134 - #46 ]
INFO  12:54:29,134 - #40 ;
INFO  12:54:29,134 - #47 {
INFO  12:54:29,134 - #16 void
INFO  12:54:29,134 - #20 putp
INFO  12:54:29,134 - #43 (
INFO  12:54:29,134 - #20 int
INFO  12:54:29,134 - #20 a
INFO  12:54:29,134 - #41 ,
INFO  12:54:29,139 - #20 int
INFO  12:54:29,139 - #20 idx
INFO  12:54:29,139 - #44 )
INFO  12:54:29,139 - #47 {
INFO  12:54:29,139 - #20 this
INFO  12:54:29,139 - #42 .
INFO  12:54:29,139 - #20 pos
INFO  12:54:29,139 - #45 [
INFO  12:54:29,139 - #20 idx
INFO  12:54:29,139 - #46 ]
INFO  12:54:29,139 - #37 =
INFO  12:54:29,139 - #20 a
INFO  12:54:29,139 - #40 ;
INFO  12:54:29,139 - #48 }
INFO  12:54:29,139 - #16 void
INFO  12:54:29,144 - #20 putn
INFO  12:54:29,144 - #43 (
INFO  12:54:29,144 - #20 int
INFO  12:54:29,144 - #20 a
INFO  12:54:29,144 - #41 ,
INFO  12:54:29,144 - #20 int
INFO  12:54:29,144 - #20 idx
INFO  12:54:29,144 - #44 )
INFO  12:54:29,144 - #47 {
INFO  12:54:29,144 - #20 this
INFO  12:54:29,144 - #42 .
INFO  12:54:29,144 - #20 neg
INFO  12:54:29,144 - #45 [
INFO  12:54:29,144 - #20 idx
INFO  12:54:29,144 - #46 ]
INFO  12:54:29,144 - #37 =
INFO  12:54:29,144 - #20 a
INFO  12:54:29,144 - #40 ;
INFO  12:54:29,144 - #48 }
INFO  12:54:29,144 - #20 int
INFO  12:54:29,144 - #20 getp
INFO  12:54:29,144 - #43 (
INFO  12:54:29,144 - #20 int
INFO  12:54:29,144 - #20 idx
INFO  12:54:29,144 - #44 )
INFO  12:54:29,144 - #47 {
INFO  12:54:29,149 - #15 return
INFO  12:54:29,149 - #20 pos
INFO  12:54:29,149 - #45 [
INFO  12:54:29,149 - #20 idx
INFO  12:54:29,149 - #46 ]
INFO  12:54:29,149 - #40 ;
INFO  12:54:29,149 - #48 }
INFO  12:54:29,149 - #20 int
INFO  12:54:29,149 - #20 getn
INFO  12:54:29,149 - #43 (
INFO  12:54:29,149 - #20 int
INFO  12:54:29,154 - #20 idx
INFO  12:54:29,154 - #44 )
INFO  12:54:29,154 - #47 {
INFO  12:54:29,154 - #15 return
INFO  12:54:29,154 - #20 neg
INFO  12:54:29,154 - #45 [
INFO  12:54:29,154 - #20 idx
INFO  12:54:29,154 - #46 ]
INFO  12:54:29,154 - #40 ;
INFO  12:54:29,154 - #48 }
INFO  12:54:29,154 - #48 }
INFO  12:54:29,154 - #48 }
INFO  12:54:29,154 - #20 Table
INFO  12:54:29,154 - #20 val
INFO  12:54:29,154 - #40 ;
INFO  12:54:29,154 - #47 {
INFO  12:54:29,154 - #16 void
INFO  12:54:29,154 - #20 f
INFO  12:54:29,154 - #43 (
INFO  12:54:29,154 - #20 char
INFO  12:54:29,154 - #20 ch
INFO  12:54:29,154 - #41 ,
INFO  12:54:29,154 - #20 int
INFO  12:54:29,154 - #20 a
INFO  12:54:29,154 - #41 ,
INFO  12:54:29,154 - #20 int
INFO  12:54:29,154 - #20 arg
INFO  12:54:29,154 - #44 )
INFO  12:54:29,154 - #20 int
INFO  12:54:29,159 - #20 x
INFO  12:54:29,159 - #40 ;
INFO  12:54:29,159 - #47 {
INFO  12:54:29,159 - #20 x
INFO  12:54:29,159 - #37 =
INFO  12:54:29,159 - #20 arg
INFO  12:54:29,159 - #40 ;
INFO  12:54:29,159 - #48 }
INFO  12:54:29,159 - #16 void
INFO  12:54:29,159 - #20 main
INFO  12:54:29,159 - #43 (
INFO  12:54:29,159 - #44 )
INFO  12:54:29,159 - #20 int
INFO  12:54:29,159 - #20 x
INFO  12:54:29,159 - #41 ,
INFO  12:54:29,159 - #20 i
INFO  12:54:29,159 - #40 ;
INFO  12:54:29,159 - #20 char
INFO  12:54:29,159 - #20 c
INFO  12:54:29,159 - #40 ;
INFO  12:54:29,159 - #47 {
INFO  12:54:29,159 - #20 val
INFO  12:54:29,159 - #37 =
INFO  12:54:29,159 - #12 new
INFO  12:54:29,159 - #20 Table
INFO  12:54:29,159 - #40 ;
INFO  12:54:29,159 - #20 val
INFO  12:54:29,159 - #42 .
INFO  12:54:29,159 - #20 pos
INFO  12:54:29,159 - #37 =
INFO  12:54:29,159 - #12 new
INFO  12:54:29,159 - #20 int
INFO  12:54:29,159 - #45 [
INFO  12:54:29,159 - #20 size
INFO  12:54:29,159 - #46 ]
INFO  12:54:29,164 - #40 ;
INFO  12:54:29,164 - #20 val
INFO  12:54:29,164 - #42 .
INFO  12:54:29,164 - #20 neg
INFO  12:54:29,164 - #37 =
INFO  12:54:29,164 - #12 new
INFO  12:54:29,164 - #20 int
INFO  12:54:29,164 - #45 [
INFO  12:54:29,164 - #20 size
INFO  12:54:29,164 - #46 ]
INFO  12:54:29,164 - #40 ;
INFO  12:54:29,164 - #20 i
INFO  12:54:29,164 - #37 =
INFO  12:54:29,164 - #21 0
INFO  12:54:29,164 - #40 ;
INFO  12:54:29,164 - #10 do
INFO  12:54:29,164 - #47 {
INFO  12:54:29,164 - #20 val
INFO  12:54:29,164 - #42 .
INFO  12:54:29,164 - #20 putp
INFO  12:54:29,164 - #43 (
INFO  12:54:29,164 - #21 0
INFO  12:54:29,164 - #41 ,
INFO  12:54:29,164 - #20 i
INFO  12:54:29,164 - #44 )
INFO  12:54:29,164 - #40 ;
INFO  12:54:29,164 - #20 val
INFO  12:54:29,164 - #42 .
INFO  12:54:29,164 - #20 putn
INFO  12:54:29,164 - #43 (
INFO  12:54:29,164 - #21 0
INFO  12:54:29,164 - #41 ,
INFO  12:54:29,164 - #20 i
INFO  12:54:29,164 - #44 )
INFO  12:54:29,169 - #40 ;
INFO  12:54:29,169 - #20 i
INFO  12:54:29,169 - #38 ++
INFO  12:54:29,169 - #40 ;
INFO  12:54:29,169 - #48 }
INFO  12:54:29,169 - #11 while
INFO  12:54:29,169 - #43 (
INFO  12:54:29,169 - #20 i
INFO  12:54:29,169 - #33 <
INFO  12:54:29,169 - #20 size
INFO  12:54:29,169 - #44 )
INFO  12:54:29,169 - #40 ;
INFO  12:54:29,169 - #20 f
INFO  12:54:29,169 - #43 (
INFO  12:54:29,169 - #20 c
INFO  12:54:29,169 - #41 ,
INFO  12:54:29,169 - #20 x
INFO  12:54:29,169 - #41 ,
INFO  12:54:29,169 - #20 i
INFO  12:54:29,169 - #44 )
INFO  12:54:29,169 - #40 ;
INFO  12:54:29,169 - #14 read
INFO  12:54:29,169 - #43 (
INFO  12:54:29,169 - #20 x
INFO  12:54:29,169 - #44 )
INFO  12:54:29,169 - #40 ;
INFO  12:54:29,169 - #10 do
INFO  12:54:29,169 - #47 {
INFO  12:54:29,169 - #8 if
INFO  12:54:29,174 - #43 (
INFO  12:54:29,174 - #20 x
INFO  12:54:29,174 - #34 <=
INFO  12:54:29,174 - #21 0
INFO  12:54:29,174 - #44 )
INFO  12:54:29,174 - #3 break
INFO  12:54:29,174 - #40 ;
INFO  12:54:29,174 - #8 if
INFO  12:54:29,174 - #43 (
INFO  12:54:29,174 - #21 0
INFO  12:54:29,174 - #34 <=
INFO  12:54:29,174 - #20 x
INFO  12:54:29,174 - #35 &&
INFO  12:54:29,174 - #20 x
INFO  12:54:29,174 - #33 <
INFO  12:54:29,174 - #20 size
INFO  12:54:29,174 - #44 )
INFO  12:54:29,174 - #47 {
INFO  12:54:29,174 - #20 val
INFO  12:54:29,174 - #42 .
INFO  12:54:29,174 - #20 putp
INFO  12:54:29,174 - #43 (
INFO  12:54:29,174 - #20 val
INFO  12:54:29,174 - #42 .
INFO  12:54:29,174 - #20 getp
INFO  12:54:29,179 - #43 (
INFO  12:54:29,179 - #20 x
INFO  12:54:29,179 - #44 )
INFO  12:54:29,179 - #24 +
INFO  12:54:29,179 - #21 1
INFO  12:54:29,179 - #44 )
INFO  12:54:29,179 - #40 ;
INFO  12:54:29,179 - #48 }
INFO  12:54:29,179 - #6 else
INFO  12:54:29,179 - #8 if
INFO  12:54:29,179 - #43 (
INFO  12:54:29,179 - #20 size
INFO  12:54:29,179 - #33 <
INFO  12:54:29,179 - #20 x
INFO  12:54:29,179 - #35 &&
INFO  12:54:29,179 - #20 x
INFO  12:54:29,179 - #33 <
INFO  12:54:29,179 - #21 0
INFO  12:54:29,179 - #44 )
INFO  12:54:29,179 - #47 {
INFO  12:54:29,179 - #20 val
INFO  12:54:29,184 - #42 .
INFO  12:54:29,184 - #20 putn
INFO  12:54:29,184 - #43 (
INFO  12:54:29,184 - #20 val
INFO  12:54:29,184 - #42 .
INFO  12:54:29,184 - #20 getn
INFO  12:54:29,184 - #43 (
INFO  12:54:29,184 - #20 x
INFO  12:54:29,184 - #44 )
INFO  12:54:29,184 - #24 +
INFO  12:54:29,184 - #21 1
INFO  12:54:29,184 - #44 )
INFO  12:54:29,184 - #40 ;
INFO  12:54:29,184 - #48 }
INFO  12:54:29,184 - #14 read
INFO  12:54:29,184 - #43 (
INFO  12:54:29,184 - #20 x
INFO  12:54:29,184 - #44 )
INFO  12:54:29,184 - #40 ;
INFO  12:54:29,184 - #48 }
INFO  12:54:29,184 - #11 while
INFO  12:54:29,184 - #43 (
INFO  12:54:29,184 - #23 true
INFO  12:54:29,184 - #44 )
INFO  12:54:29,184 - #40 ;
INFO  12:54:29,184 - #13 print
INFO  12:54:29,184 - #43 (
INFO  12:54:29,184 - #25 -
INFO  12:54:29,184 - #21 3
INFO  12:54:29,184 - #44 )
INFO  12:54:29,184 - #40 ;
INFO  12:54:29,184 - #13 print
INFO  12:54:29,184 - #43 (
INFO  12:54:29,184 - #22 'x'
INFO  12:54:29,184 - #44 )
