INFO  13:30:27,507 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:30:27,572 - #2 program
INFO  13:30:27,572 - #20 Pro
INFO  13:30:27,572 - #7 const
INFO  13:30:27,577 - #20 int
INFO  13:30:27,577 - #20 size
INFO  13:30:27,577 - #37 =
INFO  13:30:27,577 - #21 10
INFO  13:30:27,577 - #40 ;
INFO  13:30:27,577 - #4 class
INFO  13:30:27,577 - #20 Table
INFO  13:30:27,577 - #47 {
INFO  13:30:27,577 - #20 int
INFO  13:30:27,577 - #20 pos
INFO  13:30:27,577 - #45 [
INFO  13:30:27,577 - #46 ]
INFO  13:30:27,582 - #41 ,
INFO  13:30:27,582 - #20 neg
INFO  13:30:27,582 - #45 [
INFO  13:30:27,582 - #46 ]
INFO  13:30:27,582 - #40 ;
INFO  13:30:27,582 - #47 {
INFO  13:30:27,582 - #16 void
INFO  13:30:27,582 - #20 putp
INFO  13:30:27,582 - #43 (
INFO  13:30:27,582 - #20 int
INFO  13:30:27,582 - #20 a
INFO  13:30:27,582 - #41 ,
INFO  13:30:27,587 - #20 int
INFO  13:30:27,587 - #20 idx
INFO  13:30:27,587 - #44 )
INFO  13:30:27,587 - #47 {
INFO  13:30:27,587 - #20 this
INFO  13:30:27,587 - #42 .
INFO  13:30:27,587 - #20 pos
INFO  13:30:27,587 - #45 [
INFO  13:30:27,587 - #20 idx
INFO  13:30:27,587 - #46 ]
INFO  13:30:27,587 - #37 =
INFO  13:30:27,587 - #20 a
INFO  13:30:27,587 - #40 ;
INFO  13:30:27,587 - #48 }
INFO  13:30:27,587 - #16 void
INFO  13:30:27,587 - #20 putn
INFO  13:30:27,587 - #43 (
INFO  13:30:27,592 - #20 int
INFO  13:30:27,592 - #20 a
INFO  13:30:27,592 - #41 ,
INFO  13:30:27,592 - #20 int
INFO  13:30:27,592 - #20 idx
INFO  13:30:27,592 - #44 )
INFO  13:30:27,592 - #47 {
INFO  13:30:27,592 - #20 this
INFO  13:30:27,592 - #42 .
INFO  13:30:27,592 - #20 neg
INFO  13:30:27,592 - #45 [
INFO  13:30:27,592 - #20 idx
INFO  13:30:27,592 - #46 ]
INFO  13:30:27,592 - #37 =
INFO  13:30:27,592 - #20 a
INFO  13:30:27,592 - #40 ;
INFO  13:30:27,592 - #48 }
INFO  13:30:27,592 - #20 int
INFO  13:30:27,592 - #20 getp
INFO  13:30:27,592 - #43 (
INFO  13:30:27,592 - #20 int
INFO  13:30:27,592 - #20 idx
INFO  13:30:27,592 - #44 )
INFO  13:30:27,597 - #47 {
INFO  13:30:27,597 - #15 return
INFO  13:30:27,597 - #20 pos
INFO  13:30:27,597 - #45 [
INFO  13:30:27,597 - #20 idx
INFO  13:30:27,597 - #46 ]
INFO  13:30:27,597 - #40 ;
INFO  13:30:27,597 - #48 }
INFO  13:30:27,597 - #20 int
INFO  13:30:27,597 - #20 getn
INFO  13:30:27,597 - #43 (
INFO  13:30:27,597 - #20 int
INFO  13:30:27,597 - #20 idx
INFO  13:30:27,597 - #44 )
INFO  13:30:27,597 - #47 {
INFO  13:30:27,597 - #15 return
INFO  13:30:27,597 - #20 neg
INFO  13:30:27,597 - #45 [
INFO  13:30:27,597 - #20 idx
INFO  13:30:27,597 - #46 ]
INFO  13:30:27,597 - #40 ;
INFO  13:30:27,597 - #48 }
INFO  13:30:27,597 - #48 }
INFO  13:30:27,597 - #48 }
INFO  13:30:27,597 - #20 Table
INFO  13:30:27,602 - #20 val
INFO  13:30:27,602 - #40 ;
INFO  13:30:27,602 - #47 {
INFO  13:30:27,602 - #16 void
INFO  13:30:27,602 - #20 f
INFO  13:30:27,602 - #43 (
INFO  13:30:27,602 - #20 char
INFO  13:30:27,602 - #20 ch
INFO  13:30:27,602 - #41 ,
INFO  13:30:27,602 - #20 int
INFO  13:30:27,602 - #20 a
INFO  13:30:27,602 - #41 ,
INFO  13:30:27,602 - #20 int
INFO  13:30:27,602 - #20 arg
INFO  13:30:27,602 - #44 )
INFO  13:30:27,602 - #20 int
INFO  13:30:27,602 - #20 x
INFO  13:30:27,602 - #40 ;
INFO  13:30:27,602 - #47 {
INFO  13:30:27,602 - #20 x
INFO  13:30:27,602 - #37 =
INFO  13:30:27,602 - #20 arg
INFO  13:30:27,602 - #40 ;
INFO  13:30:27,602 - #48 }
INFO  13:30:27,602 - #16 void
INFO  13:30:27,602 - #20 main
INFO  13:30:27,602 - #43 (
INFO  13:30:27,602 - #44 )
INFO  13:30:27,602 - #20 int
INFO  13:30:27,602 - #20 x
INFO  13:30:27,602 - #41 ,
INFO  13:30:27,602 - #20 i
INFO  13:30:27,602 - #40 ;
INFO  13:30:27,602 - #20 char
INFO  13:30:27,602 - #20 c
INFO  13:30:27,602 - #40 ;
INFO  13:30:27,602 - #47 {
INFO  13:30:27,602 - #20 val
INFO  13:30:27,602 - #37 =
INFO  13:30:27,602 - #12 new
INFO  13:30:27,607 - #20 Table
INFO  13:30:27,607 - #40 ;
INFO  13:30:27,607 - #20 val
INFO  13:30:27,607 - #42 .
INFO  13:30:27,607 - #20 pos
INFO  13:30:27,607 - #37 =
INFO  13:30:27,607 - #12 new
INFO  13:30:27,607 - #20 int
INFO  13:30:27,607 - #45 [
INFO  13:30:27,607 - #20 size
INFO  13:30:27,612 - #46 ]
INFO  13:30:27,612 - #40 ;
INFO  13:30:27,612 - #20 val
INFO  13:30:27,612 - #42 .
INFO  13:30:27,612 - #20 neg
INFO  13:30:27,612 - #37 =
INFO  13:30:27,612 - #12 new
INFO  13:30:27,612 - #20 int
INFO  13:30:27,612 - #45 [
INFO  13:30:27,612 - #20 size
INFO  13:30:27,612 - #46 ]
INFO  13:30:27,612 - #40 ;
INFO  13:30:27,612 - #20 i
INFO  13:30:27,612 - #37 =
INFO  13:30:27,612 - #21 0
INFO  13:30:27,612 - #40 ;
INFO  13:30:27,612 - #10 do
INFO  13:30:27,612 - #47 {
INFO  13:30:27,612 - #20 val
INFO  13:30:27,612 - #42 .
INFO  13:30:27,612 - #20 putp
INFO  13:30:27,612 - #43 (
INFO  13:30:27,612 - #21 0
INFO  13:30:27,612 - #41 ,
INFO  13:30:27,612 - #20 i
INFO  13:30:27,612 - #44 )
INFO  13:30:27,612 - #40 ;
INFO  13:30:27,612 - #20 val
INFO  13:30:27,612 - #42 .
INFO  13:30:27,612 - #20 putn
INFO  13:30:27,612 - #43 (
INFO  13:30:27,612 - #21 0
INFO  13:30:27,612 - #41 ,
INFO  13:30:27,612 - #20 i
INFO  13:30:27,612 - #44 )
INFO  13:30:27,612 - #40 ;
INFO  13:30:27,612 - #20 i
INFO  13:30:27,612 - #38 ++
INFO  13:30:27,612 - #40 ;
INFO  13:30:27,612 - #48 }
INFO  13:30:27,612 - #11 while
INFO  13:30:27,612 - #43 (
INFO  13:30:27,612 - #20 i
INFO  13:30:27,612 - #33 <
INFO  13:30:27,617 - #20 size
INFO  13:30:27,617 - #44 )
INFO  13:30:27,617 - #40 ;
INFO  13:30:27,617 - #20 f
INFO  13:30:27,617 - #43 (
INFO  13:30:27,617 - #20 c
INFO  13:30:27,617 - #41 ,
INFO  13:30:27,617 - #20 x
INFO  13:30:27,617 - #41 ,
INFO  13:30:27,617 - #20 i
INFO  13:30:27,617 - #44 )
INFO  13:30:27,617 - #40 ;
INFO  13:30:27,617 - #14 read
INFO  13:30:27,617 - #43 (
INFO  13:30:27,617 - #20 x
INFO  13:30:27,617 - #44 )
INFO  13:30:27,617 - #40 ;
INFO  13:30:27,617 - #10 do
INFO  13:30:27,617 - #47 {
INFO  13:30:27,617 - #8 if
INFO  13:30:27,617 - #43 (
INFO  13:30:27,617 - #20 x
INFO  13:30:27,617 - #34 <=
INFO  13:30:27,617 - #21 0
INFO  13:30:27,622 - #44 )
INFO  13:30:27,622 - #3 break
INFO  13:30:27,622 - #40 ;
INFO  13:30:27,622 - #8 if
INFO  13:30:27,622 - #43 (
INFO  13:30:27,622 - #21 0
INFO  13:30:27,622 - #34 <=
INFO  13:30:27,622 - #20 x
INFO  13:30:27,622 - #35 &&
INFO  13:30:27,622 - #20 x
INFO  13:30:27,622 - #33 <
INFO  13:30:27,622 - #20 size
INFO  13:30:27,622 - #44 )
INFO  13:30:27,622 - #47 {
INFO  13:30:27,622 - #20 val
INFO  13:30:27,622 - #42 .
INFO  13:30:27,622 - #20 putp
INFO  13:30:27,622 - #43 (
INFO  13:30:27,622 - #20 val
INFO  13:30:27,622 - #42 .
INFO  13:30:27,622 - #20 getp
INFO  13:30:27,622 - #43 (
INFO  13:30:27,622 - #20 x
INFO  13:30:27,622 - #44 )
INFO  13:30:27,622 - #24 +
INFO  13:30:27,622 - #21 1
INFO  13:30:27,622 - #44 )
INFO  13:30:27,627 - #40 ;
INFO  13:30:27,627 - #48 }
INFO  13:30:27,627 - #6 else
INFO  13:30:27,627 - #8 if
INFO  13:30:27,627 - #43 (
INFO  13:30:27,627 - #20 size
INFO  13:30:27,627 - #33 <
INFO  13:30:27,627 - #20 x
INFO  13:30:27,627 - #35 &&
INFO  13:30:27,627 - #20 x
INFO  13:30:27,627 - #33 <
INFO  13:30:27,627 - #21 0
INFO  13:30:27,627 - #44 )
INFO  13:30:27,627 - #47 {
INFO  13:30:27,627 - #20 val
INFO  13:30:27,627 - #42 .
INFO  13:30:27,627 - #20 putn
INFO  13:30:27,627 - #43 (
INFO  13:30:27,627 - #20 val
INFO  13:30:27,627 - #42 .
INFO  13:30:27,627 - #20 getn
INFO  13:30:27,627 - #43 (
INFO  13:30:27,627 - #20 x
INFO  13:30:27,627 - #44 )
INFO  13:30:27,627 - #24 +
INFO  13:30:27,627 - #21 1
INFO  13:30:27,627 - #44 )
INFO  13:30:27,627 - #40 ;
INFO  13:30:27,632 - #48 }
INFO  13:30:27,632 - #14 read
INFO  13:30:27,632 - #43 (
INFO  13:30:27,632 - #20 x
INFO  13:30:27,632 - #44 )
INFO  13:30:27,632 - #40 ;
INFO  13:30:27,632 - #48 }
INFO  13:30:27,632 - #11 while
INFO  13:30:27,632 - #43 (
INFO  13:30:27,632 - #23 true
INFO  13:30:27,632 - #44 )
INFO  13:30:27,632 - #40 ;
INFO  13:30:27,632 - #13 print
INFO  13:30:27,632 - #43 (
INFO  13:30:27,632 - #25 -
INFO  13:30:27,632 - #21 3
INFO  13:30:27,632 - #24 +
INFO  13:30:27,632 - #21 5
INFO  13:30:27,632 - #44 )
INFO  13:30:27,632 - #40 ;
INFO  13:30:27,632 - #13 print
INFO  13:30:27,632 - #43 (
INFO  13:30:27,637 - #22 v
INFO  13:30:27,637 - #44 )
INFO  13:30:27,637 - #40 ;
INFO  13:30:27,637 - #13 print
INFO  13:30:27,637 - #43 (
INFO  13:30:27,637 - #20 x
INFO  13:30:27,637 - #34 <=
ERROR 13:30:27,637 - 
Sintaksna greska na liniji 51
ERROR 13:30:27,637 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 51
