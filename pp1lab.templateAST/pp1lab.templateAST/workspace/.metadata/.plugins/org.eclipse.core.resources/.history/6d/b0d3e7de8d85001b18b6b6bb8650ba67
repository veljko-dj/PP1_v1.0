INFO  12:44:31,216 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:44:31,291 - #2 program
INFO  12:44:31,291 - #20 Pro
INFO  12:44:31,291 - #7 const
INFO  12:44:31,291 - #20 int
INFO  12:44:31,291 - #20 size
INFO  12:44:31,291 - #37 =
INFO  12:44:31,291 - #21 10
INFO  12:44:31,291 - #40 ;
INFO  12:44:31,291 - #4 class
INFO  12:44:31,291 - #20 Table
INFO  12:44:31,291 - #47 {
INFO  12:44:31,296 - #20 int
INFO  12:44:31,296 - #20 pos
INFO  12:44:31,296 - #45 [
INFO  12:44:31,296 - #46 ]
INFO  12:44:31,296 - #41 ,
INFO  12:44:31,296 - #20 neg
INFO  12:44:31,296 - #45 [
INFO  12:44:31,298 - #46 ]
INFO  12:44:31,298 - #40 ;
INFO  12:44:31,298 - #47 {
INFO  12:44:31,298 - #16 void
INFO  12:44:31,298 - #20 putp
INFO  12:44:31,298 - #43 (
INFO  12:44:31,298 - #20 int
INFO  12:44:31,298 - #20 a
INFO  12:44:31,298 - #41 ,
INFO  12:44:31,298 - #20 int
INFO  12:44:31,298 - #20 idx
INFO  12:44:31,298 - #44 )
INFO  12:44:31,298 - #47 {
INFO  12:44:31,303 - #20 this
INFO  12:44:31,303 - #42 .
INFO  12:44:31,303 - #20 pos
INFO  12:44:31,303 - #45 [
INFO  12:44:31,303 - #20 idx
INFO  12:44:31,303 - #46 ]
INFO  12:44:31,303 - #37 =
INFO  12:44:31,303 - #20 a
INFO  12:44:31,303 - #40 ;
INFO  12:44:31,303 - #48 }
INFO  12:44:31,303 - #16 void
INFO  12:44:31,303 - #20 putn
INFO  12:44:31,303 - #43 (
INFO  12:44:31,303 - #20 int
INFO  12:44:31,303 - #20 a
INFO  12:44:31,303 - #41 ,
INFO  12:44:31,303 - #20 int
INFO  12:44:31,303 - #20 idx
INFO  12:44:31,303 - #44 )
INFO  12:44:31,303 - #47 {
INFO  12:44:31,303 - #20 this
INFO  12:44:31,303 - #42 .
INFO  12:44:31,308 - #20 neg
INFO  12:44:31,308 - #45 [
INFO  12:44:31,308 - #20 idx
INFO  12:44:31,308 - #46 ]
INFO  12:44:31,308 - #37 =
INFO  12:44:31,308 - #20 a
INFO  12:44:31,308 - #40 ;
INFO  12:44:31,308 - #48 }
INFO  12:44:31,308 - #20 int
INFO  12:44:31,308 - #20 getp
INFO  12:44:31,308 - #43 (
INFO  12:44:31,308 - #20 int
INFO  12:44:31,308 - #20 idx
INFO  12:44:31,308 - #44 )
INFO  12:44:31,308 - #47 {
INFO  12:44:31,313 - #15 return
INFO  12:44:31,313 - #20 pos
INFO  12:44:31,313 - #45 [
INFO  12:44:31,313 - #20 idx
INFO  12:44:31,318 - #46 ]
INFO  12:44:31,318 - #40 ;
INFO  12:44:31,318 - #48 }
INFO  12:44:31,318 - #20 int
INFO  12:44:31,318 - #20 getn
INFO  12:44:31,318 - #43 (
INFO  12:44:31,318 - #20 int
INFO  12:44:31,318 - #20 idx
INFO  12:44:31,318 - #44 )
INFO  12:44:31,318 - #47 {
INFO  12:44:31,318 - #15 return
INFO  12:44:31,318 - #20 neg
INFO  12:44:31,318 - #45 [
INFO  12:44:31,318 - #20 idx
INFO  12:44:31,318 - #46 ]
INFO  12:44:31,318 - #40 ;
INFO  12:44:31,318 - #48 }
INFO  12:44:31,318 - #48 }
INFO  12:44:31,318 - #48 }
INFO  12:44:31,318 - #20 Table
INFO  12:44:31,318 - #20 val
INFO  12:44:31,318 - #40 ;
INFO  12:44:31,318 - #47 {
INFO  12:44:31,318 - #16 void
INFO  12:44:31,323 - #20 f
INFO  12:44:31,323 - #43 (
INFO  12:44:31,323 - #20 char
INFO  12:44:31,323 - #20 ch
INFO  12:44:31,323 - #41 ,
INFO  12:44:31,323 - #20 int
INFO  12:44:31,323 - #20 a
INFO  12:44:31,323 - #41 ,
INFO  12:44:31,323 - #20 int
INFO  12:44:31,323 - #20 arg
INFO  12:44:31,323 - #44 )
INFO  12:44:31,323 - #20 int
INFO  12:44:31,323 - #20 x
INFO  12:44:31,323 - #40 ;
INFO  12:44:31,323 - #47 {
INFO  12:44:31,323 - #20 x
INFO  12:44:31,323 - #37 =
INFO  12:44:31,323 - #20 arg
INFO  12:44:31,323 - #40 ;
INFO  12:44:31,323 - #48 }
INFO  12:44:31,323 - #16 void
INFO  12:44:31,323 - #20 main
INFO  12:44:31,323 - #43 (
INFO  12:44:31,323 - #44 )
INFO  12:44:31,323 - #20 int
INFO  12:44:31,328 - #20 x
INFO  12:44:31,328 - #41 ,
INFO  12:44:31,328 - #20 i
INFO  12:44:31,328 - #40 ;
INFO  12:44:31,328 - #20 char
INFO  12:44:31,328 - #20 c
INFO  12:44:31,328 - #40 ;
INFO  12:44:31,328 - #47 {
INFO  12:44:31,328 - #20 val
INFO  12:44:31,328 - #37 =
INFO  12:44:31,328 - #12 new
INFO  12:44:31,328 - #20 Table
INFO  12:44:31,328 - #40 ;
INFO  12:44:31,328 - #20 val
INFO  12:44:31,328 - #42 .
INFO  12:44:31,328 - #20 pos
INFO  12:44:31,328 - #37 =
INFO  12:44:31,328 - #12 new
INFO  12:44:31,328 - #20 int
INFO  12:44:31,328 - #45 [
INFO  12:44:31,328 - #20 size
INFO  12:44:31,328 - #46 ]
INFO  12:44:31,328 - #40 ;
INFO  12:44:31,328 - #20 val
INFO  12:44:31,328 - #42 .
INFO  12:44:31,328 - #20 neg
INFO  12:44:31,328 - #37 =
INFO  12:44:31,328 - #12 new
INFO  12:44:31,328 - #20 int
INFO  12:44:31,328 - #45 [
INFO  12:44:31,328 - #20 size
INFO  12:44:31,328 - #46 ]
INFO  12:44:31,328 - #40 ;
INFO  12:44:31,328 - #20 i
INFO  12:44:31,328 - #37 =
INFO  12:44:31,328 - #21 0
INFO  12:44:31,328 - #40 ;
INFO  12:44:31,333 - #10 do
INFO  12:44:31,333 - #47 {
INFO  12:44:31,333 - #20 val
INFO  12:44:31,333 - #42 .
INFO  12:44:31,333 - #20 putp
INFO  12:44:31,333 - #43 (
INFO  12:44:31,333 - #21 0
INFO  12:44:31,333 - #41 ,
INFO  12:44:31,333 - #20 i
INFO  12:44:31,333 - #44 )
INFO  12:44:31,333 - #40 ;
INFO  12:44:31,333 - #20 val
INFO  12:44:31,333 - #42 .
INFO  12:44:31,333 - #20 putn
INFO  12:44:31,333 - #43 (
INFO  12:44:31,333 - #21 0
INFO  12:44:31,333 - #41 ,
INFO  12:44:31,333 - #20 i
INFO  12:44:31,333 - #44 )
INFO  12:44:31,333 - #40 ;
INFO  12:44:31,333 - #20 i
INFO  12:44:31,333 - #38 ++
INFO  12:44:31,333 - #40 ;
INFO  12:44:31,333 - #48 }
INFO  12:44:31,333 - #11 while
INFO  12:44:31,333 - #43 (
INFO  12:44:31,333 - #20 i
INFO  12:44:31,333 - #33 <
INFO  12:44:31,333 - #20 size
INFO  12:44:31,333 - #44 )
INFO  12:44:31,338 - #40 ;
INFO  12:44:31,338 - #20 f
INFO  12:44:31,338 - #43 (
INFO  12:44:31,338 - #20 c
INFO  12:44:31,338 - #41 ,
INFO  12:44:31,338 - #20 x
INFO  12:44:31,338 - #41 ,
INFO  12:44:31,338 - #20 i
INFO  12:44:31,338 - #44 )
INFO  12:44:31,338 - #40 ;
INFO  12:44:31,338 - #14 read
INFO  12:44:31,338 - #43 (
INFO  12:44:31,338 - #20 x
INFO  12:44:31,338 - #44 )
INFO  12:44:31,338 - #40 ;
INFO  12:44:31,338 - #10 do
INFO  12:44:31,338 - #47 {
INFO  12:44:31,338 - #8 if
INFO  12:44:31,338 - #43 (
INFO  12:44:31,338 - #20 x
INFO  12:44:31,338 - #34 <=
INFO  12:44:31,338 - #21 0
INFO  12:44:31,338 - #44 )
INFO  12:44:31,338 - #3 break
INFO  12:44:31,338 - #40 ;
INFO  12:44:31,338 - #8 if
INFO  12:44:31,343 - #43 (
INFO  12:44:31,343 - #21 0
INFO  12:44:31,343 - #34 <=
INFO  12:44:31,343 - #20 x
INFO  12:44:31,343 - #35 &&
INFO  12:44:31,343 - #20 x
INFO  12:44:31,343 - #33 <
INFO  12:44:31,343 - #20 size
INFO  12:44:31,343 - #44 )
INFO  12:44:31,343 - #47 {
INFO  12:44:31,343 - #20 val
INFO  12:44:31,343 - #42 .
INFO  12:44:31,343 - #20 putp
INFO  12:44:31,343 - #43 (
INFO  12:44:31,343 - #20 val
INFO  12:44:31,343 - #42 .
INFO  12:44:31,343 - #20 getp
INFO  12:44:31,343 - #43 (
INFO  12:44:31,343 - #20 x
INFO  12:44:31,343 - #44 )
INFO  12:44:31,343 - #24 +
INFO  12:44:31,343 - #21 1
INFO  12:44:31,348 - #44 )
INFO  12:44:31,348 - #40 ;
INFO  12:44:31,348 - #48 }
INFO  12:44:31,348 - #6 else
INFO  12:44:31,348 - #8 if
INFO  12:44:31,348 - #43 (
INFO  12:44:31,348 - #20 size
INFO  12:44:31,348 - #33 <
INFO  12:44:31,348 - #20 x
INFO  12:44:31,348 - #35 &&
INFO  12:44:31,348 - #20 x
INFO  12:44:31,348 - #33 <
INFO  12:44:31,348 - #21 0
INFO  12:44:31,348 - #44 )
INFO  12:44:31,348 - #47 {
INFO  12:44:31,348 - #20 val
INFO  12:44:31,348 - #42 .
INFO  12:44:31,348 - #20 putn
INFO  12:44:31,348 - #43 (
INFO  12:44:31,348 - #20 val
INFO  12:44:31,348 - #42 .
INFO  12:44:31,348 - #20 getn
INFO  12:44:31,348 - #43 (
INFO  12:44:31,348 - #20 x
INFO  12:44:31,348 - #44 )
INFO  12:44:31,348 - #24 +
INFO  12:44:31,348 - #21 1
INFO  12:44:31,348 - #44 )
INFO  12:44:31,348 - #40 ;
INFO  12:44:31,348 - #48 }
INFO  12:44:31,348 - #14 read
INFO  12:44:31,353 - #43 (
INFO  12:44:31,353 - #20 x
INFO  12:44:31,353 - #44 )
INFO  12:44:31,353 - #40 ;
INFO  12:44:31,353 - #48 }
INFO  12:44:31,353 - #11 while
INFO  12:44:31,353 - #43 (
INFO  12:44:31,353 - #23 true
INFO  12:44:31,353 - #44 )
INFO  12:44:31,353 - #40 ;
INFO  12:44:31,353 - #13 print
INFO  12:44:31,353 - #43 (
INFO  12:44:31,353 - #22 'x'
INFO  12:44:31,353 - #44 )
