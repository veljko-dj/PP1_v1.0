INFO  12:44:41,435 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:44:41,500 - #2 program
INFO  12:44:41,500 - #20 Pro
INFO  12:44:41,500 - #7 const
INFO  12:44:41,500 - #20 int
INFO  12:44:41,500 - #20 size
INFO  12:44:41,505 - #37 =
INFO  12:44:41,505 - #21 10
INFO  12:44:41,505 - #40 ;
INFO  12:44:41,505 - #4 class
INFO  12:44:41,505 - #20 Table
INFO  12:44:41,505 - #47 {
INFO  12:44:41,505 - #20 int
INFO  12:44:41,505 - #20 pos
INFO  12:44:41,505 - #45 [
INFO  12:44:41,505 - #46 ]
INFO  12:44:41,505 - #41 ,
INFO  12:44:41,510 - #20 neg
INFO  12:44:41,510 - #45 [
INFO  12:44:41,510 - #46 ]
INFO  12:44:41,510 - #40 ;
INFO  12:44:41,510 - #47 {
INFO  12:44:41,510 - #16 void
INFO  12:44:41,510 - #20 putp
INFO  12:44:41,510 - #43 (
INFO  12:44:41,510 - #20 int
INFO  12:44:41,510 - #20 a
INFO  12:44:41,510 - #41 ,
INFO  12:44:41,515 - #20 int
INFO  12:44:41,515 - #20 idx
INFO  12:44:41,515 - #44 )
INFO  12:44:41,515 - #47 {
INFO  12:44:41,515 - #20 this
INFO  12:44:41,515 - #42 .
INFO  12:44:41,515 - #20 pos
INFO  12:44:41,515 - #45 [
INFO  12:44:41,515 - #20 idx
INFO  12:44:41,515 - #46 ]
INFO  12:44:41,515 - #37 =
INFO  12:44:41,515 - #20 a
INFO  12:44:41,515 - #40 ;
INFO  12:44:41,515 - #48 }
INFO  12:44:41,520 - #16 void
INFO  12:44:41,520 - #20 putn
INFO  12:44:41,520 - #43 (
INFO  12:44:41,520 - #20 int
INFO  12:44:41,520 - #20 a
INFO  12:44:41,520 - #41 ,
INFO  12:44:41,520 - #20 int
INFO  12:44:41,520 - #20 idx
INFO  12:44:41,520 - #44 )
INFO  12:44:41,520 - #47 {
INFO  12:44:41,520 - #20 this
INFO  12:44:41,520 - #42 .
INFO  12:44:41,520 - #20 neg
INFO  12:44:41,520 - #45 [
INFO  12:44:41,520 - #20 idx
INFO  12:44:41,520 - #46 ]
INFO  12:44:41,520 - #37 =
INFO  12:44:41,520 - #20 a
INFO  12:44:41,520 - #40 ;
INFO  12:44:41,520 - #48 }
INFO  12:44:41,520 - #20 int
INFO  12:44:41,520 - #20 getp
INFO  12:44:41,520 - #43 (
INFO  12:44:41,520 - #20 int
INFO  12:44:41,520 - #20 idx
INFO  12:44:41,520 - #44 )
INFO  12:44:41,520 - #47 {
INFO  12:44:41,520 - #15 return
INFO  12:44:41,520 - #20 pos
INFO  12:44:41,520 - #45 [
INFO  12:44:41,520 - #20 idx
INFO  12:44:41,520 - #46 ]
INFO  12:44:41,520 - #40 ;
INFO  12:44:41,520 - #48 }
INFO  12:44:41,525 - #20 int
INFO  12:44:41,525 - #20 getn
INFO  12:44:41,525 - #43 (
INFO  12:44:41,525 - #20 int
INFO  12:44:41,525 - #20 idx
INFO  12:44:41,525 - #44 )
INFO  12:44:41,525 - #47 {
INFO  12:44:41,525 - #15 return
INFO  12:44:41,525 - #20 neg
INFO  12:44:41,525 - #45 [
INFO  12:44:41,525 - #20 idx
INFO  12:44:41,525 - #46 ]
INFO  12:44:41,525 - #40 ;
INFO  12:44:41,525 - #48 }
INFO  12:44:41,525 - #48 }
INFO  12:44:41,525 - #48 }
INFO  12:44:41,525 - #20 Table
INFO  12:44:41,525 - #20 val
INFO  12:44:41,525 - #40 ;
INFO  12:44:41,525 - #47 {
INFO  12:44:41,525 - #16 void
INFO  12:44:41,525 - #20 f
INFO  12:44:41,525 - #43 (
INFO  12:44:41,525 - #20 char
INFO  12:44:41,525 - #20 ch
INFO  12:44:41,525 - #41 ,
INFO  12:44:41,525 - #20 int
INFO  12:44:41,525 - #20 a
INFO  12:44:41,525 - #41 ,
INFO  12:44:41,525 - #20 int
INFO  12:44:41,525 - #20 arg
INFO  12:44:41,525 - #44 )
INFO  12:44:41,530 - #20 int
INFO  12:44:41,530 - #20 x
INFO  12:44:41,530 - #40 ;
INFO  12:44:41,530 - #47 {
INFO  12:44:41,530 - #20 x
INFO  12:44:41,530 - #37 =
INFO  12:44:41,530 - #20 arg
INFO  12:44:41,530 - #40 ;
INFO  12:44:41,530 - #48 }
INFO  12:44:41,530 - #16 void
INFO  12:44:41,530 - #20 main
INFO  12:44:41,530 - #43 (
INFO  12:44:41,530 - #44 )
INFO  12:44:41,530 - #20 int
INFO  12:44:41,530 - #20 x
INFO  12:44:41,530 - #41 ,
INFO  12:44:41,530 - #20 i
INFO  12:44:41,530 - #40 ;
INFO  12:44:41,530 - #20 char
INFO  12:44:41,530 - #20 c
INFO  12:44:41,530 - #40 ;
INFO  12:44:41,530 - #47 {
INFO  12:44:41,530 - #20 val
INFO  12:44:41,530 - #37 =
INFO  12:44:41,530 - #12 new
INFO  12:44:41,535 - #20 Table
INFO  12:44:41,535 - #40 ;
INFO  12:44:41,535 - #20 val
INFO  12:44:41,535 - #42 .
INFO  12:44:41,535 - #20 pos
INFO  12:44:41,535 - #37 =
INFO  12:44:41,535 - #12 new
INFO  12:44:41,535 - #20 int
INFO  12:44:41,535 - #45 [
INFO  12:44:41,535 - #20 size
INFO  12:44:41,535 - #46 ]
INFO  12:44:41,535 - #40 ;
INFO  12:44:41,535 - #20 val
INFO  12:44:41,535 - #42 .
INFO  12:44:41,535 - #20 neg
INFO  12:44:41,535 - #37 =
INFO  12:44:41,540 - #12 new
INFO  12:44:41,540 - #20 int
INFO  12:44:41,540 - #45 [
INFO  12:44:41,540 - #20 size
INFO  12:44:41,540 - #46 ]
INFO  12:44:41,540 - #40 ;
INFO  12:44:41,540 - #20 i
INFO  12:44:41,540 - #37 =
INFO  12:44:41,540 - #21 0
INFO  12:44:41,540 - #40 ;
INFO  12:44:41,540 - #10 do
INFO  12:44:41,540 - #47 {
INFO  12:44:41,540 - #20 val
INFO  12:44:41,540 - #42 .
INFO  12:44:41,540 - #20 putp
INFO  12:44:41,540 - #43 (
INFO  12:44:41,540 - #21 0
INFO  12:44:41,540 - #41 ,
INFO  12:44:41,540 - #20 i
INFO  12:44:41,540 - #44 )
INFO  12:44:41,540 - #40 ;
INFO  12:44:41,540 - #20 val
INFO  12:44:41,540 - #42 .
INFO  12:44:41,540 - #20 putn
INFO  12:44:41,540 - #43 (
INFO  12:44:41,540 - #21 0
INFO  12:44:41,540 - #41 ,
INFO  12:44:41,540 - #20 i
INFO  12:44:41,540 - #44 )
INFO  12:44:41,540 - #40 ;
INFO  12:44:41,540 - #20 i
INFO  12:44:41,540 - #38 ++
INFO  12:44:41,540 - #40 ;
INFO  12:44:41,540 - #48 }
INFO  12:44:41,540 - #11 while
INFO  12:44:41,540 - #43 (
INFO  12:44:41,540 - #20 i
INFO  12:44:41,540 - #33 <
INFO  12:44:41,545 - #20 size
INFO  12:44:41,545 - #44 )
INFO  12:44:41,545 - #40 ;
INFO  12:44:41,545 - #20 f
INFO  12:44:41,545 - #43 (
INFO  12:44:41,545 - #20 c
INFO  12:44:41,545 - #41 ,
INFO  12:44:41,545 - #20 x
INFO  12:44:41,545 - #41 ,
INFO  12:44:41,545 - #20 i
INFO  12:44:41,545 - #44 )
INFO  12:44:41,545 - #40 ;
INFO  12:44:41,545 - #14 read
INFO  12:44:41,545 - #43 (
INFO  12:44:41,545 - #20 x
INFO  12:44:41,545 - #44 )
INFO  12:44:41,545 - #40 ;
INFO  12:44:41,545 - #10 do
INFO  12:44:41,545 - #47 {
INFO  12:44:41,545 - #8 if
INFO  12:44:41,545 - #43 (
INFO  12:44:41,545 - #20 x
INFO  12:44:41,545 - #34 <=
INFO  12:44:41,550 - #21 0
INFO  12:44:41,550 - #44 )
INFO  12:44:41,550 - #3 break
INFO  12:44:41,550 - #40 ;
INFO  12:44:41,550 - #8 if
INFO  12:44:41,550 - #43 (
INFO  12:44:41,550 - #21 0
INFO  12:44:41,550 - #34 <=
INFO  12:44:41,550 - #20 x
INFO  12:44:41,550 - #35 &&
INFO  12:44:41,550 - #20 x
INFO  12:44:41,550 - #33 <
INFO  12:44:41,550 - #20 size
INFO  12:44:41,550 - #44 )
INFO  12:44:41,550 - #47 {
INFO  12:44:41,550 - #20 val
INFO  12:44:41,550 - #42 .
INFO  12:44:41,550 - #20 putp
INFO  12:44:41,550 - #43 (
INFO  12:44:41,550 - #20 val
INFO  12:44:41,550 - #42 .
INFO  12:44:41,550 - #20 getp
INFO  12:44:41,550 - #43 (
INFO  12:44:41,550 - #20 x
INFO  12:44:41,550 - #44 )
INFO  12:44:41,550 - #24 +
INFO  12:44:41,550 - #21 1
INFO  12:44:41,555 - #44 )
INFO  12:44:41,555 - #40 ;
INFO  12:44:41,555 - #48 }
INFO  12:44:41,555 - #6 else
INFO  12:44:41,555 - #8 if
INFO  12:44:41,555 - #43 (
INFO  12:44:41,555 - #20 size
INFO  12:44:41,555 - #33 <
INFO  12:44:41,555 - #20 x
INFO  12:44:41,555 - #35 &&
INFO  12:44:41,555 - #20 x
INFO  12:44:41,555 - #33 <
INFO  12:44:41,555 - #21 0
INFO  12:44:41,555 - #44 )
INFO  12:44:41,555 - #47 {
INFO  12:44:41,555 - #20 val
INFO  12:44:41,555 - #42 .
INFO  12:44:41,555 - #20 putn
INFO  12:44:41,555 - #43 (
INFO  12:44:41,555 - #20 val
INFO  12:44:41,555 - #42 .
INFO  12:44:41,555 - #20 getn
INFO  12:44:41,555 - #43 (
INFO  12:44:41,555 - #20 x
INFO  12:44:41,555 - #44 )
INFO  12:44:41,555 - #24 +
INFO  12:44:41,555 - #21 1
INFO  12:44:41,555 - #44 )
INFO  12:44:41,555 - #40 ;
INFO  12:44:41,555 - #48 }
INFO  12:44:41,555 - #14 read
INFO  12:44:41,555 - #43 (
INFO  12:44:41,555 - #20 x
INFO  12:44:41,555 - #44 )
INFO  12:44:41,560 - #40 ;
INFO  12:44:41,560 - #48 }
INFO  12:44:41,560 - #11 while
INFO  12:44:41,560 - #43 (
INFO  12:44:41,560 - #23 true
INFO  12:44:41,560 - #44 )
INFO  12:44:41,560 - #40 ;
INFO  12:44:41,560 - #13 print
INFO  12:44:41,560 - #43 (
INFO  12:44:41,560 - #22 'x'
INFO  12:44:41,560 - #44 )
