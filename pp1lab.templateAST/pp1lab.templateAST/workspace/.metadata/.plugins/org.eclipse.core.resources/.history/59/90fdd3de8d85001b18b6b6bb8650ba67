INFO  12:45:03,508 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:45:03,573 - #2 program
INFO  12:45:03,578 - #20 Pro
INFO  12:45:03,578 - #7 const
INFO  12:45:03,578 - #20 int
INFO  12:45:03,578 - #20 size
INFO  12:45:03,578 - #37 =
INFO  12:45:03,578 - #21 10
INFO  12:45:03,578 - #40 ;
INFO  12:45:03,578 - #4 class
INFO  12:45:03,578 - #20 Table
INFO  12:45:03,578 - #47 {
INFO  12:45:03,578 - #20 int
INFO  12:45:03,578 - #20 pos
INFO  12:45:03,578 - #45 [
INFO  12:45:03,583 - #46 ]
INFO  12:45:03,583 - #41 ,
INFO  12:45:03,583 - #20 neg
INFO  12:45:03,583 - #45 [
INFO  12:45:03,584 - #46 ]
INFO  12:45:03,584 - #40 ;
INFO  12:45:03,584 - #47 {
INFO  12:45:03,584 - #16 void
INFO  12:45:03,584 - #20 putp
INFO  12:45:03,584 - #43 (
INFO  12:45:03,584 - #20 int
INFO  12:45:03,584 - #20 a
INFO  12:45:03,584 - #41 ,
INFO  12:45:03,584 - #20 int
INFO  12:45:03,584 - #20 idx
INFO  12:45:03,584 - #44 )
INFO  12:45:03,584 - #47 {
INFO  12:45:03,584 - #20 this
INFO  12:45:03,589 - #42 .
INFO  12:45:03,589 - #20 pos
INFO  12:45:03,589 - #45 [
INFO  12:45:03,589 - #20 idx
INFO  12:45:03,589 - #46 ]
INFO  12:45:03,589 - #37 =
INFO  12:45:03,589 - #20 a
INFO  12:45:03,589 - #40 ;
INFO  12:45:03,589 - #48 }
INFO  12:45:03,589 - #16 void
INFO  12:45:03,589 - #20 putn
INFO  12:45:03,589 - #43 (
INFO  12:45:03,589 - #20 int
INFO  12:45:03,589 - #20 a
INFO  12:45:03,589 - #41 ,
INFO  12:45:03,589 - #20 int
INFO  12:45:03,589 - #20 idx
INFO  12:45:03,594 - #44 )
INFO  12:45:03,594 - #47 {
INFO  12:45:03,594 - #20 this
INFO  12:45:03,594 - #42 .
INFO  12:45:03,594 - #20 neg
INFO  12:45:03,594 - #45 [
INFO  12:45:03,594 - #20 idx
INFO  12:45:03,594 - #46 ]
INFO  12:45:03,594 - #37 =
INFO  12:45:03,594 - #20 a
INFO  12:45:03,594 - #40 ;
INFO  12:45:03,594 - #48 }
INFO  12:45:03,594 - #20 int
INFO  12:45:03,594 - #20 getp
INFO  12:45:03,594 - #43 (
INFO  12:45:03,594 - #20 int
INFO  12:45:03,594 - #20 idx
INFO  12:45:03,594 - #44 )
INFO  12:45:03,594 - #47 {
INFO  12:45:03,599 - #15 return
INFO  12:45:03,599 - #20 pos
INFO  12:45:03,599 - #45 [
INFO  12:45:03,599 - #20 idx
INFO  12:45:03,599 - #46 ]
INFO  12:45:03,599 - #40 ;
INFO  12:45:03,599 - #48 }
INFO  12:45:03,599 - #20 int
INFO  12:45:03,599 - #20 getn
INFO  12:45:03,599 - #43 (
INFO  12:45:03,599 - #20 int
INFO  12:45:03,599 - #20 idx
INFO  12:45:03,599 - #44 )
INFO  12:45:03,599 - #47 {
INFO  12:45:03,599 - #15 return
INFO  12:45:03,599 - #20 neg
INFO  12:45:03,604 - #45 [
INFO  12:45:03,604 - #20 idx
INFO  12:45:03,604 - #46 ]
INFO  12:45:03,604 - #40 ;
INFO  12:45:03,604 - #48 }
INFO  12:45:03,604 - #48 }
INFO  12:45:03,604 - #48 }
INFO  12:45:03,604 - #20 Table
INFO  12:45:03,604 - #20 val
INFO  12:45:03,604 - #40 ;
INFO  12:45:03,604 - #47 {
INFO  12:45:03,604 - #16 void
INFO  12:45:03,604 - #20 f
INFO  12:45:03,604 - #43 (
INFO  12:45:03,604 - #20 char
INFO  12:45:03,604 - #20 ch
INFO  12:45:03,604 - #41 ,
INFO  12:45:03,604 - #20 int
INFO  12:45:03,604 - #20 a
INFO  12:45:03,604 - #41 ,
INFO  12:45:03,604 - #20 int
INFO  12:45:03,604 - #20 arg
INFO  12:45:03,604 - #44 )
INFO  12:45:03,604 - #20 int
INFO  12:45:03,604 - #20 x
INFO  12:45:03,604 - #40 ;
INFO  12:45:03,604 - #47 {
INFO  12:45:03,604 - #20 x
INFO  12:45:03,604 - #37 =
INFO  12:45:03,604 - #20 arg
INFO  12:45:03,604 - #40 ;
INFO  12:45:03,604 - #48 }
INFO  12:45:03,604 - #16 void
INFO  12:45:03,604 - #20 main
INFO  12:45:03,604 - #43 (
INFO  12:45:03,604 - #44 )
INFO  12:45:03,604 - #20 int
INFO  12:45:03,604 - #20 x
INFO  12:45:03,604 - #41 ,
INFO  12:45:03,604 - #20 i
INFO  12:45:03,604 - #40 ;
INFO  12:45:03,604 - #20 char
INFO  12:45:03,604 - #20 c
INFO  12:45:03,609 - #40 ;
INFO  12:45:03,609 - #47 {
INFO  12:45:03,609 - #20 val
INFO  12:45:03,609 - #37 =
INFO  12:45:03,609 - #12 new
INFO  12:45:03,609 - #20 Table
INFO  12:45:03,609 - #40 ;
INFO  12:45:03,609 - #20 val
INFO  12:45:03,609 - #42 .
INFO  12:45:03,609 - #20 pos
INFO  12:45:03,609 - #37 =
INFO  12:45:03,609 - #12 new
INFO  12:45:03,609 - #20 int
INFO  12:45:03,609 - #45 [
INFO  12:45:03,609 - #20 size
INFO  12:45:03,609 - #46 ]
INFO  12:45:03,609 - #40 ;
INFO  12:45:03,609 - #20 val
INFO  12:45:03,609 - #42 .
INFO  12:45:03,609 - #20 neg
INFO  12:45:03,609 - #37 =
INFO  12:45:03,609 - #12 new
INFO  12:45:03,609 - #20 int
INFO  12:45:03,609 - #45 [
INFO  12:45:03,609 - #20 size
INFO  12:45:03,609 - #46 ]
INFO  12:45:03,609 - #40 ;
INFO  12:45:03,609 - #20 i
INFO  12:45:03,609 - #37 =
INFO  12:45:03,609 - #21 0
INFO  12:45:03,609 - #40 ;
INFO  12:45:03,609 - #10 do
INFO  12:45:03,609 - #47 {
INFO  12:45:03,609 - #20 val
INFO  12:45:03,609 - #42 .
INFO  12:45:03,609 - #20 putp
INFO  12:45:03,609 - #43 (
INFO  12:45:03,609 - #21 0
INFO  12:45:03,609 - #41 ,
INFO  12:45:03,609 - #20 i
INFO  12:45:03,614 - #44 )
INFO  12:45:03,614 - #40 ;
INFO  12:45:03,614 - #20 val
INFO  12:45:03,614 - #42 .
INFO  12:45:03,614 - #20 putn
INFO  12:45:03,614 - #43 (
INFO  12:45:03,614 - #21 0
INFO  12:45:03,614 - #41 ,
INFO  12:45:03,614 - #20 i
INFO  12:45:03,614 - #44 )
INFO  12:45:03,614 - #40 ;
INFO  12:45:03,614 - #20 i
INFO  12:45:03,614 - #38 ++
INFO  12:45:03,614 - #40 ;
INFO  12:45:03,614 - #48 }
INFO  12:45:03,614 - #11 while
INFO  12:45:03,614 - #43 (
INFO  12:45:03,614 - #20 i
INFO  12:45:03,614 - #33 <
INFO  12:45:03,614 - #20 size
INFO  12:45:03,614 - #44 )
INFO  12:45:03,619 - #40 ;
INFO  12:45:03,619 - #20 f
INFO  12:45:03,619 - #43 (
INFO  12:45:03,619 - #20 c
INFO  12:45:03,619 - #41 ,
INFO  12:45:03,619 - #20 x
INFO  12:45:03,619 - #41 ,
INFO  12:45:03,619 - #20 i
INFO  12:45:03,619 - #44 )
INFO  12:45:03,619 - #40 ;
INFO  12:45:03,619 - #14 read
INFO  12:45:03,619 - #43 (
INFO  12:45:03,619 - #20 x
INFO  12:45:03,619 - #44 )
INFO  12:45:03,619 - #40 ;
INFO  12:45:03,619 - #10 do
INFO  12:45:03,619 - #47 {
INFO  12:45:03,619 - #8 if
INFO  12:45:03,619 - #43 (
INFO  12:45:03,619 - #20 x
INFO  12:45:03,619 - #34 <=
INFO  12:45:03,619 - #21 0
INFO  12:45:03,619 - #44 )
INFO  12:45:03,619 - #3 break
INFO  12:45:03,619 - #40 ;
INFO  12:45:03,619 - #8 if
INFO  12:45:03,619 - #43 (
INFO  12:45:03,624 - #21 0
INFO  12:45:03,624 - #34 <=
INFO  12:45:03,624 - #20 x
INFO  12:45:03,624 - #35 &&
INFO  12:45:03,624 - #20 x
INFO  12:45:03,624 - #33 <
INFO  12:45:03,624 - #20 size
INFO  12:45:03,624 - #44 )
INFO  12:45:03,624 - #47 {
INFO  12:45:03,624 - #20 val
INFO  12:45:03,624 - #42 .
INFO  12:45:03,624 - #20 putp
INFO  12:45:03,624 - #43 (
INFO  12:45:03,624 - #20 val
INFO  12:45:03,624 - #42 .
INFO  12:45:03,624 - #20 getp
INFO  12:45:03,624 - #43 (
INFO  12:45:03,624 - #20 x
INFO  12:45:03,624 - #44 )
INFO  12:45:03,624 - #24 +
INFO  12:45:03,624 - #21 1
INFO  12:45:03,624 - #44 )
INFO  12:45:03,624 - #40 ;
INFO  12:45:03,624 - #48 }
INFO  12:45:03,624 - #6 else
INFO  12:45:03,624 - #8 if
INFO  12:45:03,624 - #43 (
INFO  12:45:03,624 - #20 size
INFO  12:45:03,624 - #33 <
INFO  12:45:03,629 - #20 x
INFO  12:45:03,629 - #35 &&
INFO  12:45:03,629 - #20 x
INFO  12:45:03,629 - #33 <
INFO  12:45:03,629 - #21 0
INFO  12:45:03,629 - #44 )
INFO  12:45:03,629 - #47 {
INFO  12:45:03,629 - #20 val
INFO  12:45:03,629 - #42 .
INFO  12:45:03,629 - #20 putn
INFO  12:45:03,629 - #43 (
INFO  12:45:03,629 - #20 val
INFO  12:45:03,629 - #42 .
INFO  12:45:03,629 - #20 getn
INFO  12:45:03,629 - #43 (
INFO  12:45:03,629 - #20 x
INFO  12:45:03,629 - #44 )
INFO  12:45:03,629 - #24 +
INFO  12:45:03,629 - #21 1
INFO  12:45:03,629 - #44 )
INFO  12:45:03,629 - #40 ;
INFO  12:45:03,629 - #48 }
INFO  12:45:03,629 - #14 read
INFO  12:45:03,634 - #43 (
INFO  12:45:03,634 - #20 x
INFO  12:45:03,634 - #44 )
INFO  12:45:03,634 - #40 ;
INFO  12:45:03,634 - #48 }
INFO  12:45:03,634 - #11 while
INFO  12:45:03,634 - #43 (
INFO  12:45:03,634 - #23 true
INFO  12:45:03,634 - #44 )
INFO  12:45:03,634 - #40 ;
INFO  12:45:03,634 - #13 print
INFO  12:45:03,634 - #43 (
INFO  12:45:03,634 - #20 x
INFO  12:45:03,634 - #33 <
ERROR 12:45:03,634 - 
Sintaksna greska na liniji 48
ERROR 12:45:03,634 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
