INFO  13:28:48,448 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:28:48,513 - #2 program
INFO  13:28:48,513 - #20 Pro
INFO  13:28:48,513 - #7 const
INFO  13:28:48,518 - #20 int
INFO  13:28:48,518 - #20 size
INFO  13:28:48,518 - #37 =
INFO  13:28:48,518 - #21 10
INFO  13:28:48,518 - #40 ;
INFO  13:28:48,518 - #4 class
INFO  13:28:48,518 - #20 Table
INFO  13:28:48,518 - #47 {
INFO  13:28:48,523 - #20 int
INFO  13:28:48,523 - #20 pos
INFO  13:28:48,523 - #45 [
INFO  13:28:48,523 - #46 ]
INFO  13:28:48,523 - #41 ,
INFO  13:28:48,523 - #20 neg
INFO  13:28:48,523 - #45 [
INFO  13:28:48,523 - #46 ]
INFO  13:28:48,523 - #40 ;
INFO  13:28:48,523 - #47 {
INFO  13:28:48,523 - #16 void
INFO  13:28:48,523 - #20 putp
INFO  13:28:48,528 - #43 (
INFO  13:28:48,528 - #20 int
INFO  13:28:48,528 - #20 a
INFO  13:28:48,528 - #41 ,
INFO  13:28:48,528 - #20 int
INFO  13:28:48,528 - #20 idx
INFO  13:28:48,528 - #44 )
INFO  13:28:48,528 - #47 {
INFO  13:28:48,528 - #20 this
INFO  13:28:48,528 - #42 .
INFO  13:28:48,528 - #20 pos
INFO  13:28:48,528 - #45 [
INFO  13:28:48,528 - #20 idx
INFO  13:28:48,528 - #46 ]
INFO  13:28:48,528 - #37 =
INFO  13:28:48,528 - #20 a
INFO  13:28:48,533 - #40 ;
INFO  13:28:48,533 - #48 }
INFO  13:28:48,533 - #16 void
INFO  13:28:48,533 - #20 putn
INFO  13:28:48,533 - #43 (
INFO  13:28:48,533 - #20 int
INFO  13:28:48,533 - #20 a
INFO  13:28:48,533 - #41 ,
INFO  13:28:48,533 - #20 int
INFO  13:28:48,533 - #20 idx
INFO  13:28:48,533 - #44 )
INFO  13:28:48,533 - #47 {
INFO  13:28:48,533 - #20 this
INFO  13:28:48,533 - #42 .
INFO  13:28:48,533 - #20 neg
INFO  13:28:48,533 - #45 [
INFO  13:28:48,533 - #20 idx
INFO  13:28:48,533 - #46 ]
INFO  13:28:48,533 - #37 =
INFO  13:28:48,533 - #20 a
INFO  13:28:48,533 - #40 ;
INFO  13:28:48,533 - #48 }
INFO  13:28:48,533 - #20 int
INFO  13:28:48,533 - #20 getp
INFO  13:28:48,533 - #43 (
INFO  13:28:48,538 - #20 int
INFO  13:28:48,538 - #20 idx
INFO  13:28:48,538 - #44 )
INFO  13:28:48,538 - #47 {
INFO  13:28:48,538 - #15 return
INFO  13:28:48,538 - #20 pos
INFO  13:28:48,538 - #45 [
INFO  13:28:48,538 - #20 idx
INFO  13:28:48,538 - #46 ]
INFO  13:28:48,538 - #40 ;
INFO  13:28:48,538 - #48 }
INFO  13:28:48,538 - #20 int
INFO  13:28:48,538 - #20 getn
INFO  13:28:48,538 - #43 (
INFO  13:28:48,538 - #20 int
INFO  13:28:48,538 - #20 idx
INFO  13:28:48,538 - #44 )
INFO  13:28:48,538 - #47 {
INFO  13:28:48,538 - #15 return
INFO  13:28:48,538 - #20 neg
INFO  13:28:48,538 - #45 [
INFO  13:28:48,543 - #20 idx
INFO  13:28:48,543 - #46 ]
INFO  13:28:48,543 - #40 ;
INFO  13:28:48,543 - #48 }
INFO  13:28:48,543 - #48 }
INFO  13:28:48,543 - #48 }
INFO  13:28:48,543 - #20 Table
INFO  13:28:48,543 - #20 val
INFO  13:28:48,543 - #40 ;
INFO  13:28:48,543 - #47 {
INFO  13:28:48,543 - #16 void
INFO  13:28:48,543 - #20 f
INFO  13:28:48,543 - #43 (
INFO  13:28:48,543 - #20 char
INFO  13:28:48,543 - #20 ch
INFO  13:28:48,543 - #41 ,
INFO  13:28:48,543 - #20 int
INFO  13:28:48,543 - #20 a
INFO  13:28:48,543 - #41 ,
INFO  13:28:48,543 - #20 int
INFO  13:28:48,543 - #20 arg
INFO  13:28:48,543 - #44 )
INFO  13:28:48,543 - #20 int
INFO  13:28:48,543 - #20 x
INFO  13:28:48,543 - #40 ;
INFO  13:28:48,543 - #47 {
INFO  13:28:48,543 - #20 x
INFO  13:28:48,543 - #37 =
INFO  13:28:48,543 - #20 arg
INFO  13:28:48,543 - #40 ;
INFO  13:28:48,543 - #48 }
INFO  13:28:48,548 - #16 void
INFO  13:28:48,548 - #20 main
INFO  13:28:48,548 - #43 (
INFO  13:28:48,548 - #44 )
INFO  13:28:48,548 - #20 int
INFO  13:28:48,548 - #20 x
INFO  13:28:48,548 - #41 ,
INFO  13:28:48,548 - #20 i
INFO  13:28:48,548 - #40 ;
INFO  13:28:48,548 - #20 char
INFO  13:28:48,548 - #20 c
INFO  13:28:48,548 - #40 ;
INFO  13:28:48,548 - #47 {
INFO  13:28:48,548 - #20 val
INFO  13:28:48,548 - #37 =
INFO  13:28:48,548 - #12 new
INFO  13:28:48,553 - #20 Table
INFO  13:28:48,553 - #40 ;
INFO  13:28:48,553 - #20 val
INFO  13:28:48,553 - #42 .
INFO  13:28:48,553 - #20 pos
INFO  13:28:48,553 - #37 =
INFO  13:28:48,553 - #12 new
INFO  13:28:48,553 - #20 int
INFO  13:28:48,553 - #45 [
INFO  13:28:48,553 - #20 size
INFO  13:28:48,553 - #46 ]
INFO  13:28:48,553 - #40 ;
INFO  13:28:48,553 - #20 val
INFO  13:28:48,553 - #42 .
INFO  13:28:48,553 - #20 neg
INFO  13:28:48,553 - #37 =
INFO  13:28:48,553 - #12 new
INFO  13:28:48,553 - #20 int
INFO  13:28:48,553 - #45 [
INFO  13:28:48,553 - #20 size
INFO  13:28:48,553 - #46 ]
INFO  13:28:48,553 - #40 ;
INFO  13:28:48,553 - #20 i
INFO  13:28:48,553 - #37 =
INFO  13:28:48,553 - #21 0
INFO  13:28:48,553 - #40 ;
INFO  13:28:48,553 - #10 do
INFO  13:28:48,553 - #47 {
INFO  13:28:48,553 - #20 val
INFO  13:28:48,553 - #42 .
INFO  13:28:48,553 - #20 putp
INFO  13:28:48,553 - #43 (
INFO  13:28:48,553 - #21 0
INFO  13:28:48,553 - #41 ,
INFO  13:28:48,558 - #20 i
INFO  13:28:48,558 - #44 )
INFO  13:28:48,558 - #40 ;
INFO  13:28:48,558 - #20 val
INFO  13:28:48,558 - #42 .
INFO  13:28:48,558 - #20 putn
INFO  13:28:48,558 - #43 (
INFO  13:28:48,558 - #21 0
INFO  13:28:48,558 - #41 ,
INFO  13:28:48,558 - #20 i
INFO  13:28:48,558 - #44 )
INFO  13:28:48,558 - #40 ;
INFO  13:28:48,558 - #20 i
INFO  13:28:48,558 - #38 ++
INFO  13:28:48,558 - #40 ;
INFO  13:28:48,558 - #48 }
INFO  13:28:48,558 - #11 while
INFO  13:28:48,558 - #43 (
INFO  13:28:48,558 - #20 i
INFO  13:28:48,558 - #33 <
INFO  13:28:48,558 - #20 size
INFO  13:28:48,558 - #44 )
INFO  13:28:48,563 - #40 ;
INFO  13:28:48,563 - #20 f
INFO  13:28:48,563 - #43 (
INFO  13:28:48,563 - #20 c
INFO  13:28:48,563 - #41 ,
INFO  13:28:48,563 - #20 x
INFO  13:28:48,563 - #41 ,
INFO  13:28:48,563 - #20 i
INFO  13:28:48,563 - #44 )
INFO  13:28:48,563 - #40 ;
INFO  13:28:48,563 - #14 read
INFO  13:28:48,563 - #43 (
INFO  13:28:48,563 - #20 x
INFO  13:28:48,563 - #44 )
INFO  13:28:48,563 - #40 ;
INFO  13:28:48,563 - #10 do
INFO  13:28:48,563 - #47 {
INFO  13:28:48,563 - #8 if
INFO  13:28:48,563 - #43 (
INFO  13:28:48,563 - #20 x
INFO  13:28:48,563 - #34 <=
INFO  13:28:48,563 - #21 0
INFO  13:28:48,563 - #44 )
INFO  13:28:48,563 - #3 break
INFO  13:28:48,563 - #40 ;
INFO  13:28:48,563 - #8 if
INFO  13:28:48,568 - #43 (
INFO  13:28:48,568 - #21 0
INFO  13:28:48,568 - #34 <=
INFO  13:28:48,568 - #20 x
INFO  13:28:48,568 - #35 &&
INFO  13:28:48,568 - #20 x
INFO  13:28:48,568 - #33 <
INFO  13:28:48,568 - #20 size
INFO  13:28:48,568 - #44 )
INFO  13:28:48,568 - #47 {
INFO  13:28:48,568 - #20 val
INFO  13:28:48,568 - #42 .
INFO  13:28:48,568 - #20 putp
INFO  13:28:48,568 - #43 (
INFO  13:28:48,568 - #20 val
INFO  13:28:48,568 - #42 .
INFO  13:28:48,568 - #20 getp
INFO  13:28:48,568 - #43 (
INFO  13:28:48,568 - #20 x
INFO  13:28:48,568 - #44 )
INFO  13:28:48,568 - #24 +
INFO  13:28:48,568 - #21 1
INFO  13:28:48,568 - #44 )
INFO  13:28:48,568 - #40 ;
INFO  13:28:48,568 - #48 }
INFO  13:28:48,568 - #6 else
INFO  13:28:48,568 - #8 if
INFO  13:28:48,568 - #43 (
INFO  13:28:48,573 - #20 size
INFO  13:28:48,573 - #33 <
INFO  13:28:48,573 - #20 x
INFO  13:28:48,573 - #35 &&
INFO  13:28:48,573 - #20 x
INFO  13:28:48,573 - #33 <
INFO  13:28:48,573 - #21 0
INFO  13:28:48,573 - #44 )
INFO  13:28:48,573 - #47 {
INFO  13:28:48,573 - #20 val
INFO  13:28:48,573 - #42 .
INFO  13:28:48,573 - #20 putn
INFO  13:28:48,573 - #43 (
INFO  13:28:48,573 - #20 val
INFO  13:28:48,573 - #42 .
INFO  13:28:48,573 - #20 getn
INFO  13:28:48,573 - #43 (
INFO  13:28:48,573 - #20 x
INFO  13:28:48,573 - #44 )
INFO  13:28:48,573 - #24 +
INFO  13:28:48,578 - #21 1
INFO  13:28:48,578 - #44 )
INFO  13:28:48,578 - #40 ;
INFO  13:28:48,578 - #48 }
INFO  13:28:48,578 - #14 read
INFO  13:28:48,578 - #43 (
INFO  13:28:48,578 - #20 x
INFO  13:28:48,578 - #44 )
INFO  13:28:48,578 - #40 ;
INFO  13:28:48,578 - #48 }
INFO  13:28:48,578 - #11 while
INFO  13:28:48,578 - #43 (
INFO  13:28:48,578 - #23 true
INFO  13:28:48,578 - #44 )
INFO  13:28:48,578 - #40 ;
INFO  13:28:48,578 - #13 print
INFO  13:28:48,578 - #43 (
INFO  13:28:48,578 - #25 -
INFO  13:28:48,578 - #21 3
INFO  13:28:48,578 - #24 +
INFO  13:28:48,583 - #21 5
INFO  13:28:48,583 - #44 )
INFO  13:28:48,583 - #40 ;
INFO  13:28:48,583 - #13 print
INFO  13:28:48,583 - #43 (
INFO  13:28:48,583 - #22 v
INFO  13:28:48,583 - #44 )
INFO  13:28:48,583 - #40 ;
INFO  13:28:48,583 - #13 print
INFO  13:28:48,583 - #43 (
INFO  13:28:48,583 - #20 x
INFO  13:28:48,583 - #33 <
ERROR 13:28:48,583 - 
Sintaksna greska na liniji 50
ERROR 13:28:48,583 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 50
