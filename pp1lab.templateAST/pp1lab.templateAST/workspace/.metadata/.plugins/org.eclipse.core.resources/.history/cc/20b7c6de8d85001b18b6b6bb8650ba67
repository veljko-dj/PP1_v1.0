INFO  13:28:16,993 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:28:17,063 - #2 program
INFO  13:28:17,063 - #20 Pro
INFO  13:28:17,063 - #7 const
INFO  13:28:17,068 - #20 int
INFO  13:28:17,068 - #20 size
INFO  13:28:17,068 - #37 =
INFO  13:28:17,068 - #21 10
INFO  13:28:17,068 - #40 ;
INFO  13:28:17,068 - #4 class
INFO  13:28:17,068 - #20 Table
INFO  13:28:17,068 - #47 {
INFO  13:28:17,068 - #20 int
INFO  13:28:17,073 - #20 pos
INFO  13:28:17,073 - #45 [
INFO  13:28:17,073 - #46 ]
INFO  13:28:17,073 - #41 ,
INFO  13:28:17,073 - #20 neg
INFO  13:28:17,073 - #45 [
INFO  13:28:17,073 - #46 ]
INFO  13:28:17,073 - #40 ;
INFO  13:28:17,073 - #47 {
INFO  13:28:17,073 - #16 void
INFO  13:28:17,073 - #20 putp
INFO  13:28:17,073 - #43 (
INFO  13:28:17,078 - #20 int
INFO  13:28:17,078 - #20 a
INFO  13:28:17,078 - #41 ,
INFO  13:28:17,078 - #20 int
INFO  13:28:17,078 - #20 idx
INFO  13:28:17,078 - #44 )
INFO  13:28:17,078 - #47 {
INFO  13:28:17,078 - #20 this
INFO  13:28:17,078 - #42 .
INFO  13:28:17,078 - #20 pos
INFO  13:28:17,078 - #45 [
INFO  13:28:17,078 - #20 idx
INFO  13:28:17,078 - #46 ]
INFO  13:28:17,078 - #37 =
INFO  13:28:17,078 - #20 a
INFO  13:28:17,083 - #40 ;
INFO  13:28:17,083 - #48 }
INFO  13:28:17,083 - #16 void
INFO  13:28:17,083 - #20 putn
INFO  13:28:17,083 - #43 (
INFO  13:28:17,083 - #20 int
INFO  13:28:17,083 - #20 a
INFO  13:28:17,083 - #41 ,
INFO  13:28:17,083 - #20 int
INFO  13:28:17,083 - #20 idx
INFO  13:28:17,083 - #44 )
INFO  13:28:17,083 - #47 {
INFO  13:28:17,083 - #20 this
INFO  13:28:17,083 - #42 .
INFO  13:28:17,083 - #20 neg
INFO  13:28:17,083 - #45 [
INFO  13:28:17,083 - #20 idx
INFO  13:28:17,083 - #46 ]
INFO  13:28:17,083 - #37 =
INFO  13:28:17,088 - #20 a
INFO  13:28:17,088 - #40 ;
INFO  13:28:17,088 - #48 }
INFO  13:28:17,088 - #20 int
INFO  13:28:17,088 - #20 getp
INFO  13:28:17,088 - #43 (
INFO  13:28:17,088 - #20 int
INFO  13:28:17,088 - #20 idx
INFO  13:28:17,088 - #44 )
INFO  13:28:17,088 - #47 {
INFO  13:28:17,088 - #15 return
INFO  13:28:17,088 - #20 pos
INFO  13:28:17,088 - #45 [
INFO  13:28:17,088 - #20 idx
INFO  13:28:17,088 - #46 ]
INFO  13:28:17,088 - #40 ;
INFO  13:28:17,088 - #48 }
INFO  13:28:17,093 - #20 int
INFO  13:28:17,093 - #20 getn
INFO  13:28:17,093 - #43 (
INFO  13:28:17,093 - #20 int
INFO  13:28:17,093 - #20 idx
INFO  13:28:17,093 - #44 )
INFO  13:28:17,093 - #47 {
INFO  13:28:17,093 - #15 return
INFO  13:28:17,093 - #20 neg
INFO  13:28:17,093 - #45 [
INFO  13:28:17,093 - #20 idx
INFO  13:28:17,093 - #46 ]
INFO  13:28:17,093 - #40 ;
INFO  13:28:17,093 - #48 }
INFO  13:28:17,093 - #48 }
INFO  13:28:17,093 - #48 }
INFO  13:28:17,093 - #20 Table
INFO  13:28:17,093 - #20 val
INFO  13:28:17,093 - #40 ;
INFO  13:28:17,093 - #47 {
INFO  13:28:17,093 - #16 void
INFO  13:28:17,098 - #20 f
INFO  13:28:17,098 - #43 (
INFO  13:28:17,098 - #20 char
INFO  13:28:17,098 - #20 ch
INFO  13:28:17,098 - #41 ,
INFO  13:28:17,098 - #20 int
INFO  13:28:17,098 - #20 a
INFO  13:28:17,098 - #41 ,
INFO  13:28:17,098 - #20 int
INFO  13:28:17,098 - #20 arg
INFO  13:28:17,098 - #44 )
INFO  13:28:17,098 - #20 int
INFO  13:28:17,098 - #20 x
INFO  13:28:17,098 - #40 ;
INFO  13:28:17,098 - #47 {
INFO  13:28:17,098 - #20 x
INFO  13:28:17,098 - #37 =
INFO  13:28:17,098 - #20 arg
INFO  13:28:17,098 - #40 ;
INFO  13:28:17,098 - #48 }
INFO  13:28:17,098 - #16 void
INFO  13:28:17,098 - #20 main
INFO  13:28:17,098 - #43 (
INFO  13:28:17,098 - #44 )
INFO  13:28:17,098 - #20 int
INFO  13:28:17,098 - #20 x
INFO  13:28:17,098 - #41 ,
INFO  13:28:17,098 - #20 i
INFO  13:28:17,098 - #40 ;
INFO  13:28:17,098 - #20 char
INFO  13:28:17,098 - #20 c
INFO  13:28:17,098 - #40 ;
INFO  13:28:17,098 - #47 {
INFO  13:28:17,098 - #20 val
INFO  13:28:17,098 - #37 =
INFO  13:28:17,098 - #12 new
INFO  13:28:17,108 - #20 Table
INFO  13:28:17,108 - #40 ;
INFO  13:28:17,108 - #20 val
INFO  13:28:17,108 - #42 .
INFO  13:28:17,108 - #20 pos
INFO  13:28:17,108 - #37 =
INFO  13:28:17,108 - #12 new
INFO  13:28:17,108 - #20 int
INFO  13:28:17,108 - #45 [
INFO  13:28:17,108 - #20 size
INFO  13:28:17,108 - #46 ]
INFO  13:28:17,108 - #40 ;
INFO  13:28:17,108 - #20 val
INFO  13:28:17,108 - #42 .
INFO  13:28:17,108 - #20 neg
INFO  13:28:17,108 - #37 =
INFO  13:28:17,108 - #12 new
INFO  13:28:17,108 - #20 int
INFO  13:28:17,113 - #45 [
INFO  13:28:17,113 - #20 size
INFO  13:28:17,113 - #46 ]
INFO  13:28:17,113 - #40 ;
INFO  13:28:17,113 - #20 i
INFO  13:28:17,113 - #37 =
INFO  13:28:17,113 - #21 0
INFO  13:28:17,113 - #40 ;
INFO  13:28:17,113 - #10 do
INFO  13:28:17,113 - #47 {
INFO  13:28:17,113 - #20 val
INFO  13:28:17,113 - #42 .
INFO  13:28:17,113 - #20 putp
INFO  13:28:17,113 - #43 (
INFO  13:28:17,113 - #21 0
INFO  13:28:17,113 - #41 ,
INFO  13:28:17,113 - #20 i
INFO  13:28:17,113 - #44 )
INFO  13:28:17,113 - #40 ;
INFO  13:28:17,113 - #20 val
INFO  13:28:17,113 - #42 .
INFO  13:28:17,113 - #20 putn
INFO  13:28:17,113 - #43 (
INFO  13:28:17,113 - #21 0
INFO  13:28:17,113 - #41 ,
INFO  13:28:17,113 - #20 i
INFO  13:28:17,113 - #44 )
INFO  13:28:17,113 - #40 ;
INFO  13:28:17,113 - #20 i
INFO  13:28:17,113 - #38 ++
INFO  13:28:17,113 - #40 ;
INFO  13:28:17,118 - #48 }
INFO  13:28:17,118 - #11 while
INFO  13:28:17,118 - #43 (
INFO  13:28:17,118 - #20 i
INFO  13:28:17,118 - #33 <
INFO  13:28:17,118 - #20 size
INFO  13:28:17,118 - #44 )
INFO  13:28:17,118 - #40 ;
INFO  13:28:17,118 - #20 f
INFO  13:28:17,118 - #43 (
INFO  13:28:17,118 - #20 c
INFO  13:28:17,118 - #41 ,
INFO  13:28:17,118 - #20 x
INFO  13:28:17,118 - #41 ,
INFO  13:28:17,118 - #20 i
INFO  13:28:17,118 - #44 )
INFO  13:28:17,118 - #40 ;
INFO  13:28:17,118 - #14 read
INFO  13:28:17,123 - #43 (
INFO  13:28:17,123 - #20 x
INFO  13:28:17,123 - #44 )
INFO  13:28:17,123 - #40 ;
INFO  13:28:17,123 - #10 do
INFO  13:28:17,123 - #47 {
INFO  13:28:17,123 - #8 if
INFO  13:28:17,123 - #43 (
INFO  13:28:17,123 - #20 x
INFO  13:28:17,123 - #34 <=
INFO  13:28:17,123 - #21 0
INFO  13:28:17,123 - #44 )
INFO  13:28:17,123 - #3 break
INFO  13:28:17,128 - #40 ;
INFO  13:28:17,128 - #8 if
INFO  13:28:17,128 - #43 (
INFO  13:28:17,128 - #21 0
INFO  13:28:17,128 - #34 <=
INFO  13:28:17,128 - #20 x
INFO  13:28:17,128 - #35 &&
INFO  13:28:17,128 - #20 x
INFO  13:28:17,128 - #33 <
INFO  13:28:17,128 - #20 size
INFO  13:28:17,128 - #44 )
INFO  13:28:17,128 - #47 {
INFO  13:28:17,128 - #20 val
INFO  13:28:17,128 - #42 .
INFO  13:28:17,128 - #20 putp
INFO  13:28:17,128 - #43 (
INFO  13:28:17,128 - #20 val
INFO  13:28:17,128 - #42 .
INFO  13:28:17,128 - #20 getp
INFO  13:28:17,128 - #43 (
INFO  13:28:17,128 - #20 x
INFO  13:28:17,128 - #44 )
INFO  13:28:17,128 - #24 +
INFO  13:28:17,128 - #21 1
INFO  13:28:17,133 - #44 )
INFO  13:28:17,133 - #40 ;
INFO  13:28:17,133 - #48 }
INFO  13:28:17,133 - #6 else
INFO  13:28:17,133 - #8 if
INFO  13:28:17,133 - #43 (
INFO  13:28:17,133 - #20 size
INFO  13:28:17,133 - #33 <
INFO  13:28:17,133 - #20 x
INFO  13:28:17,133 - #35 &&
INFO  13:28:17,133 - #20 x
INFO  13:28:17,133 - #33 <
INFO  13:28:17,133 - #21 0
INFO  13:28:17,133 - #44 )
INFO  13:28:17,133 - #47 {
INFO  13:28:17,133 - #20 val
INFO  13:28:17,133 - #42 .
INFO  13:28:17,133 - #20 putn
INFO  13:28:17,133 - #43 (
INFO  13:28:17,133 - #20 val
INFO  13:28:17,133 - #42 .
INFO  13:28:17,133 - #20 getn
INFO  13:28:17,133 - #43 (
INFO  13:28:17,133 - #20 x
INFO  13:28:17,133 - #44 )
INFO  13:28:17,133 - #24 +
INFO  13:28:17,133 - #21 1
INFO  13:28:17,138 - #44 )
INFO  13:28:17,138 - #40 ;
INFO  13:28:17,138 - #48 }
INFO  13:28:17,138 - #14 read
INFO  13:28:17,138 - #43 (
INFO  13:28:17,138 - #20 x
INFO  13:28:17,138 - #44 )
INFO  13:28:17,138 - #40 ;
INFO  13:28:17,138 - #48 }
INFO  13:28:17,138 - #11 while
INFO  13:28:17,138 - #43 (
INFO  13:28:17,138 - #23 true
INFO  13:28:17,138 - #44 )
INFO  13:28:17,138 - #40 ;
INFO  13:28:17,143 - #13 print
INFO  13:28:17,143 - #43 (
INFO  13:28:17,143 - #25 -
INFO  13:28:17,143 - #21 3
INFO  13:28:17,143 - #24 +
INFO  13:28:17,143 - #21 5
INFO  13:28:17,143 - #44 )
INFO  13:28:17,143 - #40 ;
INFO  13:28:17,143 - #13 print
INFO  13:28:17,143 - #43 (
INFO  13:28:17,143 - #22 v
INFO  13:28:17,143 - #44 )
INFO  13:28:17,143 - #40 ;
INFO  13:28:17,143 - #13 print
INFO  13:28:17,143 - #43 (
INFO  13:28:17,143 - #20 x
INFO  13:28:17,143 - #33 <
ERROR 13:28:17,143 - 
Sintaksna greska na liniji 50
ERROR 13:28:17,143 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 50
