INFO  13:30:01,802 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:30:01,872 - #2 program
INFO  13:30:01,872 - #20 Pro
INFO  13:30:01,872 - #7 const
INFO  13:30:01,872 - #20 int
INFO  13:30:01,872 - #20 size
INFO  13:30:01,872 - #37 =
INFO  13:30:01,877 - #21 10
INFO  13:30:01,877 - #40 ;
INFO  13:30:01,877 - #4 class
INFO  13:30:01,877 - #20 Table
INFO  13:30:01,877 - #47 {
INFO  13:30:01,877 - #20 int
INFO  13:30:01,877 - #20 pos
INFO  13:30:01,877 - #45 [
INFO  13:30:01,877 - #46 ]
INFO  13:30:01,877 - #41 ,
INFO  13:30:01,877 - #20 neg
INFO  13:30:01,877 - #45 [
INFO  13:30:01,877 - #46 ]
INFO  13:30:01,877 - #40 ;
INFO  13:30:01,882 - #47 {
INFO  13:30:01,882 - #16 void
INFO  13:30:01,882 - #20 putp
INFO  13:30:01,882 - #43 (
INFO  13:30:01,882 - #20 int
INFO  13:30:01,882 - #20 a
INFO  13:30:01,882 - #41 ,
INFO  13:30:01,882 - #20 int
INFO  13:30:01,882 - #20 idx
INFO  13:30:01,882 - #44 )
INFO  13:30:01,882 - #47 {
INFO  13:30:01,882 - #20 this
INFO  13:30:01,882 - #42 .
INFO  13:30:01,882 - #20 pos
INFO  13:30:01,882 - #45 [
INFO  13:30:01,882 - #20 idx
INFO  13:30:01,882 - #46 ]
INFO  13:30:01,887 - #37 =
INFO  13:30:01,887 - #20 a
INFO  13:30:01,887 - #40 ;
INFO  13:30:01,887 - #48 }
INFO  13:30:01,887 - #16 void
INFO  13:30:01,887 - #20 putn
INFO  13:30:01,887 - #43 (
INFO  13:30:01,887 - #20 int
INFO  13:30:01,887 - #20 a
INFO  13:30:01,887 - #41 ,
INFO  13:30:01,887 - #20 int
INFO  13:30:01,887 - #20 idx
INFO  13:30:01,887 - #44 )
INFO  13:30:01,887 - #47 {
INFO  13:30:01,887 - #20 this
INFO  13:30:01,887 - #42 .
INFO  13:30:01,887 - #20 neg
INFO  13:30:01,892 - #45 [
INFO  13:30:01,892 - #20 idx
INFO  13:30:01,892 - #46 ]
INFO  13:30:01,892 - #37 =
INFO  13:30:01,892 - #20 a
INFO  13:30:01,892 - #40 ;
INFO  13:30:01,892 - #48 }
INFO  13:30:01,892 - #20 int
INFO  13:30:01,892 - #20 getp
INFO  13:30:01,892 - #43 (
INFO  13:30:01,892 - #20 int
INFO  13:30:01,892 - #20 idx
INFO  13:30:01,892 - #44 )
INFO  13:30:01,892 - #47 {
INFO  13:30:01,897 - #15 return
INFO  13:30:01,897 - #20 pos
INFO  13:30:01,897 - #45 [
INFO  13:30:01,897 - #20 idx
INFO  13:30:01,897 - #46 ]
INFO  13:30:01,897 - #40 ;
INFO  13:30:01,897 - #48 }
INFO  13:30:01,897 - #20 int
INFO  13:30:01,897 - #20 getn
INFO  13:30:01,897 - #43 (
INFO  13:30:01,897 - #20 int
INFO  13:30:01,897 - #20 idx
INFO  13:30:01,897 - #44 )
INFO  13:30:01,897 - #47 {
INFO  13:30:01,897 - #15 return
INFO  13:30:01,897 - #20 neg
INFO  13:30:01,897 - #45 [
INFO  13:30:01,902 - #20 idx
INFO  13:30:01,902 - #46 ]
INFO  13:30:01,902 - #40 ;
INFO  13:30:01,902 - #48 }
INFO  13:30:01,902 - #48 }
INFO  13:30:01,902 - #48 }
INFO  13:30:01,902 - #20 Table
INFO  13:30:01,902 - #20 val
INFO  13:30:01,902 - #40 ;
INFO  13:30:01,902 - #47 {
INFO  13:30:01,902 - #16 void
INFO  13:30:01,902 - #20 f
INFO  13:30:01,902 - #43 (
INFO  13:30:01,902 - #20 char
INFO  13:30:01,902 - #20 ch
INFO  13:30:01,902 - #41 ,
INFO  13:30:01,902 - #20 int
INFO  13:30:01,902 - #20 a
INFO  13:30:01,902 - #41 ,
INFO  13:30:01,902 - #20 int
INFO  13:30:01,902 - #20 arg
INFO  13:30:01,902 - #44 )
INFO  13:30:01,902 - #20 int
INFO  13:30:01,902 - #20 x
INFO  13:30:01,902 - #40 ;
INFO  13:30:01,902 - #47 {
INFO  13:30:01,902 - #20 x
INFO  13:30:01,902 - #37 =
INFO  13:30:01,902 - #20 arg
INFO  13:30:01,902 - #40 ;
INFO  13:30:01,902 - #48 }
INFO  13:30:01,902 - #16 void
INFO  13:30:01,902 - #20 main
INFO  13:30:01,902 - #43 (
INFO  13:30:01,902 - #44 )
INFO  13:30:01,907 - #20 int
INFO  13:30:01,907 - #20 x
INFO  13:30:01,907 - #41 ,
INFO  13:30:01,907 - #20 i
INFO  13:30:01,907 - #40 ;
INFO  13:30:01,907 - #20 char
INFO  13:30:01,907 - #20 c
INFO  13:30:01,907 - #40 ;
INFO  13:30:01,907 - #47 {
INFO  13:30:01,907 - #20 val
INFO  13:30:01,907 - #37 =
INFO  13:30:01,907 - #12 new
INFO  13:30:01,907 - #20 Table
INFO  13:30:01,907 - #40 ;
INFO  13:30:01,907 - #20 val
INFO  13:30:01,907 - #42 .
INFO  13:30:01,907 - #20 pos
INFO  13:30:01,907 - #37 =
INFO  13:30:01,907 - #12 new
INFO  13:30:01,907 - #20 int
INFO  13:30:01,907 - #45 [
INFO  13:30:01,907 - #20 size
INFO  13:30:01,907 - #46 ]
INFO  13:30:01,907 - #40 ;
INFO  13:30:01,907 - #20 val
INFO  13:30:01,907 - #42 .
INFO  13:30:01,907 - #20 neg
INFO  13:30:01,907 - #37 =
INFO  13:30:01,907 - #12 new
INFO  13:30:01,907 - #20 int
INFO  13:30:01,907 - #45 [
INFO  13:30:01,907 - #20 size
INFO  13:30:01,907 - #46 ]
INFO  13:30:01,907 - #40 ;
INFO  13:30:01,907 - #20 i
INFO  13:30:01,907 - #37 =
INFO  13:30:01,907 - #21 0
INFO  13:30:01,912 - #40 ;
INFO  13:30:01,912 - #10 do
INFO  13:30:01,912 - #47 {
INFO  13:30:01,912 - #20 val
INFO  13:30:01,912 - #42 .
INFO  13:30:01,912 - #20 putp
INFO  13:30:01,912 - #43 (
INFO  13:30:01,912 - #21 0
INFO  13:30:01,912 - #41 ,
INFO  13:30:01,912 - #20 i
INFO  13:30:01,912 - #44 )
INFO  13:30:01,912 - #40 ;
INFO  13:30:01,912 - #20 val
INFO  13:30:01,912 - #42 .
INFO  13:30:01,912 - #20 putn
INFO  13:30:01,912 - #43 (
INFO  13:30:01,912 - #21 0
INFO  13:30:01,912 - #41 ,
INFO  13:30:01,912 - #20 i
INFO  13:30:01,912 - #44 )
INFO  13:30:01,912 - #40 ;
INFO  13:30:01,912 - #20 i
INFO  13:30:01,912 - #38 ++
INFO  13:30:01,912 - #40 ;
INFO  13:30:01,912 - #48 }
INFO  13:30:01,912 - #11 while
INFO  13:30:01,912 - #43 (
INFO  13:30:01,912 - #20 i
INFO  13:30:01,912 - #33 <
INFO  13:30:01,912 - #20 size
INFO  13:30:01,912 - #44 )
INFO  13:30:01,912 - #40 ;
INFO  13:30:01,912 - #20 f
INFO  13:30:01,917 - #43 (
INFO  13:30:01,917 - #20 c
INFO  13:30:01,917 - #41 ,
INFO  13:30:01,917 - #20 x
INFO  13:30:01,917 - #41 ,
INFO  13:30:01,917 - #20 i
INFO  13:30:01,917 - #44 )
INFO  13:30:01,917 - #40 ;
INFO  13:30:01,917 - #14 read
INFO  13:30:01,917 - #43 (
INFO  13:30:01,917 - #20 x
INFO  13:30:01,917 - #44 )
INFO  13:30:01,917 - #40 ;
INFO  13:30:01,917 - #10 do
INFO  13:30:01,917 - #47 {
INFO  13:30:01,917 - #8 if
INFO  13:30:01,917 - #43 (
INFO  13:30:01,917 - #20 x
INFO  13:30:01,917 - #34 <=
INFO  13:30:01,917 - #21 0
INFO  13:30:01,917 - #44 )
INFO  13:30:01,917 - #3 break
INFO  13:30:01,917 - #40 ;
INFO  13:30:01,917 - #8 if
INFO  13:30:01,922 - #43 (
INFO  13:30:01,922 - #21 0
INFO  13:30:01,922 - #34 <=
INFO  13:30:01,922 - #20 x
INFO  13:30:01,922 - #35 &&
INFO  13:30:01,922 - #20 x
INFO  13:30:01,922 - #33 <
INFO  13:30:01,922 - #20 size
INFO  13:30:01,922 - #44 )
INFO  13:30:01,922 - #47 {
INFO  13:30:01,922 - #20 val
INFO  13:30:01,922 - #42 .
INFO  13:30:01,922 - #20 putp
INFO  13:30:01,922 - #43 (
INFO  13:30:01,922 - #20 val
INFO  13:30:01,922 - #42 .
INFO  13:30:01,922 - #20 getp
INFO  13:30:01,922 - #43 (
INFO  13:30:01,922 - #20 x
INFO  13:30:01,922 - #44 )
INFO  13:30:01,922 - #24 +
INFO  13:30:01,922 - #21 1
INFO  13:30:01,922 - #44 )
INFO  13:30:01,922 - #40 ;
INFO  13:30:01,922 - #48 }
INFO  13:30:01,922 - #6 else
INFO  13:30:01,922 - #8 if
INFO  13:30:01,922 - #43 (
INFO  13:30:01,927 - #20 size
INFO  13:30:01,927 - #33 <
INFO  13:30:01,927 - #20 x
INFO  13:30:01,927 - #35 &&
INFO  13:30:01,927 - #20 x
INFO  13:30:01,927 - #33 <
INFO  13:30:01,927 - #21 0
INFO  13:30:01,927 - #44 )
INFO  13:30:01,927 - #47 {
INFO  13:30:01,927 - #20 val
INFO  13:30:01,927 - #42 .
INFO  13:30:01,927 - #20 putn
INFO  13:30:01,927 - #43 (
INFO  13:30:01,927 - #20 val
INFO  13:30:01,927 - #42 .
INFO  13:30:01,927 - #20 getn
INFO  13:30:01,927 - #43 (
INFO  13:30:01,927 - #20 x
INFO  13:30:01,927 - #44 )
INFO  13:30:01,927 - #24 +
INFO  13:30:01,927 - #21 1
INFO  13:30:01,927 - #44 )
INFO  13:30:01,927 - #40 ;
INFO  13:30:01,927 - #48 }
INFO  13:30:01,927 - #14 read
INFO  13:30:01,927 - #43 (
INFO  13:30:01,927 - #20 x
INFO  13:30:01,927 - #44 )
INFO  13:30:01,927 - #40 ;
INFO  13:30:01,927 - #48 }
INFO  13:30:01,927 - #11 while
INFO  13:30:01,927 - #43 (
INFO  13:30:01,927 - #23 true
INFO  13:30:01,927 - #44 )
INFO  13:30:01,932 - #40 ;
INFO  13:30:01,932 - #13 print
INFO  13:30:01,932 - #43 (
INFO  13:30:01,932 - #25 -
INFO  13:30:01,932 - #21 3
INFO  13:30:01,932 - #24 +
INFO  13:30:01,932 - #21 5
INFO  13:30:01,932 - #44 )
INFO  13:30:01,932 - #40 ;
INFO  13:30:01,932 - #13 print
INFO  13:30:01,932 - #43 (
INFO  13:30:01,932 - #22 v
INFO  13:30:01,932 - #44 )
INFO  13:30:01,932 - #40 ;
INFO  13:30:01,932 - #13 print
INFO  13:30:01,932 - #43 (
INFO  13:30:01,932 - #20 x
INFO  13:30:01,932 - #33 <
ERROR 13:30:01,932 - 
Sintaksna greska na liniji 50
ERROR 13:30:01,932 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 50
