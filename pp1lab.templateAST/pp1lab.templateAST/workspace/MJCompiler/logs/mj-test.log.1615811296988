INFO  13:24:56,824 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:24:56,954 - #2 program
INFO  13:24:56,954 - #20 Pro
INFO  13:24:56,954 - #7 const
INFO  13:24:56,959 - #20 int
INFO  13:24:56,959 - #20 size
INFO  13:24:56,959 - #37 =
INFO  13:24:56,959 - #21 10
INFO  13:24:56,959 - #40 ;
INFO  13:24:56,959 - #4 class
INFO  13:24:56,959 - #20 Table
INFO  13:24:56,959 - #47 {
INFO  13:24:56,964 - #20 int
INFO  13:24:56,964 - #20 pos
INFO  13:24:56,964 - #45 [
INFO  13:24:56,964 - #46 ]
INFO  13:24:56,964 - #41 ,
INFO  13:24:56,964 - #20 neg
INFO  13:24:56,964 - #45 [
INFO  13:24:56,964 - #46 ]
INFO  13:24:56,964 - #40 ;
INFO  13:24:56,964 - #47 {
INFO  13:24:56,964 - #16 void
INFO  13:24:56,964 - #20 putp
INFO  13:24:56,969 - #43 (
INFO  13:24:56,970 - #20 int
INFO  13:24:56,971 - #20 a
INFO  13:24:56,971 - #41 ,
INFO  13:24:56,971 - #20 int
INFO  13:24:56,972 - #20 idx
INFO  13:24:56,972 - #44 )
INFO  13:24:56,972 - #47 {
INFO  13:24:56,972 - #20 this
INFO  13:24:56,972 - #42 .
INFO  13:24:56,972 - #20 pos
INFO  13:24:56,972 - #45 [
INFO  13:24:56,972 - #20 idx
INFO  13:24:56,972 - #46 ]
INFO  13:24:56,972 - #37 =
INFO  13:24:56,972 - #20 a
INFO  13:24:56,972 - #40 ;
INFO  13:24:56,972 - #48 }
INFO  13:24:56,972 - #16 void
INFO  13:24:56,972 - #20 putn
INFO  13:24:56,977 - #43 (
INFO  13:24:56,977 - #20 int
INFO  13:24:56,977 - #20 a
INFO  13:24:56,977 - #41 ,
INFO  13:24:56,977 - #20 int
INFO  13:24:56,977 - #20 idx
INFO  13:24:56,977 - #44 )
INFO  13:24:56,977 - #47 {
INFO  13:24:56,977 - #20 this
INFO  13:24:56,977 - #42 .
INFO  13:24:56,977 - #20 neg
INFO  13:24:56,977 - #45 [
INFO  13:24:56,977 - #20 idx
INFO  13:24:56,977 - #46 ]
INFO  13:24:56,977 - #37 =
INFO  13:24:56,977 - #20 a
INFO  13:24:56,977 - #40 ;
INFO  13:24:56,977 - #48 }
INFO  13:24:56,977 - #20 int
INFO  13:24:56,977 - #20 getp
INFO  13:24:56,977 - #43 (
INFO  13:24:56,977 - #20 int
INFO  13:24:56,977 - #20 idx
INFO  13:24:56,977 - #44 )
INFO  13:24:56,977 - #47 {
INFO  13:24:56,982 - #15 return
INFO  13:24:56,982 - #20 pos
INFO  13:24:56,982 - #45 [
INFO  13:24:56,982 - #20 idx
INFO  13:24:56,982 - #46 ]
INFO  13:24:56,987 - #40 ;
INFO  13:24:56,987 - #48 }
INFO  13:24:56,987 - #20 int
INFO  13:24:56,987 - #20 getn
INFO  13:24:56,987 - #43 (
INFO  13:24:56,987 - #20 int
INFO  13:24:56,987 - #20 idx
INFO  13:24:56,987 - #44 )
INFO  13:24:56,987 - #47 {
INFO  13:24:56,987 - #15 return
INFO  13:24:56,987 - #20 neg
INFO  13:24:56,987 - #45 [
INFO  13:24:56,987 - #20 idx
INFO  13:24:56,987 - #46 ]
INFO  13:24:56,987 - #40 ;
INFO  13:24:56,987 - #48 }
INFO  13:24:56,987 - #48 }
INFO  13:24:56,992 - #48 }
INFO  13:24:56,992 - #20 Table
INFO  13:24:56,992 - #20 val
INFO  13:24:56,992 - #40 ;
INFO  13:24:56,992 - #47 {
INFO  13:24:56,992 - #16 void
INFO  13:24:56,992 - #20 f
INFO  13:24:56,992 - #43 (
INFO  13:24:56,992 - #20 char
INFO  13:24:56,992 - #20 ch
INFO  13:24:56,992 - #41 ,
INFO  13:24:56,992 - #20 int
INFO  13:24:56,992 - #20 a
INFO  13:24:56,992 - #41 ,
INFO  13:24:56,992 - #20 int
INFO  13:24:56,992 - #20 arg
INFO  13:24:56,992 - #44 )
INFO  13:24:56,992 - #20 int
INFO  13:24:56,992 - #20 x
INFO  13:24:56,992 - #40 ;
INFO  13:24:56,992 - #47 {
INFO  13:24:56,992 - #20 x
INFO  13:24:56,992 - #37 =
INFO  13:24:56,992 - #20 arg
INFO  13:24:56,992 - #40 ;
INFO  13:24:56,992 - #48 }
INFO  13:24:56,992 - #16 void
INFO  13:24:56,992 - #20 main
INFO  13:24:56,992 - #43 (
INFO  13:24:56,992 - #44 )
INFO  13:24:56,992 - #20 int
INFO  13:24:56,992 - #20 x
INFO  13:24:56,992 - #41 ,
INFO  13:24:56,992 - #20 i
INFO  13:24:56,992 - #40 ;
INFO  13:24:56,997 - #20 char
INFO  13:24:56,997 - #20 c
INFO  13:24:56,997 - #40 ;
INFO  13:24:56,997 - #47 {
INFO  13:24:56,997 - #20 val
INFO  13:24:56,997 - #37 =
INFO  13:24:56,997 - #12 new
INFO  13:24:56,997 - #20 Table
INFO  13:24:56,997 - #40 ;
INFO  13:24:56,997 - #20 val
INFO  13:24:56,997 - #42 .
INFO  13:24:56,997 - #20 pos
INFO  13:24:56,997 - #37 =
INFO  13:24:56,997 - #12 new
INFO  13:24:56,997 - #20 int
INFO  13:24:56,997 - #45 [
INFO  13:24:56,997 - #20 size
INFO  13:24:56,997 - #46 ]
INFO  13:24:56,997 - #40 ;
INFO  13:24:56,997 - #20 val
INFO  13:24:56,997 - #42 .
INFO  13:24:56,997 - #20 neg
INFO  13:24:56,997 - #37 =
INFO  13:24:56,997 - #12 new
INFO  13:24:56,997 - #20 int
INFO  13:24:56,997 - #45 [
INFO  13:24:56,997 - #20 size
INFO  13:24:56,997 - #46 ]
INFO  13:24:56,997 - #40 ;
INFO  13:24:56,997 - #20 i
INFO  13:24:56,997 - #37 =
INFO  13:24:56,997 - #21 0
INFO  13:24:56,997 - #40 ;
INFO  13:24:56,997 - #10 do
INFO  13:24:57,002 - #47 {
INFO  13:24:57,002 - #20 val
INFO  13:24:57,002 - #42 .
INFO  13:24:57,002 - #20 putp
INFO  13:24:57,002 - #43 (
INFO  13:24:57,002 - #21 0
INFO  13:24:57,002 - #41 ,
INFO  13:24:57,002 - #20 i
INFO  13:24:57,002 - #44 )
INFO  13:24:57,002 - #40 ;
INFO  13:24:57,002 - #20 val
INFO  13:24:57,002 - #42 .
INFO  13:24:57,002 - #20 putn
INFO  13:24:57,002 - #43 (
INFO  13:24:57,002 - #21 0
INFO  13:24:57,002 - #41 ,
INFO  13:24:57,002 - #20 i
INFO  13:24:57,002 - #44 )
INFO  13:24:57,002 - #40 ;
INFO  13:24:57,002 - #20 i
INFO  13:24:57,002 - #38 ++
INFO  13:24:57,002 - #40 ;
INFO  13:24:57,002 - #48 }
INFO  13:24:57,002 - #11 while
INFO  13:24:57,002 - #43 (
INFO  13:24:57,002 - #20 i
INFO  13:24:57,002 - #33 <
INFO  13:24:57,002 - #20 size
INFO  13:24:57,007 - #44 )
INFO  13:24:57,007 - #40 ;
INFO  13:24:57,007 - #20 f
INFO  13:24:57,007 - #43 (
INFO  13:24:57,007 - #20 c
INFO  13:24:57,007 - #41 ,
INFO  13:24:57,007 - #20 x
INFO  13:24:57,007 - #41 ,
INFO  13:24:57,007 - #20 i
INFO  13:24:57,007 - #44 )
INFO  13:24:57,007 - #40 ;
INFO  13:24:57,007 - #14 read
INFO  13:24:57,007 - #43 (
INFO  13:24:57,007 - #20 x
INFO  13:24:57,007 - #44 )
INFO  13:24:57,007 - #40 ;
INFO  13:24:57,007 - #10 do
INFO  13:24:57,007 - #47 {
INFO  13:24:57,007 - #8 if
INFO  13:24:57,007 - #43 (
INFO  13:24:57,007 - #20 x
INFO  13:24:57,007 - #34 <=
INFO  13:24:57,007 - #21 0
INFO  13:24:57,007 - #44 )
INFO  13:24:57,012 - #3 break
INFO  13:24:57,012 - #40 ;
INFO  13:24:57,012 - #8 if
INFO  13:24:57,012 - #43 (
INFO  13:24:57,012 - #21 0
INFO  13:24:57,012 - #34 <=
INFO  13:24:57,012 - #20 x
INFO  13:24:57,012 - #35 &&
INFO  13:24:57,012 - #20 x
INFO  13:24:57,012 - #33 <
INFO  13:24:57,012 - #20 size
INFO  13:24:57,012 - #44 )
INFO  13:24:57,012 - #47 {
INFO  13:24:57,012 - #20 val
INFO  13:24:57,012 - #42 .
INFO  13:24:57,012 - #20 putp
INFO  13:24:57,012 - #43 (
INFO  13:24:57,012 - #20 val
INFO  13:24:57,012 - #42 .
INFO  13:24:57,012 - #20 getp
INFO  13:24:57,012 - #43 (
INFO  13:24:57,012 - #20 x
INFO  13:24:57,012 - #44 )
INFO  13:24:57,012 - #24 +
INFO  13:24:57,012 - #21 1
INFO  13:24:57,017 - #44 )
INFO  13:24:57,017 - #40 ;
INFO  13:24:57,017 - #48 }
INFO  13:24:57,017 - #6 else
INFO  13:24:57,017 - #8 if
INFO  13:24:57,017 - #43 (
INFO  13:24:57,017 - #20 size
INFO  13:24:57,017 - #33 <
INFO  13:24:57,017 - #20 x
INFO  13:24:57,019 - #35 &&
INFO  13:24:57,019 - #20 x
INFO  13:24:57,019 - #33 <
INFO  13:24:57,019 - #21 0
INFO  13:24:57,019 - #44 )
INFO  13:24:57,019 - #47 {
INFO  13:24:57,019 - #20 val
INFO  13:24:57,020 - #42 .
INFO  13:24:57,020 - #20 putn
INFO  13:24:57,020 - #43 (
INFO  13:24:57,020 - #20 val
INFO  13:24:57,020 - #42 .
INFO  13:24:57,020 - #20 getn
INFO  13:24:57,020 - #43 (
INFO  13:24:57,021 - #20 x
INFO  13:24:57,021 - #44 )
INFO  13:24:57,021 - #24 +
INFO  13:24:57,021 - #21 1
INFO  13:24:57,021 - #44 )
INFO  13:24:57,021 - #40 ;
INFO  13:24:57,021 - #48 }
INFO  13:24:57,021 - #14 read
INFO  13:24:57,021 - #43 (
INFO  13:24:57,021 - #20 x
INFO  13:24:57,021 - #44 )
INFO  13:24:57,021 - #40 ;
INFO  13:24:57,021 - #48 }
INFO  13:24:57,021 - #11 while
INFO  13:24:57,021 - #43 (
INFO  13:24:57,021 - #23 true
INFO  13:24:57,021 - #44 )
INFO  13:24:57,021 - #40 ;
INFO  13:24:57,021 - #13 print
INFO  13:24:57,021 - #43 (
INFO  13:24:57,021 - #25 -
INFO  13:24:57,021 - #21 3
INFO  13:24:57,021 - #24 +
INFO  13:24:57,021 - #21 5
INFO  13:24:57,021 - #44 )
INFO  13:24:57,021 - #40 ;
INFO  13:24:57,021 - #13 print
INFO  13:24:57,021 - #43 (
INFO  13:24:57,021 - #22 v
INFO  13:24:57,026 - #44 )
INFO  13:24:57,026 - #40 ;
INFO  13:24:57,026 - #13 print
INFO  13:24:57,026 - #43 (
INFO  13:24:57,026 - #20 x
INFO  13:24:57,026 - #33 <
ERROR 13:24:57,026 - 
Sintaksna greska na liniji 50
ERROR 13:24:57,026 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 50
