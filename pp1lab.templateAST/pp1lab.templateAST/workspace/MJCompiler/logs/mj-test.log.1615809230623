INFO  12:50:31,858 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:50:31,918 - #2 program
INFO  12:50:31,918 - #20 Pro
INFO  12:50:31,918 - #7 const
INFO  12:50:31,918 - #20 int
INFO  12:50:31,918 - #20 size
INFO  12:50:31,918 - #37 =
INFO  12:50:31,918 - #21 10
INFO  12:50:31,918 - #40 ;
INFO  12:50:31,923 - #4 class
INFO  12:50:31,923 - #20 Table
INFO  12:50:31,923 - #47 {
INFO  12:50:31,923 - #20 int
INFO  12:50:31,923 - #20 pos
INFO  12:50:31,923 - #45 [
INFO  12:50:31,923 - #46 ]
INFO  12:50:31,923 - #41 ,
INFO  12:50:31,923 - #20 neg
INFO  12:50:31,923 - #45 [
INFO  12:50:31,923 - #46 ]
INFO  12:50:31,923 - #40 ;
INFO  12:50:31,923 - #47 {
INFO  12:50:31,923 - #16 void
INFO  12:50:31,923 - #20 putp
INFO  12:50:31,928 - #43 (
INFO  12:50:31,928 - #20 int
INFO  12:50:31,928 - #20 a
INFO  12:50:31,928 - #41 ,
INFO  12:50:31,928 - #20 int
INFO  12:50:31,928 - #20 idx
INFO  12:50:31,928 - #44 )
INFO  12:50:31,928 - #47 {
INFO  12:50:31,928 - #20 this
INFO  12:50:31,928 - #42 .
INFO  12:50:31,928 - #20 pos
INFO  12:50:31,928 - #45 [
INFO  12:50:31,933 - #20 idx
INFO  12:50:31,933 - #46 ]
INFO  12:50:31,933 - #37 =
INFO  12:50:31,933 - #20 a
INFO  12:50:31,933 - #40 ;
INFO  12:50:31,933 - #48 }
INFO  12:50:31,933 - #16 void
INFO  12:50:31,933 - #20 putn
INFO  12:50:31,933 - #43 (
INFO  12:50:31,933 - #20 int
INFO  12:50:31,933 - #20 a
INFO  12:50:31,933 - #41 ,
INFO  12:50:31,933 - #20 int
INFO  12:50:31,933 - #20 idx
INFO  12:50:31,933 - #44 )
INFO  12:50:31,933 - #47 {
INFO  12:50:31,938 - #20 this
INFO  12:50:31,938 - #42 .
INFO  12:50:31,938 - #20 neg
INFO  12:50:31,938 - #45 [
INFO  12:50:31,938 - #20 idx
INFO  12:50:31,938 - #46 ]
INFO  12:50:31,938 - #37 =
INFO  12:50:31,938 - #20 a
INFO  12:50:31,938 - #40 ;
INFO  12:50:31,938 - #48 }
INFO  12:50:31,938 - #20 int
INFO  12:50:31,938 - #20 getp
INFO  12:50:31,938 - #43 (
INFO  12:50:31,938 - #20 int
INFO  12:50:31,938 - #20 idx
INFO  12:50:31,938 - #44 )
INFO  12:50:31,938 - #47 {
INFO  12:50:31,943 - #15 return
INFO  12:50:31,943 - #20 pos
INFO  12:50:31,943 - #45 [
INFO  12:50:31,943 - #20 idx
INFO  12:50:31,943 - #46 ]
INFO  12:50:31,943 - #40 ;
INFO  12:50:31,943 - #48 }
INFO  12:50:31,943 - #20 int
INFO  12:50:31,943 - #20 getn
INFO  12:50:31,943 - #43 (
INFO  12:50:31,943 - #20 int
INFO  12:50:31,943 - #20 idx
INFO  12:50:31,943 - #44 )
INFO  12:50:31,943 - #47 {
INFO  12:50:31,943 - #15 return
INFO  12:50:31,943 - #20 neg
INFO  12:50:31,943 - #45 [
INFO  12:50:31,943 - #20 idx
INFO  12:50:31,943 - #46 ]
INFO  12:50:31,943 - #40 ;
INFO  12:50:31,943 - #48 }
INFO  12:50:31,943 - #48 }
INFO  12:50:31,943 - #48 }
INFO  12:50:31,943 - #20 Table
INFO  12:50:31,948 - #20 val
INFO  12:50:31,948 - #40 ;
INFO  12:50:31,948 - #47 {
INFO  12:50:31,948 - #16 void
INFO  12:50:31,948 - #20 f
INFO  12:50:31,948 - #43 (
INFO  12:50:31,948 - #20 char
INFO  12:50:31,948 - #20 ch
INFO  12:50:31,948 - #41 ,
INFO  12:50:31,948 - #20 int
INFO  12:50:31,948 - #20 a
INFO  12:50:31,948 - #41 ,
INFO  12:50:31,948 - #20 int
INFO  12:50:31,948 - #20 arg
INFO  12:50:31,948 - #44 )
INFO  12:50:31,948 - #20 int
INFO  12:50:31,948 - #20 x
INFO  12:50:31,948 - #40 ;
INFO  12:50:31,948 - #47 {
INFO  12:50:31,948 - #20 x
INFO  12:50:31,948 - #37 =
INFO  12:50:31,948 - #20 arg
INFO  12:50:31,948 - #40 ;
INFO  12:50:31,948 - #48 }
INFO  12:50:31,948 - #16 void
INFO  12:50:31,948 - #20 main
INFO  12:50:31,948 - #43 (
INFO  12:50:31,948 - #44 )
INFO  12:50:31,953 - #20 int
INFO  12:50:31,953 - #20 x
INFO  12:50:31,953 - #41 ,
INFO  12:50:31,953 - #20 i
INFO  12:50:31,953 - #40 ;
INFO  12:50:31,953 - #20 char
INFO  12:50:31,953 - #20 c
INFO  12:50:31,953 - #40 ;
INFO  12:50:31,953 - #47 {
INFO  12:50:31,953 - #20 val
INFO  12:50:31,953 - #37 =
INFO  12:50:31,953 - #12 new
INFO  12:50:31,953 - #20 Table
INFO  12:50:31,953 - #40 ;
INFO  12:50:31,953 - #20 val
INFO  12:50:31,953 - #42 .
INFO  12:50:31,953 - #20 pos
INFO  12:50:31,953 - #37 =
INFO  12:50:31,953 - #12 new
INFO  12:50:31,953 - #20 int
INFO  12:50:31,953 - #45 [
INFO  12:50:31,953 - #20 size
INFO  12:50:31,953 - #46 ]
INFO  12:50:31,953 - #40 ;
INFO  12:50:31,953 - #20 val
INFO  12:50:31,953 - #42 .
INFO  12:50:31,953 - #20 neg
INFO  12:50:31,953 - #37 =
INFO  12:50:31,953 - #12 new
INFO  12:50:31,953 - #20 int
INFO  12:50:31,953 - #45 [
INFO  12:50:31,953 - #20 size
INFO  12:50:31,953 - #46 ]
INFO  12:50:31,953 - #40 ;
INFO  12:50:31,953 - #20 i
INFO  12:50:31,953 - #37 =
INFO  12:50:31,953 - #21 0
INFO  12:50:31,953 - #40 ;
INFO  12:50:31,953 - #10 do
INFO  12:50:31,953 - #47 {
INFO  12:50:31,953 - #20 val
INFO  12:50:31,958 - #42 .
INFO  12:50:31,958 - #20 putp
INFO  12:50:31,958 - #43 (
INFO  12:50:31,958 - #21 0
INFO  12:50:31,958 - #41 ,
INFO  12:50:31,958 - #20 i
INFO  12:50:31,958 - #44 )
INFO  12:50:31,958 - #40 ;
INFO  12:50:31,958 - #20 val
INFO  12:50:31,958 - #42 .
INFO  12:50:31,958 - #20 putn
INFO  12:50:31,958 - #43 (
INFO  12:50:31,958 - #21 0
INFO  12:50:31,958 - #41 ,
INFO  12:50:31,958 - #20 i
INFO  12:50:31,958 - #44 )
INFO  12:50:31,958 - #40 ;
INFO  12:50:31,958 - #20 i
INFO  12:50:31,958 - #38 ++
INFO  12:50:31,958 - #40 ;
INFO  12:50:31,958 - #48 }
INFO  12:50:31,958 - #11 while
INFO  12:50:31,958 - #43 (
INFO  12:50:31,958 - #20 i
INFO  12:50:31,958 - #33 <
INFO  12:50:31,958 - #20 size
INFO  12:50:31,958 - #44 )
INFO  12:50:31,963 - #40 ;
INFO  12:50:31,963 - #20 f
INFO  12:50:31,963 - #43 (
INFO  12:50:31,963 - #20 c
INFO  12:50:31,963 - #41 ,
INFO  12:50:31,963 - #20 x
INFO  12:50:31,963 - #41 ,
INFO  12:50:31,963 - #20 i
INFO  12:50:31,963 - #44 )
INFO  12:50:31,963 - #40 ;
INFO  12:50:31,963 - #14 read
INFO  12:50:31,963 - #43 (
INFO  12:50:31,963 - #20 x
INFO  12:50:31,963 - #44 )
INFO  12:50:31,963 - #40 ;
INFO  12:50:31,963 - #10 do
INFO  12:50:31,963 - #47 {
INFO  12:50:31,963 - #8 if
INFO  12:50:31,963 - #43 (
INFO  12:50:31,963 - #20 x
INFO  12:50:31,963 - #34 <=
INFO  12:50:31,963 - #21 0
INFO  12:50:31,963 - #44 )
INFO  12:50:31,963 - #3 break
INFO  12:50:31,963 - #40 ;
INFO  12:50:31,963 - #8 if
INFO  12:50:31,968 - #43 (
INFO  12:50:31,968 - #21 0
INFO  12:50:31,968 - #34 <=
INFO  12:50:31,968 - #20 x
INFO  12:50:31,968 - #35 &&
INFO  12:50:31,968 - #20 x
INFO  12:50:31,968 - #33 <
INFO  12:50:31,968 - #20 size
INFO  12:50:31,968 - #44 )
INFO  12:50:31,968 - #47 {
INFO  12:50:31,968 - #20 val
INFO  12:50:31,968 - #42 .
INFO  12:50:31,968 - #20 putp
INFO  12:50:31,968 - #43 (
INFO  12:50:31,968 - #20 val
INFO  12:50:31,968 - #42 .
INFO  12:50:31,968 - #20 getp
INFO  12:50:31,968 - #43 (
INFO  12:50:31,968 - #20 x
INFO  12:50:31,968 - #44 )
INFO  12:50:31,968 - #24 +
INFO  12:50:31,968 - #21 1
INFO  12:50:31,968 - #44 )
INFO  12:50:31,968 - #40 ;
INFO  12:50:31,973 - #48 }
INFO  12:50:31,973 - #6 else
INFO  12:50:31,973 - #8 if
INFO  12:50:31,973 - #43 (
INFO  12:50:31,973 - #20 size
INFO  12:50:31,973 - #33 <
INFO  12:50:31,973 - #20 x
INFO  12:50:31,973 - #35 &&
INFO  12:50:31,973 - #20 x
INFO  12:50:31,973 - #33 <
INFO  12:50:31,973 - #21 0
INFO  12:50:31,973 - #44 )
INFO  12:50:31,973 - #47 {
INFO  12:50:31,973 - #20 val
INFO  12:50:31,973 - #42 .
INFO  12:50:31,973 - #20 putn
INFO  12:50:31,973 - #43 (
INFO  12:50:31,973 - #20 val
INFO  12:50:31,973 - #42 .
INFO  12:50:31,973 - #20 getn
INFO  12:50:31,973 - #43 (
INFO  12:50:31,973 - #20 x
INFO  12:50:31,973 - #44 )
INFO  12:50:31,973 - #24 +
INFO  12:50:31,973 - #21 1
INFO  12:50:31,973 - #44 )
INFO  12:50:31,973 - #40 ;
INFO  12:50:31,973 - #48 }
INFO  12:50:31,973 - #14 read
INFO  12:50:31,973 - #43 (
INFO  12:50:31,973 - #20 x
INFO  12:50:31,973 - #44 )
INFO  12:50:31,973 - #40 ;
INFO  12:50:31,973 - #48 }
INFO  12:50:31,978 - #11 while
INFO  12:50:31,978 - #43 (
INFO  12:50:31,978 - #23 true
INFO  12:50:31,978 - #44 )
INFO  12:50:31,978 - #40 ;
INFO  12:50:31,978 - #13 print
INFO  12:50:31,978 - #43 (
INFO  12:50:31,978 - #21 3
INFO  12:50:31,978 - #44 )
INFO  12:50:31,978 - #40 ;
INFO  12:50:31,978 - #13 print
INFO  12:50:31,978 - #43 (
INFO  12:50:31,978 - #22 'x'
INFO  12:50:31,978 - #44 )
