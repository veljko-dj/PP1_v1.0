INFO  12:43:20,465 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:43:20,535 - #2 program
INFO  12:43:20,535 - #20 Pro
INFO  12:43:20,535 - #7 const
INFO  12:43:20,535 - #20 int
INFO  12:43:20,535 - #20 size
INFO  12:43:20,535 - #37 =
INFO  12:43:20,535 - #21 10
INFO  12:43:20,535 - #40 ;
INFO  12:43:20,540 - #4 class
INFO  12:43:20,540 - #20 Table
INFO  12:43:20,540 - #47 {
INFO  12:43:20,540 - #20 int
INFO  12:43:20,540 - #20 pos
INFO  12:43:20,540 - #45 [
INFO  12:43:20,540 - #46 ]
INFO  12:43:20,540 - #41 ,
INFO  12:43:20,540 - #20 neg
INFO  12:43:20,540 - #45 [
INFO  12:43:20,540 - #46 ]
INFO  12:43:20,540 - #40 ;
INFO  12:43:20,540 - #47 {
INFO  12:43:20,540 - #16 void
INFO  12:43:20,540 - #20 putp
INFO  12:43:20,545 - #43 (
INFO  12:43:20,545 - #20 int
INFO  12:43:20,545 - #20 a
INFO  12:43:20,545 - #41 ,
INFO  12:43:20,545 - #20 int
INFO  12:43:20,545 - #20 idx
INFO  12:43:20,545 - #44 )
INFO  12:43:20,545 - #47 {
INFO  12:43:20,545 - #20 this
INFO  12:43:20,545 - #42 .
INFO  12:43:20,545 - #20 pos
INFO  12:43:20,545 - #45 [
INFO  12:43:20,545 - #20 idx
INFO  12:43:20,545 - #46 ]
INFO  12:43:20,545 - #37 =
INFO  12:43:20,550 - #20 a
INFO  12:43:20,550 - #40 ;
INFO  12:43:20,550 - #48 }
INFO  12:43:20,550 - #16 void
INFO  12:43:20,550 - #20 putn
INFO  12:43:20,550 - #43 (
INFO  12:43:20,550 - #20 int
INFO  12:43:20,550 - #20 a
INFO  12:43:20,550 - #41 ,
INFO  12:43:20,550 - #20 int
INFO  12:43:20,550 - #20 idx
INFO  12:43:20,550 - #44 )
INFO  12:43:20,550 - #47 {
INFO  12:43:20,550 - #20 this
INFO  12:43:20,550 - #42 .
INFO  12:43:20,550 - #20 neg
INFO  12:43:20,550 - #45 [
INFO  12:43:20,550 - #20 idx
INFO  12:43:20,550 - #46 ]
INFO  12:43:20,550 - #37 =
INFO  12:43:20,550 - #20 a
INFO  12:43:20,550 - #40 ;
INFO  12:43:20,550 - #48 }
INFO  12:43:20,550 - #20 int
INFO  12:43:20,550 - #20 getp
INFO  12:43:20,555 - #43 (
INFO  12:43:20,555 - #20 int
INFO  12:43:20,555 - #20 idx
INFO  12:43:20,555 - #44 )
INFO  12:43:20,555 - #47 {
INFO  12:43:20,560 - #15 return
INFO  12:43:20,560 - #20 pos
INFO  12:43:20,560 - #45 [
INFO  12:43:20,560 - #20 idx
INFO  12:43:20,560 - #46 ]
INFO  12:43:20,560 - #40 ;
INFO  12:43:20,560 - #48 }
INFO  12:43:20,560 - #20 int
INFO  12:43:20,560 - #20 getn
INFO  12:43:20,560 - #43 (
INFO  12:43:20,560 - #20 int
INFO  12:43:20,560 - #20 idx
INFO  12:43:20,560 - #44 )
INFO  12:43:20,560 - #47 {
INFO  12:43:20,560 - #15 return
INFO  12:43:20,560 - #20 neg
INFO  12:43:20,560 - #45 [
INFO  12:43:20,560 - #20 idx
INFO  12:43:20,560 - #46 ]
INFO  12:43:20,560 - #40 ;
INFO  12:43:20,565 - #48 }
INFO  12:43:20,565 - #48 }
INFO  12:43:20,565 - #48 }
INFO  12:43:20,565 - #20 Table
INFO  12:43:20,565 - #20 val
INFO  12:43:20,565 - #40 ;
INFO  12:43:20,565 - #47 {
INFO  12:43:20,565 - #16 void
INFO  12:43:20,565 - #20 f
INFO  12:43:20,565 - #43 (
INFO  12:43:20,565 - #20 char
INFO  12:43:20,565 - #20 ch
INFO  12:43:20,565 - #41 ,
INFO  12:43:20,565 - #20 int
INFO  12:43:20,565 - #20 a
INFO  12:43:20,565 - #41 ,
INFO  12:43:20,565 - #20 int
INFO  12:43:20,565 - #20 arg
INFO  12:43:20,565 - #44 )
INFO  12:43:20,565 - #20 int
INFO  12:43:20,565 - #20 x
INFO  12:43:20,565 - #40 ;
INFO  12:43:20,565 - #47 {
INFO  12:43:20,565 - #20 x
INFO  12:43:20,565 - #37 =
INFO  12:43:20,565 - #20 arg
INFO  12:43:20,565 - #40 ;
INFO  12:43:20,565 - #48 }
INFO  12:43:20,565 - #16 void
INFO  12:43:20,565 - #20 main
INFO  12:43:20,565 - #43 (
INFO  12:43:20,565 - #44 )
INFO  12:43:20,565 - #20 int
INFO  12:43:20,570 - #20 x
INFO  12:43:20,570 - #41 ,
INFO  12:43:20,570 - #20 i
INFO  12:43:20,570 - #40 ;
INFO  12:43:20,570 - #20 char
INFO  12:43:20,570 - #20 c
INFO  12:43:20,570 - #40 ;
INFO  12:43:20,570 - #47 {
INFO  12:43:20,570 - #20 val
INFO  12:43:20,570 - #37 =
INFO  12:43:20,570 - #12 new
INFO  12:43:20,570 - #20 Table
INFO  12:43:20,570 - #40 ;
INFO  12:43:20,570 - #20 val
INFO  12:43:20,570 - #42 .
INFO  12:43:20,570 - #20 pos
INFO  12:43:20,570 - #37 =
INFO  12:43:20,570 - #12 new
INFO  12:43:20,570 - #20 int
INFO  12:43:20,570 - #45 [
INFO  12:43:20,570 - #20 size
INFO  12:43:20,570 - #46 ]
INFO  12:43:20,570 - #40 ;
INFO  12:43:20,570 - #20 val
INFO  12:43:20,570 - #42 .
INFO  12:43:20,570 - #20 neg
INFO  12:43:20,570 - #37 =
INFO  12:43:20,570 - #12 new
INFO  12:43:20,570 - #20 int
INFO  12:43:20,570 - #45 [
INFO  12:43:20,570 - #20 size
INFO  12:43:20,570 - #46 ]
INFO  12:43:20,570 - #40 ;
INFO  12:43:20,570 - #20 i
INFO  12:43:20,570 - #37 =
INFO  12:43:20,570 - #21 0
INFO  12:43:20,570 - #40 ;
INFO  12:43:20,570 - #10 do
INFO  12:43:20,570 - #47 {
INFO  12:43:20,570 - #20 val
INFO  12:43:20,570 - #42 .
INFO  12:43:20,570 - #20 putp
INFO  12:43:20,570 - #43 (
INFO  12:43:20,570 - #21 0
INFO  12:43:20,575 - #41 ,
INFO  12:43:20,575 - #20 i
INFO  12:43:20,575 - #44 )
INFO  12:43:20,575 - #40 ;
INFO  12:43:20,575 - #20 val
INFO  12:43:20,575 - #42 .
INFO  12:43:20,575 - #20 putn
INFO  12:43:20,575 - #43 (
INFO  12:43:20,575 - #21 0
INFO  12:43:20,575 - #41 ,
INFO  12:43:20,575 - #20 i
INFO  12:43:20,575 - #44 )
INFO  12:43:20,575 - #40 ;
INFO  12:43:20,575 - #20 i
INFO  12:43:20,575 - #38 ++
INFO  12:43:20,575 - #40 ;
INFO  12:43:20,575 - #48 }
INFO  12:43:20,575 - #11 while
INFO  12:43:20,575 - #43 (
INFO  12:43:20,575 - #20 i
INFO  12:43:20,575 - #33 <
INFO  12:43:20,575 - #20 size
INFO  12:43:20,575 - #44 )
INFO  12:43:20,575 - #40 ;
INFO  12:43:20,575 - #20 f
INFO  12:43:20,575 - #43 (
INFO  12:43:20,575 - #20 c
INFO  12:43:20,575 - #41 ,
INFO  12:43:20,575 - #20 x
INFO  12:43:20,575 - #41 ,
INFO  12:43:20,575 - #20 i
INFO  12:43:20,575 - #44 )
INFO  12:43:20,575 - #40 ;
INFO  12:43:20,575 - #14 read
INFO  12:43:20,575 - #43 (
INFO  12:43:20,575 - #20 x
INFO  12:43:20,575 - #44 )
INFO  12:43:20,575 - #40 ;
INFO  12:43:20,580 - #10 do
INFO  12:43:20,580 - #47 {
INFO  12:43:20,580 - #8 if
INFO  12:43:20,580 - #43 (
INFO  12:43:20,580 - #20 x
INFO  12:43:20,580 - #34 <=
INFO  12:43:20,580 - #21 0
INFO  12:43:20,580 - #44 )
INFO  12:43:20,580 - #3 break
INFO  12:43:20,580 - #40 ;
INFO  12:43:20,580 - #8 if
INFO  12:43:20,580 - #43 (
INFO  12:43:20,580 - #21 0
INFO  12:43:20,580 - #34 <=
INFO  12:43:20,580 - #20 x
INFO  12:43:20,580 - #35 &&
INFO  12:43:20,580 - #20 x
INFO  12:43:20,580 - #33 <
INFO  12:43:20,580 - #20 size
INFO  12:43:20,580 - #44 )
INFO  12:43:20,580 - #47 {
INFO  12:43:20,580 - #20 val
INFO  12:43:20,580 - #42 .
INFO  12:43:20,580 - #20 putp
INFO  12:43:20,580 - #43 (
INFO  12:43:20,580 - #20 val
INFO  12:43:20,580 - #42 .
INFO  12:43:20,580 - #20 getp
INFO  12:43:20,580 - #43 (
INFO  12:43:20,580 - #20 x
INFO  12:43:20,580 - #44 )
INFO  12:43:20,580 - #24 +
INFO  12:43:20,580 - #21 1
INFO  12:43:20,580 - #44 )
INFO  12:43:20,585 - #40 ;
INFO  12:43:20,585 - #48 }
INFO  12:43:20,585 - #6 else
INFO  12:43:20,585 - #8 if
INFO  12:43:20,585 - #43 (
INFO  12:43:20,585 - #20 size
INFO  12:43:20,585 - #33 <
INFO  12:43:20,585 - #20 x
INFO  12:43:20,585 - #35 &&
INFO  12:43:20,585 - #20 x
INFO  12:43:20,585 - #33 <
INFO  12:43:20,585 - #21 0
INFO  12:43:20,585 - #44 )
INFO  12:43:20,585 - #47 {
INFO  12:43:20,585 - #20 val
INFO  12:43:20,585 - #42 .
INFO  12:43:20,585 - #20 putn
INFO  12:43:20,585 - #43 (
INFO  12:43:20,585 - #20 val
INFO  12:43:20,590 - #42 .
INFO  12:43:20,590 - #20 getn
INFO  12:43:20,590 - #43 (
INFO  12:43:20,590 - #20 x
INFO  12:43:20,590 - #44 )
INFO  12:43:20,590 - #24 +
INFO  12:43:20,590 - #21 1
INFO  12:43:20,590 - #44 )
INFO  12:43:20,590 - #40 ;
INFO  12:43:20,590 - #48 }
INFO  12:43:20,590 - #14 read
INFO  12:43:20,590 - #43 (
INFO  12:43:20,590 - #20 x
INFO  12:43:20,590 - #44 )
INFO  12:43:20,590 - #40 ;
INFO  12:43:20,590 - #48 }
INFO  12:43:20,590 - #11 while
INFO  12:43:20,590 - #43 (
INFO  12:43:20,590 - #23 true
INFO  12:43:20,590 - #44 )
INFO  12:43:20,590 - #40 ;
INFO  12:43:20,590 - #13 print
INFO  12:43:20,590 - #43 (
INFO  12:43:20,590 - #20 x
INFO  12:43:20,590 - #33 <
ERROR 12:43:20,590 - 
Sintaksna greska na liniji 48
ERROR 12:43:20,590 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
