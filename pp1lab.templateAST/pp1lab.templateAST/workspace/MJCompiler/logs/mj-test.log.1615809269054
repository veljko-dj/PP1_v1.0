INFO  12:53:50,623 - Compiling source file: F:\Fakultet i Srednja\Elektrotehnicki\7. semestar\PP\Projekat\PP_Projekat_v1.0\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:53:50,688 - #2 program
INFO  12:53:50,688 - #20 Pro
INFO  12:53:50,688 - #7 const
INFO  12:53:50,688 - #20 int
INFO  12:53:50,693 - #20 size
INFO  12:53:50,693 - #37 =
INFO  12:53:50,693 - #21 10
INFO  12:53:50,693 - #40 ;
INFO  12:53:50,693 - #4 class
INFO  12:53:50,693 - #20 Table
INFO  12:53:50,693 - #47 {
INFO  12:53:50,693 - #20 int
INFO  12:53:50,693 - #20 pos
INFO  12:53:50,693 - #45 [
INFO  12:53:50,693 - #46 ]
INFO  12:53:50,693 - #41 ,
INFO  12:53:50,693 - #20 neg
INFO  12:53:50,693 - #45 [
INFO  12:53:50,693 - #46 ]
INFO  12:53:50,693 - #40 ;
INFO  12:53:50,698 - #47 {
INFO  12:53:50,698 - #16 void
INFO  12:53:50,698 - #20 putp
INFO  12:53:50,698 - #43 (
INFO  12:53:50,698 - #20 int
INFO  12:53:50,698 - #20 a
INFO  12:53:50,698 - #41 ,
INFO  12:53:50,698 - #20 int
INFO  12:53:50,698 - #20 idx
INFO  12:53:50,698 - #44 )
INFO  12:53:50,698 - #47 {
INFO  12:53:50,698 - #20 this
INFO  12:53:50,698 - #42 .
INFO  12:53:50,698 - #20 pos
INFO  12:53:50,698 - #45 [
INFO  12:53:50,698 - #20 idx
INFO  12:53:50,698 - #46 ]
INFO  12:53:50,703 - #37 =
INFO  12:53:50,703 - #20 a
INFO  12:53:50,703 - #40 ;
INFO  12:53:50,703 - #48 }
INFO  12:53:50,703 - #16 void
INFO  12:53:50,703 - #20 putn
INFO  12:53:50,703 - #43 (
INFO  12:53:50,703 - #20 int
INFO  12:53:50,703 - #20 a
INFO  12:53:50,703 - #41 ,
INFO  12:53:50,708 - #20 int
INFO  12:53:50,708 - #20 idx
INFO  12:53:50,708 - #44 )
INFO  12:53:50,708 - #47 {
INFO  12:53:50,708 - #20 this
INFO  12:53:50,708 - #42 .
INFO  12:53:50,708 - #20 neg
INFO  12:53:50,708 - #45 [
INFO  12:53:50,708 - #20 idx
INFO  12:53:50,708 - #46 ]
INFO  12:53:50,708 - #37 =
INFO  12:53:50,708 - #20 a
INFO  12:53:50,708 - #40 ;
INFO  12:53:50,708 - #48 }
INFO  12:53:50,708 - #20 int
INFO  12:53:50,708 - #20 getp
INFO  12:53:50,708 - #43 (
INFO  12:53:50,708 - #20 int
INFO  12:53:50,708 - #20 idx
INFO  12:53:50,708 - #44 )
INFO  12:53:50,708 - #47 {
INFO  12:53:50,708 - #15 return
INFO  12:53:50,708 - #20 pos
INFO  12:53:50,708 - #45 [
INFO  12:53:50,708 - #20 idx
INFO  12:53:50,708 - #46 ]
INFO  12:53:50,708 - #40 ;
INFO  12:53:50,713 - #48 }
INFO  12:53:50,713 - #20 int
INFO  12:53:50,713 - #20 getn
INFO  12:53:50,713 - #43 (
INFO  12:53:50,713 - #20 int
INFO  12:53:50,713 - #20 idx
INFO  12:53:50,713 - #44 )
INFO  12:53:50,713 - #47 {
INFO  12:53:50,713 - #15 return
INFO  12:53:50,713 - #20 neg
INFO  12:53:50,713 - #45 [
INFO  12:53:50,713 - #20 idx
INFO  12:53:50,713 - #46 ]
INFO  12:53:50,713 - #40 ;
INFO  12:53:50,713 - #48 }
INFO  12:53:50,713 - #48 }
INFO  12:53:50,713 - #48 }
INFO  12:53:50,713 - #20 Table
INFO  12:53:50,713 - #20 val
INFO  12:53:50,713 - #40 ;
INFO  12:53:50,713 - #47 {
INFO  12:53:50,713 - #16 void
INFO  12:53:50,713 - #20 f
INFO  12:53:50,713 - #43 (
INFO  12:53:50,713 - #20 char
INFO  12:53:50,718 - #20 ch
INFO  12:53:50,718 - #41 ,
INFO  12:53:50,718 - #20 int
INFO  12:53:50,718 - #20 a
INFO  12:53:50,718 - #41 ,
INFO  12:53:50,718 - #20 int
INFO  12:53:50,718 - #20 arg
INFO  12:53:50,718 - #44 )
INFO  12:53:50,718 - #20 int
INFO  12:53:50,718 - #20 x
INFO  12:53:50,718 - #40 ;
INFO  12:53:50,718 - #47 {
INFO  12:53:50,718 - #20 x
INFO  12:53:50,718 - #37 =
INFO  12:53:50,718 - #20 arg
INFO  12:53:50,718 - #40 ;
INFO  12:53:50,718 - #48 }
INFO  12:53:50,718 - #16 void
INFO  12:53:50,718 - #20 main
INFO  12:53:50,718 - #43 (
INFO  12:53:50,718 - #44 )
INFO  12:53:50,718 - #20 int
INFO  12:53:50,718 - #20 x
INFO  12:53:50,718 - #41 ,
INFO  12:53:50,718 - #20 i
INFO  12:53:50,718 - #40 ;
INFO  12:53:50,718 - #20 char
INFO  12:53:50,718 - #20 c
INFO  12:53:50,718 - #40 ;
INFO  12:53:50,718 - #47 {
INFO  12:53:50,718 - #20 val
INFO  12:53:50,718 - #37 =
INFO  12:53:50,718 - #12 new
INFO  12:53:50,723 - #20 Table
INFO  12:53:50,723 - #40 ;
INFO  12:53:50,728 - #20 val
INFO  12:53:50,728 - #42 .
INFO  12:53:50,728 - #20 pos
INFO  12:53:50,728 - #37 =
INFO  12:53:50,728 - #12 new
INFO  12:53:50,728 - #20 int
INFO  12:53:50,728 - #45 [
INFO  12:53:50,728 - #20 size
INFO  12:53:50,728 - #46 ]
INFO  12:53:50,728 - #40 ;
INFO  12:53:50,728 - #20 val
INFO  12:53:50,728 - #42 .
INFO  12:53:50,728 - #20 neg
INFO  12:53:50,728 - #37 =
INFO  12:53:50,728 - #12 new
INFO  12:53:50,728 - #20 int
INFO  12:53:50,728 - #45 [
INFO  12:53:50,728 - #20 size
INFO  12:53:50,728 - #46 ]
INFO  12:53:50,728 - #40 ;
INFO  12:53:50,728 - #20 i
INFO  12:53:50,728 - #37 =
INFO  12:53:50,728 - #21 0
INFO  12:53:50,728 - #40 ;
INFO  12:53:50,728 - #10 do
INFO  12:53:50,728 - #47 {
INFO  12:53:50,728 - #20 val
INFO  12:53:50,728 - #42 .
INFO  12:53:50,728 - #20 putp
INFO  12:53:50,728 - #43 (
INFO  12:53:50,728 - #21 0
INFO  12:53:50,728 - #41 ,
INFO  12:53:50,728 - #20 i
INFO  12:53:50,728 - #44 )
INFO  12:53:50,728 - #40 ;
INFO  12:53:50,733 - #20 val
INFO  12:53:50,733 - #42 .
INFO  12:53:50,733 - #20 putn
INFO  12:53:50,733 - #43 (
INFO  12:53:50,733 - #21 0
INFO  12:53:50,733 - #41 ,
INFO  12:53:50,733 - #20 i
INFO  12:53:50,733 - #44 )
INFO  12:53:50,733 - #40 ;
INFO  12:53:50,733 - #20 i
INFO  12:53:50,733 - #38 ++
INFO  12:53:50,733 - #40 ;
INFO  12:53:50,733 - #48 }
INFO  12:53:50,733 - #11 while
INFO  12:53:50,733 - #43 (
INFO  12:53:50,733 - #20 i
INFO  12:53:50,733 - #33 <
INFO  12:53:50,733 - #20 size
INFO  12:53:50,733 - #44 )
INFO  12:53:50,738 - #40 ;
INFO  12:53:50,738 - #20 f
INFO  12:53:50,738 - #43 (
INFO  12:53:50,738 - #20 c
INFO  12:53:50,738 - #41 ,
INFO  12:53:50,738 - #20 x
INFO  12:53:50,738 - #41 ,
INFO  12:53:50,738 - #20 i
INFO  12:53:50,738 - #44 )
INFO  12:53:50,738 - #40 ;
INFO  12:53:50,738 - #14 read
INFO  12:53:50,738 - #43 (
INFO  12:53:50,738 - #20 x
INFO  12:53:50,738 - #44 )
INFO  12:53:50,738 - #40 ;
INFO  12:53:50,738 - #10 do
INFO  12:53:50,738 - #47 {
INFO  12:53:50,738 - #8 if
INFO  12:53:50,738 - #43 (
INFO  12:53:50,738 - #20 x
INFO  12:53:50,738 - #34 <=
INFO  12:53:50,738 - #21 0
INFO  12:53:50,738 - #44 )
INFO  12:53:50,738 - #3 break
INFO  12:53:50,738 - #40 ;
INFO  12:53:50,738 - #8 if
INFO  12:53:50,743 - #43 (
INFO  12:53:50,743 - #21 0
INFO  12:53:50,743 - #34 <=
INFO  12:53:50,743 - #20 x
INFO  12:53:50,743 - #35 &&
INFO  12:53:50,743 - #20 x
INFO  12:53:50,743 - #33 <
INFO  12:53:50,743 - #20 size
INFO  12:53:50,743 - #44 )
INFO  12:53:50,743 - #47 {
INFO  12:53:50,743 - #20 val
INFO  12:53:50,743 - #42 .
INFO  12:53:50,743 - #20 putp
INFO  12:53:50,743 - #43 (
INFO  12:53:50,743 - #20 val
INFO  12:53:50,743 - #42 .
INFO  12:53:50,743 - #20 getp
INFO  12:53:50,743 - #43 (
INFO  12:53:50,743 - #20 x
INFO  12:53:50,743 - #44 )
INFO  12:53:50,743 - #24 +
INFO  12:53:50,743 - #21 1
INFO  12:53:50,743 - #44 )
INFO  12:53:50,743 - #40 ;
INFO  12:53:50,743 - #48 }
INFO  12:53:50,743 - #6 else
INFO  12:53:50,743 - #8 if
INFO  12:53:50,743 - #43 (
INFO  12:53:50,743 - #20 size
INFO  12:53:50,743 - #33 <
INFO  12:53:50,743 - #20 x
INFO  12:53:50,743 - #35 &&
INFO  12:53:50,743 - #20 x
INFO  12:53:50,743 - #33 <
INFO  12:53:50,743 - #21 0
INFO  12:53:50,743 - #44 )
INFO  12:53:50,743 - #47 {
INFO  12:53:50,743 - #20 val
INFO  12:53:50,753 - #42 .
INFO  12:53:50,753 - #20 putn
INFO  12:53:50,758 - #43 (
INFO  12:53:50,763 - #20 val
INFO  12:53:50,763 - #42 .
INFO  12:53:50,763 - #20 getn
INFO  12:53:50,763 - #43 (
INFO  12:53:50,763 - #20 x
INFO  12:53:50,763 - #44 )
INFO  12:53:50,763 - #24 +
INFO  12:53:50,763 - #21 1
INFO  12:53:50,763 - #44 )
INFO  12:53:50,763 - #40 ;
INFO  12:53:50,763 - #48 }
INFO  12:53:50,763 - #14 read
INFO  12:53:50,763 - #43 (
INFO  12:53:50,763 - #20 x
INFO  12:53:50,763 - #44 )
INFO  12:53:50,763 - #40 ;
INFO  12:53:50,763 - #48 }
INFO  12:53:50,763 - #11 while
INFO  12:53:50,763 - #43 (
INFO  12:53:50,763 - #23 true
INFO  12:53:50,763 - #44 )
INFO  12:53:50,768 - #40 ;
INFO  12:53:50,768 - #13 print
INFO  12:53:50,768 - #43 (
INFO  12:53:50,768 - #21 3
INFO  12:53:50,768 - #44 )
INFO  12:53:50,768 - #40 ;
INFO  12:53:50,768 - #13 print
INFO  12:53:50,768 - #43 (
INFO  12:53:50,768 - #22 'x'
INFO  12:53:50,768 - #44 )
